<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.ServiceBus</name>
  </assembly>
  <members>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException">
      <summary>授权尝试失败时发生的异常。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.AuthorizationFailedException.ErrorCode">
      <summary>获取或设置描述授权尝试失败原因的错误代码。</summary>
      <returns>其中一个<see cref="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode" />枚举值。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.AuthorizationFailedException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用序列化目标对象所需的数据填充一个<see cref="T:System.Runtime.Serialization.SerializationInfo" />对象。</summary>
      <param name="info">该<see cref="T:System.Runtime.Serialization.SerializationInfo" />对象用数据填充。</param>
      <param name="context">本次序列化的目标（见<see cref="T:System.Runtime.Serialization.StreamingContext" />）。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode">
      <summary>枚举授权尝试期间可能的失败原因。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.ExpiredToken">
      <summary>指定令牌已过期。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.Generic">
      <summary>指定错误属于通常性错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidAudience">
      <summary>指定受众无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidClaim">
      <summary>指定声明无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.InvalidSignature">
      <summary>指定签名无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MalformedToken">
      <summary>指定令牌格式错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingAudience">
      <summary>指定缺少受众。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingExpiresOn">
      <summary>指定缺少 ‘expires on’日期。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingIssuer">
      <summary>指定缺少颁发者。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingSignature">
      <summary>指定缺少签名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.AuthorizationFailedException.FailureCode.MissingToken">
      <summary>指定缺少令牌。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayBinding">
      <summary>表示客户端可通过绑定配置端点，该端点可与基于 ASMX 的 Web 服务以及符合 WS-I Basic Profile 1.1 的其他服务通信。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />类实例，其中包含绑定使用的指定安全类以及客户端使用的身份验证类。</summary>
      <param name="securityMode">结合 SOAP 消息用于客户端的安全类。</param>
      <param name="relayClientAuthenticationType">客户端使用的身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的使用指定配置的<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />实例。</summary>
      <param name="configurationName">待使用的配置。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.AllowCookies">
      <summary>获取或设置一个值，该值确定客户端是否允许 cookie。</summary>
      <returns>允许 cookie，则返回<see cref="T:System.Boolean" />；否则，不允许 cookie。默认值为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.BasicHttpRelayBinding.CreateBindingElements">
      <summary>返回当前绑定中包含的有序绑定元素集合。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。包含<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />描述的绑定元素的有序堆栈。绑定元素从下到上的顺序是传输、编码和安全性。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.EnvelopeVersion">
      <summary>获取用于此绑定处理的消息的 SOAP 版本。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.EnvelopeVersion" />。此绑定使用的值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.HostNameComparisonMode">
      <summary>获取或设置主机名的比较方式。</summary>
      <returns>主机名中使用的比较方法。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.IsDynamic">
      <summary>获取或设置绑定元素是否为动态。</summary>
      <returns>如果绑定元素是动态的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的 TCP 消息的缓冲池的最大允许尺寸。</summary>
      <returns>存储绑定处理的 TCP 消息的缓冲池的最大允许尺寸。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxBufferSize">
      <summary>获取或设置接收通道消息的缓冲区的最大尺寸。</summary>
      <returns>返回 <see cref="T:System.Int32" />。缓冲区的最大尺寸（以字节为单位），消息经处理用于此绑定配置的端点时存储至该缓冲区。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MaxReceivedMessageSize">
      <summary>获取或设置可在使用此绑定配置的通道上接收的消息的最大大小。</summary>
      <returns>返回 <see cref="T:System.Int64" />。绑定处理的消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.MessageEncoding">
      <summary>获取或设置消息编码的类型。</summary>
      <returns>返回一包含消息编码的 <see cref="T:System.ServiceModel.WSMessageEncoding" />。默认值为 Text。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ProxyAddress">
      <summary>获取或设置代理地址。</summary>
      <returns>返回一个包含代理地址的<see cref="T:System.Uri" />  默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.ReaderQuotas">
      <summary>获取或设置读者配额。</summary>
      <returns>返回一个 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />，它指定了对交换的 SOAP 消息的复杂性约束。以下“备注”部分提供了这些约束的默认值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Scheme">
      <summary>获取使用此绑定配置的通道和侦听器的 URI 传输方案。</summary>
      <returns>使用此绑定配置的通道和侦听器的 URI 传输方案。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.Security">
      <summary>获取与此绑定一起使用的安全绑定的集合。</summary>
      <returns>返回一个<see cref="T:Microsoft.ServiceBus.BasicHttpRelaySecurity" />，其中包含绑定中使用的安全设置。将默认值由 EndToEndBasicSecurityMode 设置为 Transport，由 RelayClientAuthenticationType set 设置为 RelayAccessToken, HttpRelayTransportSecurity with HttypProxyCredentialType of None, and BasicHttpRelayMessageSecurity with ClientCredentialType of BasicHttpMessageCredentialType.UserName and an AlgorithmSuite of SecurityAlgorithmSuite.Basic256。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是同步还是异步处理传入请求。</summary>
      <returns>如果同步处理传入请求，则返回 <see cref="T:System.Boolean" /> true；如果异步处理传入请求，则返回 false。默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TextEncoding">
      <summary>获取或设置消息文本所用的字符编码。</summary>
      <returns>返回一个指示所用字符编码的<see cref="T:System.Text.Encoding" />。默认值为 UTF8Encoding。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.TransferMode">
      <summary>获取或设置传输模式。</summary>
      <returns>返回一个指示使用绑定配置的服务是使用流式传输还是缓冲消息传输模式（或两种）的<see cref="T:System.ServiceModel.TransferMode" />。默认情况下，HTTP、TCP/IP 和命名管道传输使用缓消息传输模式。默认值为 buffered。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayBinding.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值确定客户端是否使用默认 Web 代理。</summary>
      <returns>如果客户端使用默认 Web 代理，则返回 true；否则，返回 false。默认值为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity">
      <summary>提供用于配置<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />消息级安全设置的属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.AlgorithmSuite">
      <summary>指定要结合<see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />使用的算法套件。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />，它将 256 位高级加密标准 (AES) 指定为对称加密算法。默认值为 Base256。此属性不能为空。</returns>
      <exception cref="ArgumentNullException"><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />的值为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity.ClientCredentialType">
      <summary>指定客户端进行身份验证的凭据类型。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" />，其中包含<see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" />枚举成员。默认值为 UserName ..</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.BasicHttpRelaySecurity">
      <summary>提供用于配置<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />绑定的安全设置的属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Message">
      <summary>获取<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />绑定的消息级安全设置。</summary>
      <returns>返回一个表示此绑定的消息级安全设置的 <see cref="T:Microsoft.ServiceBus.BasicHttpRelayMessageSecurity" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Mode">
      <summary>获取或设置<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />的安全模式。</summary>
      <returns>其中一个<see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" />枚举值。默认值为 None。</returns>
      <exception cref="ArgumentOutOfRangeException">该值不是<see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" />地合法值。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>获取或设置 Windows Azure Service Bus 服务使用的身份验证类型。</summary>
      <returns>返回一个<see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />，其中包含服务使用的身份验证类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.BasicHttpRelaySecurity.Transport">
      <summary>获取<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />绑定的传输级安全设置。</summary>
      <returns>返回一个包含安全设置的<see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectionStatusBehavior">
      <summary>一种端点行为，用于访问在 Windows Azure Service Bus 上侦听的服务的连接状态。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.#ctor">
      <summary>初始化 <see cref="T:Microsoft.ServiceBus.ConnectionStatusBehavior" /> 类的新实例。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Connecting">
      <summary>连接时发生。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.IsOnline">
      <summary>获取一个确定连接是否在线的值。</summary>
      <returns>如果连接在线，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectionStatusBehavior.LastError">
      <summary>获取最后一个错误。</summary>
      <returns>返回一个包含最后一个错误的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Offline">
      <summary>连接脱机时发生。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.ConnectionStatusBehavior.Online">
      <summary>连接在线时发生。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.Retry">
      <summary>重试连接。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>将指定的绑定参数添加到端点。</summary>
      <param name="serviceEndpoint">要更新的端点。</param>
      <param name="bindingParameters">要添加的绑定参数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>将指定的客户端行为应用于指定的端点。</summary>
      <param name="serviceEndpoint">要更新的端点。</param>
      <param name="behavior">要添加的行为。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>将指定的调度行为应用于服务端点。</summary>
      <param name="serviceEndpoint">要更新的端点。</param>
      <param name="endpointDispatcher">端点调度程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectionStatusBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>验证指定的端点。</summary>
      <param name="serviceEndpoint">要验证的端点。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivityMode">
      <summary>描述连接模式。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.AutoDetect">
      <summary>自动检测模式。基于自动检测机制自动在 TCP、HTTP 和 HTTPS 模式之间进行选择，该机制探测连接选项是否可用于当前网络环境。如果两者都可用，系统将默认选择 TCP。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Http">
      <summary>HTTP 模式。侦听器尝试 HTTP 连接，然后使用 Windows Azure Service Bus 服务进行 HTTPS 连接并轮询消息。这使您能够更轻松地解决 TCP 端口约束。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivityMode.Tcp">
      <summary>TCP 模式（默认）。侦听器将 Windows Azure Service Bus 服务的 TCP 连接创建到 9350 到 9354 范围内的目标端口。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ConnectivitySettings">
      <summary>保持连接设置对当前应用程序域中处于活动状态的所有基于 Windows Azure Service Bus 的端点有效。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ConnectivitySettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.ConnectivitySettings" />类的新实例。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ConnectivitySettings.connectivityMode">
      <summary>包含当前实例的 <see cref="T:Microsoft.ServiceBus.ConnectivityMode" />。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.IsReadOnly">
      <summary>获取一个值，该值确定连接设置是否为只读。</summary>
      <returns>如果连接设置是只读的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ConnectivitySettings.Mode">
      <summary>获取或设置当前应用程序域的连接模式。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.ConnectivityMode" />。包含连接模式。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.DiscoveryType">
      <summary>描述服务注册表中服务的发布行为。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Private">
      <summary>该服务不会在服务注册表中发布。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.DiscoveryType.Public">
      <summary>该服务将在服务注册表中发布。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode">
      <summary>一种枚举类型，它指定可以结合<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />使用的安全模式。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Message">
      <summary>使用 WS-Security SOAP 消息安全提供安全性。为了 <see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />，系统要求将服务器证书分别提供给客户端。此绑定的有效客户端凭据类型是 UserName 和 Certificate。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.None">
      <summary>传输过程中邮件不受保护。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.Transport">
      <summary>使用 HTTPS 提供安全性。必须使用 SSL 证书配置该服务。SOAP 消息使用 HTTPS 作为一个整体进行保护。该服务由客户端使用服务的 SSL 证书进行身份验证。客户端身份验证通过 ClientCredentialType 控制。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode.TransportWithMessageCredential">
      <summary>HTTPS 提供完整性、机密性和服务器身份验证。必须使用证书配置该服务。客户端身份验证通过 SOAP 消息安全性提供。当用户使用 UserName 或 Certificate 凭证进行身份验证并且存在用于保护邮件传输的现有 HTTPS 部署时，此模式适用。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndSecurityMode">
      <summary>确定 Windows Azure Service Bus 绑定的安全设置，并描述客户端和服务端点之间的安全关系。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Message">
      <summary>使用 SOAP 消息安全性提供安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.None">
      <summary>安全性已禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.Transport">
      <summary>使用传输安全性（通常为 SSL）提供安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndSecurityMode.TransportWithMessageCredential">
      <summary>安全传输（例如，HTTPS）提供完整性、机密性和身份验证，而 SOAP 消息安全性提供客户端身份验证。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode">
      <summary>指定可以结合<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />使用的安全性类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.None">
      <summary>表示 HTTP 请求不使用任何安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode.Transport">
      <summary>表示需要传输级安全性；客户端必须使用 HTTPS 与服务端点进行通信。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ExceptionErrorCodes">
      <summary>指定异常的错误代码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.AudienceNotFound">
      <summary>没有找到受众。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadGatewayFailure">
      <summary>错误是由错误的网关引起的。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.BadRequest">
      <summary>处理请求时遇到解析错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictGeneric">
      <summary>一般冲突错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ConflictOperationInProgress">
      <summary>正在进行操作。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.CorrelationFiltersExceeded">
      <summary>相关筛选器超出了其允许的最大数量。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.DataCommunicationError">
      <summary>数据通信的错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EndpointNotFound">
      <summary>找不到端点。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.EntityGone">
      <summary>找不到实体。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiredToken">
      <summary>令牌已过期。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ExpiresOnNotFound">
      <summary>找不到失效日期。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ForbiddenGeneric">
      <summary>一般禁止错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.GatewayTimeoutFailure">
      <summary>网关没有收到来自上游服务器的及时响应。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InternalFailure">
      <summary>内部错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidAudience">
      <summary>受众无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidDestination">
      <summary>目标无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.InvalidSignature">
      <summary>签名无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.IssuerNotFound">
      <summary>无法找到颁发者。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MalformedToken">
      <summary>格式错误的令牌。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.MissingToken">
      <summary>令牌丢失。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NamespaceNotFound">
      <summary>找不到命名空间。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.NoTransportSecurity">
      <summary>服务总线没有传输安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ProviderUnreachable">
      <summary>提供程序无法访问。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.ServerBusy">
      <summary>服务器很忙。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SignatureNotFound">
      <summary>无法找到签名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SqlFiltersExceeded">
      <summary>SQL 筛选器超出了允许的最大数量。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.StoreLockLost">
      <summary>存储锁丢失。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.SubscriptionsExceeded">
      <summary>订阅超过了允许的最大数量。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnauthorizedGeneric">
      <summary>通用未授权错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnknownExceptionDetail">
      <summary>未知异常的细节。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UnspecifiedInternalError">
      <summary>未指定的内部错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ExceptionErrorCodes.UpdateConflict">
      <summary>更新期间发生冲突。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement">
      <summary>表示用于指定在 Windows Azure Service Bus 上传输消息的 HTTP 传输的绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpRelayTransportBindingElement)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" />类实例，它使用要克隆的指定元素。</summary>
      <param name="elementToBeCloned">要克隆的元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" />类实例，它使用指定的客户端身份验证类型。</summary>
      <param name="relayClientAuthenticationType">客户端身份验证类型。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.AllowCookies">
      <summary>获取或设置一个值，该值指示客户端是否接受 cookies 并在后续请求中传播 cookies。</summary>
      <returns>如果允许 cookies，则为 true；否则为 false。默认为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>创建可用于创建通道的通道工厂。</summary>
      <returns>指定类型的通道工厂。</returns>
      <param name="context">通道的绑定上下文。</param>
      <typeparam name="TChannel">通道工厂的类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>为指定的通用通道创建通道侦听器。</summary>
      <returns>一个通道侦听器。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="TChannel">要侦听的通道类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>确定是否可以构建指定类型的通道工厂。</summary>
      <returns>如果可以创建通道工厂，则为 true；否则为 false。</returns>
      <param name="context">通道的绑定上下文。</param>
      <typeparam name="TChannel">要检查的通道类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示绑定元素是否可以为特定类型的通道创建侦听器。</summary>
      <returns>如果可以创建 IChannelListener 类侦听器，则为 true；否则为 false。</returns>
      <param name="context">为绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">侦听器接受的通道类型。</typeparam>
      <exception cref="ArgumentNullException">上下文为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Clone">
      <summary>返回绑定元素对象的副本。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.Channels.BindingElement" />，其中包含原件的深度克隆。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>创建一个内部渠道的<see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />。</summary>
      <returns>一个内部渠道的<see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从指定的绑定上下文中获取指定的属性。</summary>
      <returns>指定绑定上下文的属性。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">要获得的属性的类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.GetTransportTokenAssertion">
      <summary>获取表示安全绑定中使用的传输令牌的 XML 元素。</summary>
      <returns>安全绑定中使用的传输令牌。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.HostNameComparisonMode">
      <summary>获取或设置主机名使用的比较模式。</summary>
      <returns>主机名使用的比较模式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>使用<see cref="T:Microsoft.ServiceBus.HttpRelayTransportBindingElement" />绑定元素的当前实例的设置初始化指定的绑定元素。</summary>
      <param name="httpTransportElement">要初始化的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.IsDynamic">
      <summary>获取或设置绑定元素是否为动态。</summary>
      <returns>如果绑定元素是动态的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.KeepAliveEnabled">
      <summary>获取或设置一个值，该值指示是否与服务端点建立持久连接。</summary>
      <returns>如果对服务端点的请求包含值为 Keep-alive 的 Connection HTTP 标头，则为 true；否则为 false。默认为 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.MaxBufferSize">
      <summary>获取或设置要使用的缓冲区的最大尺寸。</summary>
      <returns>返回缓冲区的最大尺寸（以字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAddress">
      <summary>获取或设置一个 URI，该 URI 包含用于 HTTP 请求的代理地址。</summary>
      <returns>返回一个 <see cref="T:System.Uri" />，其中包含代理的地址。默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.ProxyAuthenticationScheme">
      <summary>获取或设置用于验证 HTTP 代理正在处理的客户端请求的身份验证方案。</summary>
      <returns>其中一个<see cref="T:System.Net.AuthenticationSchemes" />枚举值，其指定用于代理上的客户端身份验证的协议。默认值为 Anonymous。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>获取或设置中继客户端身份验证类型。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。包含身份验证类型。默认值为 RelayClientAuthenticationType.RelayAccessToken</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>返回 URI 方案。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导出有关绑定的自定义策略断言。</summary>
      <param name="exporter">可供您修改导出过程的元数据导出程序。</param>
      <param name="context">可供您插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>将自定义 Web 服务描述语言 (WSDL) 元素写入生成的合同 WSDL。</summary>
      <param name="exporter">导出合同信息的 WSDL 浏览器。</param>
      <param name="context">提供从导出的 WSDL 元素到合同描述的映射。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpRelayTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将自定义 Web 服务描述语言 (WSDL) 元素写入生成的端点 WSDL。</summary>
      <param name="exporter">导出合同信息的 WSDL 浏览器。</param>
      <param name="context">提供从导出的 WSDL 元素到端点描述的映射。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.TransferMode">
      <summary>获取或设置传输模式。</summary>
      <returns>返回一个包含传输模式的 <see cref="T:System.ServiceModel.TransferMode" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportBindingElement.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示是使用计算机范围的代理设置而不是用户特定的设置。</summary>
      <returns>如果使用机器范围的代理设置，则为 true；否则为 false。默认为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpRelayTransportSecurity">
      <summary>表示<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />的传输级安全设置。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpRelayTransportSecurity.ProxyCredentialType">
      <summary>获取或设置要用于对代理进行身份验证的客户端凭据的类型。</summary>
      <returns>返回一个包含客户端凭证的<see cref="T:System.ServiceModel.HttpProxyCredentialType" /> 。</returns>
      <exception cref="ArgumentOutOfRangeException">将属性设置为未定义的值。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement">
      <summary>表示用于指定传输消息所用的 HTTPS 中继传输的绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor">
      <summary>初始化一个新的使用默认设置的<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" />实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.HttpsRelayTransportBindingElement)">
      <summary>初始化一个新的使用指定元素的<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" />实例。</summary>
      <param name="elementToBeCloned">要克隆的元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定类型客户端认证的<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" />实例。</summary>
      <param name="relayClientAuthenticationType">中继客户端身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Clone">
      <summary>创建当前绑定元素的深度复制。</summary>
      <returns>当前绑定元素的深度复制。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.CreateInnerChannelBindingElement">
      <summary>创建内部通道的<see cref="T:System.ServiceModel.Channels.HttpTransportBindingElement" />绑定元素。</summary>
      <returns>内部通道的绑定元素。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从指定的绑定上下文中获取指定的属性。</summary>
      <returns>包含该属性的绑定元素。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">要获得的属性的类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.InitializeInnerChannelBindingElement(System.ServiceModel.Channels.HttpTransportBindingElement)">
      <summary>使用<see cref="T:Microsoft.ServiceBus.HttpsRelayTransportBindingElement" />绑定元素的当前实例的设置初始化指定的绑定元素。</summary>
      <param name="httpTransportElement">要初始化的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HttpsRelayTransportBindingElement.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>传输的 URI 方案，即“HTTPS”。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionState">
      <summary>描述混合连接的当前连接状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Direct">
      <summary>直接连接。通信方使用在最直接的网络路径上路由的套接字进行连接，而不是通过 Windows Azure Service Bus 基础结构进行连接。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.HybridConnectionState.Relayed">
      <summary>中继连接。通信方通过中继套接字和 Windows Azure Service Bus 基础结构进行连接。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs">
      <summary>表示混合连接状态更改的参数。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.#ctor(Microsoft.ServiceBus.HybridConnectionState)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.HybridConnectionStateChangedArgs" />类的新实例。</summary>
      <param name="state">混合连接的状态。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.HybridConnectionStateChangedArgs.ConnectionState">
      <summary>获取混合连接的当前连接状态。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />。包含连接状态。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.IConnectionStatus">
      <summary>描述单向连接的当前状态。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Connecting">
      <summary>在建立连接时发生。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.IsOnline">
      <summary>获取一个值，该值确定连接是否在线。</summary>
      <returns>如果连接处于活动状态且在线，则为 true；如果从当前网络位置没有连接到 Windows Azure Service Bus，则返回 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.IConnectionStatus.LastError">
      <summary>检索尝试从脱机状态重新建立连接时遇到的最后一个错误。</summary>
      <returns>返回一个包含最后一个错误的 <see cref="T:System.Exception" />。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Offline">
      <summary>连接变为离线时发生。</summary>
    </member>
    <member name="E:Microsoft.ServiceBus.IConnectionStatus.Online">
      <summary>连接变为在线时发生。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.IHybridConnectionStatus">
      <summary>提供对混合连接通道的当前连接状态的访问。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionState">
      <summary>获取混合连接的当前连接状态。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.HybridConnectionState" />。包含连接状态。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.IHybridConnectionStatus.ConnectionStateChanged">
      <summary>连接状态更改时发生。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.InvalidRequestException">
      <summary>发生无效请求时引出异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.InvalidRequestException" /> 类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化一个新的使用指定信息和上下文的<see cref="T:Microsoft.ServiceBus.InvalidRequestException" />实例。</summary>
      <param name="info">保存有关引发异常的序列化对象数据。</param>
      <param name="context">包含有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String)">
      <summary>初始化一个新的使用指定消息的<see cref="T:Microsoft.ServiceBus.InvalidRequestException" />实例。</summary>
      <param name="message">描述错误的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.InvalidRequestException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的使用指定消息和内部异常的<see cref="T:Microsoft.ServiceBus.InvalidRequestException" />实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常，如果未指定内部异常，则返回空。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection">
      <summary>描述绑定的中继连接上的消息安全性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.AlgorithmSuite">
      <summary>设置或获取 SOAP 级消息安全的算法套件。</summary>
      <returns>返回一个包含算法套件的<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。默认值为 Base256。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayConnection.ClientCredentialType">
      <summary>获取或设置用于客户端身份验证的客户端凭据的类型。</summary>
      <returns>返回一个包含凭据的 <see cref="T:System.ServiceModel.MessageCredentialType" />。默认为 Windows。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp">
      <summary>允许在<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定上设置消息级安全属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.AlgorithmSuite">
      <summary>指定 SOAP 级消息安全的算法套件。</summary>
      <returns>返回<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.ClientCredentialType">
      <summary>指定客户端身份验证所用的客户端凭据的类型。</summary>
      <returns>返回一个包含算法套件的<see cref="T:System.ServiceModel.MessageCredentialType" />。默认值为 Basic256。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.IsSecureConversationEnabled">
      <summary>仅在可扩展性场景中用于指示派生自<see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayHttp" />的实例是否配置用于执行安全对话。</summary>
      <returns>始终返回 true，除非在派生类中重写。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayHttp.NegotiateServiceCredential">
      <summary>获取或设置一个值，该值指示服务凭据是在带外客户端配置还是通过协商过程从服务获取。</summary>
      <returns>如果通过协商过程获得服务凭证，则返回 true;否则为 false。默认为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway">
      <summary>通过 Windows Azure Service Bus 中继进行单向连接的消息安全性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.AlgorithmSuite">
      <summary>获取或设置用于保障 SOAP 级消息安全性的算法套件。</summary>
      <returns>返回一个包含算法套件的<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" /> 。默认为 Basic256，它将 256 位高级加密标准 (AES) 指定为对称加密算法。</returns>
      <exception cref="T:System.ArgumentNullException"><see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />的值为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType">
      <summary>获取或设置客户端用于向 SOAP 级服务进行身份验证的客户端凭据的类型。</summary>
      <returns>返回一个包含凭据类型的<see cref="T:System.ServiceModel.MessageCredentialType" />。默认值为 Certificate。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:Microsoft.ServiceBus.MessageSecurityOverRelayOneway.ClientCredentialType" /> 的值不是有效的<see cref="T:System.ServiceModel.MessageCredentialType" />。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManager">
      <summary>表示在服务命名空间中管理实体（例如队列、主题、订阅和规则）时使用的定位标记。您必须提供服务命名空间地址和访问凭据才能管理服务命名空间。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化一个新的具有指定地址<see cref="T:Microsoft.ServiceBus.NamespaceManager" />的实例。</summary>
      <param name="addresses">服务命名空间的完整地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>初始化一个新的具有指定地址和设置<see cref="T:Microsoft.ServiceBus.NamespaceManager" />的实例。</summary>
      <param name="addresses">服务命名空间的完整地址。</param>
      <param name="settings">一个包含 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 和 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> 属性的<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>初始化一个新的具有给定地址和令牌提供程序的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="addresses">服务命名空间的完整地址。</param>
      <param name="tokenProvider">安全令牌提供程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="addresses">服务命名空间的完整 URI 地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址和设置的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="addresses">服务命名空间的完整 URI 地址。</param>
      <param name="settings">一个包含 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 和 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> 属性的<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址和令牌提供程序的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="addresses">服务命名空间的完整 URI 地址。</param>
      <param name="tokenProvider">安全令牌提供程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String)">
      <summary>初始化一个新的具有给定服务命名空间地址的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>初始化一个新的具有给定服务命名空间基址和<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整地址。</param>
      <param name="settings">一个包含 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 和 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> 属性的<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> 或<paramref name="settings" />为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>初始化一个新的具有给定服务命名空间基址和令牌提供程序的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整地址。</param>
      <param name="tokenProvider">安全令牌提供程序。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> 或<paramref name="token provider" />为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri)">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整 URI 地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.NamespaceManagerSettings)">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址和<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整 URI 地址。</param>
      <param name="settings">一个包含 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 和 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" /> 属性的<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> 或<paramref name="settings" />为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.#ctor(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>初始化一个新的具有给定服务命名空间 URI 基址和<see cref="T:Microsoft.ServiceBus.TokenProvider" />对象的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <param name="address">服务命名空间的完整 URI 地址。</param>
      <param name="tokenProvider">安全令牌提供程序对象。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" /> 或<paramref name="token provider" />为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Address">
      <summary>获取服务命名空间基址。</summary>
      <returns>一个表示服务命名空间基址的<see cref="T:System.Uri" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)" />的异步版本。</summary>
      <returns>一个引用异步操作以创建队列的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">队列描述对象。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同一服务名称空间下具有相同名称和路径的队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">不支持描述中指定的大小或已达到最大允许配额。您必须指定一个受支持的大小值，删除现有实体或增加配额大小。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">服务器因逻辑操作而过载。您可以考虑以下任何操作：等待并重试调用此函数。在重试之前移除实体（例如，再发送之前接收消息）。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)" />的异步版本。</summary>
      <returns>一个引用异步操作以创建队列的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同一服务名称空间下具有相同名称和路径的队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">不支持描述中指定的大小或已达到最大允许配额。您必须指定一个受支持的大小值，删除现有实体或增加配额大小。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">订阅描述对象。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">订阅描述对象。</param>
      <param name="ruleDescription">规则描述对象。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">订阅描述对象。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filters.FilterExpression)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="ruleDescription">规则描述对象。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建订阅操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建主题操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">主题描述对象。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginCreateTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)" /> 方法的异步版本。</summary>
      <returns>一个表示异步创建主题操作状态的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同一服务名称空间下具有相同名称和路径的队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">不支持描述中指定的大小或已达到最大允许配额。您必须指定一个受支持的大小值，删除现有实体或增加配额大小。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">服务器因逻辑操作而过载。您可以考虑以下任何操作：等待并重试调用此函数。在重试之前移除实体（例如，再发送之前接收消息）。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来删除队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">此路径下不存在队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来删除订阅的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">队列相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginDeleteTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作以删除主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueue(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues" />的异步版本。</summary>
      <returns>一个引用异步操作来获取队列集合的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetQueues(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取队列集合的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="filter">用来筛选队列的字符串。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetRules(System.String,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
      <param name="filter">用来筛选规则的字符串。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscription(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取订阅的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有订阅的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetSubscriptions(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)" />的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有订阅的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="filter">用来筛选订阅的字符串。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopic(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetTopics(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取服务命名空间中所有主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="filter">用于筛选要检索的主题的字符串。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginGetVersionInfo(System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来获取版本信息的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersioninfo(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginQueueExists(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来检查服务命名空间中是否存在队列的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginSubscriptionExists(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来检查服务命名空间中是否存在订阅的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginTopicExists(System.String,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作来检查服务命名空间中是否存在主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作以更新队列的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">队列描述。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作以更新订阅的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">订阅描述。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.BeginUpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription,System.AsyncCallback,System.Object)">
      <summary><see cref="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(System.String)" /> 方法的异步版本。</summary>
      <returns>一个引用异步操作以更新主题的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="description">主题描述。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.Create">
      <summary>创建一个新的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <returns>一个新的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateFromConnectionString(System.String)">
      <summary>创建一个新的使用指定连接字符串的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</summary>
      <returns>一个新的<see cref="T:Microsoft.ServiceBus.NamespaceManager" />实例。</returns>
      <param name="connectionString">所用的连接字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>使用<paramref name="description" /> 参数中指定的属性创建新的通知中心。</summary>
      <returns>一个描述新建通知中心的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />对象。</returns>
      <param name="description">描述将用于创建新通知中心的属性的描述对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>使用<paramref name="description" />参数中指定的属性异步创建新的通知中心。</summary>
      <returns>一个描述新建通知中心的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />对象。</returns>
      <param name="description">描述将用于创建新通知中心的属性的描述对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>使用指定的队列描述在服务命名空间中创建新队列。</summary>
      <returns>新建队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">描述将用于创建新队列的属性的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueue(System.String)">
      <summary>使用指定的路径在服务命名空间中创建新队列。</summary>
      <returns>新建队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 290 个字符。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同一服务名称空间下具有相同名称和路径的队列或主题。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">不支持描述中指定的大小或已达到最大允许配额。您必须指定一个受支持的大小值，删除现有实体或增加配额大小。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">服务器因逻辑操作而过载。您可以考虑以下任何操作：等待并重试调用此函数。在重试之前移除实体（例如，再发送之前接收消息）。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>使用指定的队列描述在服务命名空间中异步创建新队列。</summary>
      <returns>新建队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">描述将用于创建新队列的属性的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateQueueAsync(System.String)">
      <summary>使用指定的路径在服务命名空间中异步创建新队列。</summary>
      <returns>新建队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>使用指定的队列描述在服务命名空间中异步创建新中继。</summary>
      <returns>新建中继的<see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />。</returns>
      <param name="description">描述将用于创建新中继的属性的描述对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateRelayAsync(System.String,Microsoft.ServiceBus.RelayType)">
      <summary>使用指定的路径和类型在服务命名空间中异步创建新队列。</summary>
      <returns>新建中继的<see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="type">中继类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>使用指定的订阅描述在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的订阅描述和筛选表达示在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的订阅描述和规则描述在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
      <param name="ruleDescription">描述消息匹配和操作的属性的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String)">
      <summary>使用指定主题路径和订阅名称在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的主题路径、订阅名称和筛选表达示在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscription(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的主题路径、订阅名称和规则描述在服务命名空间中创建新订阅。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="ruleDescription">描述消息匹配和操作的属性的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>使用指定的订阅描述在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的订阅描述和筛选表达示在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的订阅描述和规则描述在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="description">描述将用于创建新订阅的属性的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
      <param name="ruleDescription">描述消息匹配和操作的属性的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String)">
      <summary>使用指定主题路径和订阅名称在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的主题路径、订阅名称和筛选表达示在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="filter">筛选器表达式用于捕获满足筛选表达式值的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateSubscriptionAsync(System.String,System.String,Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的主题路径、订阅名称和规则描述在服务命名空间中异步创建新订阅。</summary>
      <returns>异步创建的订阅。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="ruleDescription">描述消息匹配和操作的属性的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>使用指定的主题描述在服务命名空间中创建新主题。</summary>
      <returns>新建主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="description">描述将用于创建新主题的属性的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopic(System.String)">
      <summary>使用指定的服务命名空间路径在服务命名空间中创建新主题。</summary>
      <returns>新建主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于<see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">同一服务名称空间下具有相同名称和路径的队列或主题。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">不支持描述中指定的大小或已达到最大允许配额。您必须指定一个受支持的大小值，删除现有实体或增加配额大小。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>使用指定的主题描述在服务命名空间中异步创建新主题。</summary>
      <returns>异步操作。</returns>
      <param name="description">描述将用于创建新主题的属性的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.CreateTopicAsync(System.String)">
      <summary>使用指定的服务命名空间路径在服务命名空间中异步创建新主题。</summary>
      <returns>异步操作。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHub(System.String)">
      <summary>删除<paramref name="path" />中的通知中心。</summary>
      <param name="path">通知中心的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteNotificationHubAsync(System.String)">
      <summary>异步删除<paramref name="path" />中的通知中心。</summary>
      <returns>异步操作。</returns>
      <param name="path">通知中心的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueue(System.String)">
      <summary>删除服务命名空间基址相对路径描述的队列。</summary>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">此路径下不存在队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteQueueAsync(System.String)">
      <summary>异步删除服务命名空间基址相对路径描述的队列。</summary>
      <returns>异步删除队列操作。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteRelayAsync(System.String)">
      <summary>异步删除服务命名空间基址相对路径描述的中继。</summary>
      <returns>异步删除中继操作。</returns>
      <param name="path">中继相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscription(System.String,System.String)">
      <summary>使用指定的主题路径和订阅名称删除订阅。</summary>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">要删除的订阅名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteSubscriptionAsync(System.String,System.String)">
      <summary>使用指定的主题路径和订阅名称异步删除订阅。</summary>
      <returns>异步删除订阅操作。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="name">要删除的订阅名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopic(System.String)">
      <summary>删除服务命名空间基址相对路径描述的主题。</summary>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.DeleteTopicAsync(System.String)">
      <summary>异步删除服务命名空间基址相对路径描述的主题。</summary>
      <returns>异步删除主题操作。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateQueue(System.IAsyncResult)">
      <summary>结束创建队列的异步请求。</summary>
      <returns>新建队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="result">表示队列创建结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateSubscription(System.IAsyncResult)">
      <summary>结束创建订阅的异步请求。</summary>
      <returns>新建订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="result">表示订阅创建结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndCreateTopic(System.IAsyncResult)">
      <summary>结束创建主题的异步请求。</summary>
      <returns>新建主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="result">表示主题创建结果的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="result" /> 为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteQueue(System.IAsyncResult)">
      <summary>结束删除队列的异步请求。</summary>
      <param name="result">表示队列删除结果的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">此路径下不存在队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteRegistration(System.IAsyncResult)">
      <summary>结束删除注册的异步请求。</summary>
      <param name="result">表示注册删除结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteSubscription(System.IAsyncResult)">
      <summary>结束删除订阅的异步请求。</summary>
      <param name="result">表示订阅删除结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndDeleteTopic(System.IAsyncResult)">
      <summary>结束删除主题的异步请求。</summary>
      <param name="result">表示主题删除结果的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.QueueNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">此路径下不存在队列。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueue(System.IAsyncResult)">
      <summary>结束获取队列的异步请求。</summary>
      <returns>队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />句柄，如果服务名称空间中不存在队列，则为空。</returns>
      <param name="result">表示队列获取结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetQueues(System.IAsyncResult)">
      <summary>结束检索服务名称空间中所有队列的异步请求。</summary>
      <returns>表示服务名称空间中所有队列集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象。如果该服务名称空间中不存在队列，则返回空集。</returns>
      <param name="result">引用结束检索服务名称空间中所有队列的未清异步请求的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetRules(System.IAsyncResult)">
      <summary>结束检索服务名称空间中所有规则的异步请求。</summary>
      <returns>表示服务名称空间中所有规则集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象。如果该服务名称空间中不存在规则，则返回空集。</returns>
      <param name="result">表示规则获取结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscription(System.IAsyncResult)">
      <summary>结束获取订阅的异步请求。</summary>
      <returns>订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />句柄，如果服务名称空间中不存在订阅，则为空。</returns>
      <param name="result">表示订阅获取结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetSubscriptions(System.IAsyncResult)">
      <summary>结束检索服务名称空间中所有订阅的异步请求。</summary>
      <returns>表示服务名称空间中所有订阅集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象。如果该服务名称空间中不存在订阅，则返回空集。</returns>
      <param name="result">引用结束检索服务名称空间中所有订阅的未清异步请求的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopic(System.IAsyncResult)">
      <summary>结束获取主题的异步请求。</summary>
      <returns>主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />句柄，如果服务名称空间中不存在主题，则为空。</returns>
      <param name="result">表示主题获取结果的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="result" /> 为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetTopics(System.IAsyncResult)">
      <summary>结束检索服务名称空间中所有主题的异步请求。</summary>
      <returns>表示服务名称空间中主题集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象。如果该服务名称空间中不存在主题，则返回空集。</returns>
      <param name="result">引用结束检索服务名称空间中所有主题的未清异步请求的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndGetVersionInfo(System.IAsyncResult)">
      <summary>结束获取版本信息的异步请求。</summary>
      <returns>版本信息。</returns>
      <param name="result">表示主题获取版本信息结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndQueueExists(System.IAsyncResult)">
      <summary>结束确定服务名称空间中是否存在队列的异步请求。</summary>
      <returns>如果服务名称空间中存在队列；则为 true；否则为 false。</returns>
      <param name="result">表示检查队列是否存在的结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndSubscriptionExists(System.IAsyncResult)">
      <summary>结束确定服务名称空间中是否存在订阅的异步请求。</summary>
      <returns>如果服务名称空间中存在订阅；则为 true；否则为 false。</returns>
      <param name="result">表示检查订阅是否存在的结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndTopicExists(System.IAsyncResult)">
      <summary>结束确定服务名称空间中是否存在主题的异步请求。</summary>
      <returns>如果服务名称空间中存在订阅；则为 true；否则为 false。</returns>
      <param name="result">表示检查订主题是否存在的结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateQueue(System.IAsyncResult)">
      <summary>结束更新队列的异步请求。</summary>
      <returns>队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />句柄，如果服务名称空间中不存在队列，则为空。</returns>
      <param name="result">表示队列更新结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateSubscription(System.IAsyncResult)">
      <summary>结束更新订阅的异步请求。</summary>
      <returns>订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />句柄，如果服务名称空间中不存在订阅，则为空。</returns>
      <param name="result">表示订阅更新结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.EndUpdateTopic(System.IAsyncResult)">
      <summary>结束更新主题的异步请求。</summary>
      <returns>主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />句柄，如果服务名称空间中不存在主题，则为空。</returns>
      <param name="result">表示主题更新结果的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHub(System.String)">
      <summary>从服务命名空间中检索通知中心的描述。</summary>
      <returns>服务名称空间的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />。</returns>
      <param name="path">服务命名空间的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubAsync(System.String)">
      <summary>异步检索服务命名空间中通知中心的描述。</summary>
      <returns>检索服务命名空间中通知中心描述的异步操作。</returns>
      <param name="path">服务命名空间的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubs">
      <summary>从服务命名空间中检索通知中心的描述。</summary>
      <returns>服务命名空间中的通知中心的描述列表。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetNotificationHubsAsync">
      <summary>异步检索服务命名空间中通知中心的描述。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueue(System.String)">
      <summary>检索服务命名空间中的队列。</summary>
      <returns>队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" /> 句柄，如果服务名称空间中不存在队列，则为<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" />异常。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效，或 <paramref name="path" /> 以“/”开始或结束。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">服务名称空间中不存在队列。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueueAsync(System.String)">
      <summary>异步检索服务命名空间中的队列。</summary>
      <returns>异步操作。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues">
      <summary>检索服务命名空间中所有队列的可枚举集合。</summary>
      <returns>表示服务名称空间中所有队列集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在队列，则返回空集。</returns>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueues(System.String)">
      <summary>使用指定的筛选器检索服务命名空间中所有队列的可枚举集合。您可以通过实体名称（包括开头）、实体长度（Gt 或 Lt）、创建、更新和访问时间（Gt 或 Lt）的组合进行筛选。</summary>
      <returns>表示服务名称空间中所有队列集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在队列，则返回空集。</returns>
      <param name="filter">筛选要检索的队列所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync">
      <summary>异步检索服务命名空间中所有队列的可枚举集合。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetQueuesAsync(System.String)">
      <summary>使用指定的过滤器异步检索服务命名空间中所有队列的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="filter">筛选要检索的队列所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelayAsync(System.String)">
      <summary>使用指定路径异步检索服务命名空间中所有中继的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="path">中继路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRelaysAsync">
      <summary>异步检索服务命名空间中所有中继的可枚举集合。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String)">
      <summary>检索服务命名空间中所有规则的可枚举集合。</summary>
      <returns>表示服务名称空间中所有规则集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在规则，则返回空集。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRules(System.String,System.String,System.String)">
      <summary>使用指定的主题路径、订阅名称和筛选器检索服务命名空间中所有规则的可枚举集合。</summary>
      <returns>表示服务名称空间中所有规则集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在规则，则返回空集。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
      <param name="filter">筛选要检索的队列所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String)">
      <summary>异步检索服务命名空间中所有规则的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetRulesAsync(System.String,System.String,System.String)">
      <summary>使用指定的主题路径、订阅名称和筛选器异步检索服务命名空间中所有规则的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">相对于服务命名空间基址的主题路径。</param>
      <param name="subscriptionName">订阅的名称。</param>
      <param name="filter">筛选要检索的队列所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscription(System.String,System.String)">
      <summary>检索服务命名空间中的主题。</summary>
      <returns>订阅的 <see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />句柄，如果服务名称空间中不存在订阅，则为 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" /> 异常。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">服务名称空间中不存在订阅。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionAsync(System.String,System.String)">
      <summary>异步检索服务命名空间中的主题。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String)">
      <summary>检索服务命名空间中所有订阅的可枚举集合。</summary>
      <returns>表示服务名称空间中所有订阅集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在订阅，则返回空集。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptions(System.String,System.String)">
      <summary>使用指定的主题路径和筛选器检索服务名称空间中所有订阅的可枚举集合。</summary>
      <returns>表示服务名称空间中所有订阅集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在订阅，则返回空集。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="filter">筛选要检索的订阅所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String)">
      <summary>异步检索服务命名空间中所有订阅的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetSubscriptionsAsync(System.String,System.String)">
      <summary>异步检索服务命名空间中所有订阅的可枚举集合。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="filter">筛选要检索的订阅所用的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopic(System.String)">
      <summary>检索服务命名空间中的主题。</summary>
      <returns>主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />引用，如果服务名称空间中不存在主题，则为<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" />异常。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为空或无效。</exception>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">服务命名空间中不存在主题。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicAsync(System.String)">
      <summary>异步检索服务命名空间中的主题。</summary>
      <returns>异步操作。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics">
      <summary>检索服务命名空间中的主题集合。</summary>
      <returns>表示当前服务名称空间中所有主题集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在主题，则返回空集。</returns>
      <exception cref="T:System.TimeoutException">操作超时。超时时间通过<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类初始化。如果超时值相对较低，您可能需要增加<see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout" />的属性值以避免由此引发的异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">该<see cref="T:Microsoft.ServiceBus.NamespaceManager" />对象没有执行此操作的足够权限。你应该检查以确保你的 <see cref="T:Microsoft.ServiceBus.NamespaceManager" /> 有正确的 <see cref="P:Microsoft.ServiceBus.NamespaceManagerSettings.Credential" /> 凭据来执行此操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopics(System.String)">
      <summary>使用指定的筛选器检索服务命名空间中的主题集。您可以通过实体名称（包括开头）、实体长度（Gt 或 Lt）、创建、更新和访问时间（Gt 或 Lt）的组合进行筛选。</summary>
      <returns>表示当前服务名称空间中所有主题集合的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象，如果不存在主题，则返回空集。</returns>
      <param name="filter">用于筛选要检索的主题的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync">
      <summary>异步检索服务命名空间中的主题集。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetTopicsAsync(System.String)">
      <summary>异步检索服务命名空间中的主题集。</summary>
      <returns>异步操作。</returns>
      <param name="filter">用于筛选要检索的主题的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfo">
      <summary>检索格式为“YYYY-MM”的字符串，该字符串指示服务器或服务可以处理的最大支持协议版本。</summary>
      <returns>字符串指示服务器或服务可以处理的最大支持协议版本。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.GetVersionInfoAsync">
      <summary>异步检索格式为“YYYY-MM”的字符串，该字符串指示服务器或服务可以处理的最大支持协议版本。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExists(System.String)">
      <summary>确定服务命名空间中指定的<paramref name="path" />是否存在通知中心。</summary>
      <returns>如果服务命名空间中指定的<paramref name="path" />存在通知中心，则为 true；否则为 false。</returns>
      <param name="path">通知中心的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.NotificationHubExistsAsync(System.String)">
      <summary>异步确定服务命名空间中指定的<paramref name="path" />是否存在通知中心。</summary>
      <returns>异步操作。</returns>
      <param name="path">通知中心的路径。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.NamespaceManager.ProtocolVersion">
      <summary>指定格式为“YYYY-MM”的字符串指示客户端的协议版本。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExists(System.String)">
      <summary>确定服务名称空间中是否存在队列。</summary>
      <returns>如果服务名称空间中存在队列；则为 true；否则为 false。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.QueueExistsAsync(System.String)">
      <summary>异步确定服务名称空间中是否存在队列。</summary>
      <returns>异步操作。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.RelayExistsAsync(System.String)">
      <summary>异步确定服务名称空间中是否存在中继。</summary>
      <returns>异步操作。</returns>
      <param name="path">中继相对于服务命名空间基址的路径。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManager.Settings">
      <summary>获取服务命名空间的客户端设置。</summary>
      <returns>表示服务命名空间客户端设置的<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExists(System.String,System.String)">
      <summary>确定服务名称空间中是否存在订阅。</summary>
      <returns>如果服务名称空间中存在订阅；则为 true；否则为 false。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.SubscriptionExistsAsync(System.String,System.String)">
      <summary>异步确定服务名称空间中是否存在订阅。</summary>
      <returns>异步操作。</returns>
      <param name="topicPath">主题相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExists(System.String)">
      <summary>确定服务名称空间中是否存在主题。</summary>
      <returns>如果服务名称空间中存在主题；则为 true；否则为 false。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.TopicExistsAsync(System.String)">
      <summary>异步确定服务名称空间中是否存在主题。</summary>
      <returns>异步操作。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHub(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>使用<paramref name="description" /> 参数中指定的路径更新现有通知中心。所有通知中心属性都将使用<paramref name="description" />参数中指定的属性覆盖。</summary>
      <returns>包含通知中心更新描述的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />对象。</returns>
      <param name="description">描述将用于更新通知中心的属性的描述对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateNotificationHubAsync(Microsoft.ServiceBus.Notifications.NotificationHubDescription)">
      <summary>使用<paramref name="description" /> 参数中指定的路径异步更新现有通知中心。所有通知中心属性都将使用<paramref name="description" />参数中指定的属性覆盖。</summary>
      <returns>包含通知中心更新描述的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />对象。</returns>
      <param name="description">描述将用于更新通知中心的属性的描述对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueue(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>允许更新队列。</summary>
      <returns>已更新队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />。</returns>
      <param name="description">描述待更新队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateQueueAsync(Microsoft.ServiceBus.Messaging.QueueDescription)">
      <summary>异步允许更新队列。</summary>
      <returns>异步操作。</returns>
      <param name="description">描述待更新队列的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateRelayAsync(Microsoft.ServiceBus.Messaging.RelayDescription)">
      <summary>异步允许更新中继。</summary>
      <returns>异步操作。</returns>
      <param name="description">描述待更新中继的<see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscription(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>允许更新订阅。</summary>
      <returns>已更新订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />。</returns>
      <param name="description">描述待更新订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateSubscriptionAsync(Microsoft.ServiceBus.Messaging.SubscriptionDescription)">
      <summary>异步允许更新订阅。</summary>
      <returns>异步操作。</returns>
      <param name="description">描述待更新订阅的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopic(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>允许更新主题。</summary>
      <returns>已更新主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />。</returns>
      <param name="description">描述待更新主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManager.UpdateTopicAsync(Microsoft.ServiceBus.Messaging.TopicDescription)">
      <summary>异步允许更新主题。</summary>
      <returns>异步操作。</returns>
      <param name="description">描述待更新主题的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />对象。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NamespaceManagerSettings">
      <summary>包含命名空间管理器的设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NamespaceManagerSettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NamespaceManagerSettings" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.OperationTimeout">
      <summary>获取或设置所有服务命名空间管理操作的操作超时时间段，例如 GetQueue、CreateQueue 等。</summary>
      <returns>表示超时时间的<see cref="T:System.TimeSpan" />对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.RetryPolicy">
      <summary>获取或设置与命名空间管理器关联的不可靠操作和瞬态条件的重试机制的基本实现。</summary>
      <returns>与命名空间管理器关联的不可靠操作和瞬态条件的重试机制的基本实现。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NamespaceManagerSettings.TokenProvider">
      <summary>获取或设置安全令牌提供程序。</summary>
      <returns>安全令牌提供程序。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetEventRelayBinding">
      <summary>表示支持单向事件多播并允许任意数量的事件发布者和事件使用者在同一端点集合的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType)">
      <summary>初始化一个新的使用指定安全模式和中继客户端身份验证的<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />实例。</summary>
      <param name="securityMode">结合 SOAP 消息用于客户端的安全类。</param>
      <param name="relayClientAuthenticationType">客户端使用的身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>初始化一个新的使用指定传输、编码和安全元素的<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />实例。</summary>
      <param name="transport">待使用的传输元素。</param>
      <param name="encoding">待使用的编码元素。</param>
      <param name="security">结合 SOAP 消息用于客户端的安全类。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的使用指定配置的<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />实例。</summary>
      <param name="configurationName">待使用的配置名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.ApplyConfiguration(System.String)">
      <summary>将与指定名称对应的配置元素中的设置应用于此绑定元素的当前实例。</summary>
      <param name="configurationName">要从中进行设置的配置元素的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetEventRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>检索确定指定的绑定元素是否与当前实例匹配的值。</summary>
      <returns>如果绑定匹配，则返回 true；否则，返回 false。</returns>
      <param name="transport">检查当前实例的传输。</param>
      <param name="encoding">检查当前实例的编码。</param>
      <param name="session">检查当前实例的会话。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelayBinding">
      <summary>表示通过云进行安全单向连接的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定安全模式和身份验证类型的<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />实例。</summary>
      <param name="securityMode">安全模式。</param>
      <param name="relayClientAuthenticationType">身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>初始化一个新的使用指定安全设置的<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />实例。</summary>
      <param name="security">安全设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayConnectionMode,Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定连接和安全模式以及身份验证类型的<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />实例。</summary>
      <param name="connectionMode">连接模式。</param>
      <param name="securityMode">结合 SOAP 消息用于客户端的安全类。</param>
      <param name="relayClientAuthenticationType">客户端使用的身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetOnewayRelaySecurity)">
      <summary>初始化一个新的使用指定传输、编码和安全的<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />实例。</summary>
      <param name="transport">包含核心传输设置的传输元素。</param>
      <param name="encoding">编码元素。</param>
      <param name="security">安全设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的使用指定配置的<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />实例。</summary>
      <param name="configurationName">待使用的配置名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.ApplyConfiguration(System.String)">
      <summary>将与指定名称对应的配置元素中的设置应用于此绑定元素的当前实例。</summary>
      <param name="configurationName">要从中进行设置的配置元素的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetOnewayRelayBinding.CreateBindingElements">
      <summary>创建一组绑定元素。</summary>
      <returns>返回一个包含绑定元素的<see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.encoding">
      <summary>表示绑定的编码。除了安全设置和传输类型，编码表示绑定的三个核心属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.EnvelopeVersion">
      <summary>获取用于此绑定处理的消息的 SOAP 版本。</summary>
      <returns>返回一个包含信封版本的<see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ListenBacklog">
      <summary>获取或设置可以挂起的最大排队连接请求数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的消息的缓冲池所允许的最大尺寸。</summary>
      <returns>返回存储绑定处理的消息的缓冲池允许的最大尺寸。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxBufferSize">
      <summary>获取或设置一个值，该值指定用于在内存中存储消息的缓冲区的最大尺寸（以字节为单位）。</summary>
      <returns>返回用于在内存中存储消息的缓冲区的最大尺寸（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxConnections">
      <summary>获取或设置一个值，该值控制要为客户端上的后续重用而池化的最大连接数以及允许在服务器上挂起的最大连接数。</summary>
      <returns>在客户端上，返回要合并以供后续重用的最大连接数；在服务器上，返回允许挂起的最大连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MaxReceivedMessageSize">
      <summary>获取或设置绑定处理的已接收消息的最大大小。</summary>
      <returns>返回绑定处理的已接收消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.MessageSecurityVersion">
      <summary>获取消息安全性版本。</summary>
      <returns>返回一个包含消息安全版本的 <see cref="T:System.ServiceModel.MessageSecurityVersion" />。当前返回 MessageSecurityVersion .. ::。WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.ReaderQuotas">
      <summary>获取或设置可由使用此绑定配置的端点处理的 SOAP 消息的复杂性的约束。</summary>
      <returns>返回一个 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> 实例，其中指定对交换的 SOAP 消息的复杂性约束。以下“备注”部分提供了这些约束的默认值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>返回传输的 URI 方案。默认值为“sb”，表示 Windows Azure Service Bus。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.Security">
      <summary>获取一个对象，该对象指定与使用此绑定配置的服务一起使用的安全性类型。</summary>
      <returns>返回一个包含此绑定使用的安全性类型的<see cref="T:Microsoft.ServiceBus.NetOnewayRelaySecurity" />实例。此类型包含消息安全性、端到端安全模式、中继客户端身份验证类型和传输安全性设置。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是否可以同步或异步更有效地处理传入请求。</summary>
      <returns>如果可以更有效地同步处理请求，则返回t rue；否则，返回 false。默认值为 false，以异步方式处理请求。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetOnewayRelayBinding.transport">
      <summary>指定绑定的传输类型。除了编码和安全设置外，传输类型还表示绑定的三个核心属性。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetOnewayRelaySecurity">
      <summary><see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />绑定的的一组安全设置集。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Message">
      <summary>获取使用<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />配置的服务的消息级安全性要求的类型。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayOneway" />，它表示端点的消息级安全性要求的类型。默认 AlgorithmSuite 是 Basic256，默认 ClientCredentialType 是 Windows。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Mode">
      <summary>获取或设置由<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />配置的端点是否使用了消息级和传输级安全性。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />，它表示端点是使用消息级还是传输级安全性。默认值为 Transport。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">安全模式值无效。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.RelayClientAuthenticationType">
      <summary>获取或设置中继客户端的身份验证类型。</summary>
      <returns>返回一个包含身份验证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。默认值为 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />。</returns>
      <exception cref="T:System.ArgumentOutOfRangeException">该值是一个无效的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />域。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetOnewayRelaySecurity.Transport">
      <summary>获取使用<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />配置的端点的传输级安全性要求的类型。默认值为 EncryptAndSign。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.OnewayRelayTransportSecurity" /> 表示端点的传输级安全性要求的类型。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBinding">
      <summary>提供适合跨计算机通信的安全可靠的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的具有所用安全性和指定中继客户端身份验证的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />实例。</summary>
      <param name="securityMode">与绑定一起使用的安全性类型。</param>
      <param name="relayClientAuthenticationType">中继上使用的客户端身份验证的类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>初始化一个新的 <see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />实例，它具有所用安全性类型，客户端身份验证的类型以及指示是否显式启用可靠会话的值。</summary>
      <param name="securityMode">与 Windows Azure Service Bus 绑定一起使用的安全性类型。</param>
      <param name="relayClientAuthenticationType">中继上使用的客户端身份验证的类型。</param>
      <param name="reliableSessionEnabled">如果启用了可靠会话，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>初始化一个新的使用指定传输、编码、会话信息和安全设置的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />实例。</summary>
      <param name="transport">传输。</param>
      <param name="encoding">待使用的编码元素。</param>
      <param name="session">会话。</param>
      <param name="security">安全设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的具有指定 XML 配置的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />实例。</summary>
      <param name="configurationName">待使用的配置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.ApplyConfiguration(System.String)">
      <summary>将与指定名称对应的配置元素中的设置应用于此绑定元素的当前实例。</summary>
      <param name="configurationName">要从中进行设置的配置元素的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateBindingElements">
      <summary>使用绑定的绑定元素创建集合。</summary>
      <returns>返回一个包含有序绑定元素堆栈的<see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.CreateMessageSecurity">
      <summary>为当前实例创建消息安全性令牌。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。包含消息安全令牌。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBinding.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,System.ServiceModel.Channels.ReliableSessionBindingElement)">
      <summary>返回一个值，该值确定指定的对象是否具有匹配的绑定元素。</summary>
      <returns>如果对象匹配，则返回 <see cref="T:System.Boolean" />true；否则，返回 false。</returns>
      <param name="transport">要匹配的传输。</param>
      <param name="encoding">要匹配的编码。</param>
      <param name="session">要匹配的会话。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBinding.ReliableSession">
      <summary>获取一个对象，该对象指示是否在 Windows Azure Service Bus 通道端点之间建立了可靠会话。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.OptionalReliableSession" />。指示在通道端点之间是否建立了 WS-RM 可靠会话。默认为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelayBindingBase">
      <summary>绑定的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />常用方法的基类。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定安全模式和中继认证类型的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" />实例。</summary>
      <param name="securityMode">与绑定一起使用的安全性类型。</param>
      <param name="relayClientAuthenticationType">使用的中继认证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement,Microsoft.ServiceBus.NetTcpRelaySecurity)">
      <summary>初始化一个新的使用指定传输、编码和安全的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" />实例。</summary>
      <param name="transport">传输。</param>
      <param name="encoding">编码。</param>
      <param name="security">安全。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.#ctor(System.String)">
      <summary>初始化一个新的使用指定配置名称的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBindingBase" />实例。</summary>
      <param name="configurationName">绑定配置名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.ApplyConfiguration(System.String)">
      <summary>将与指定名称对应的配置元素中的设置应用于此绑定元素的当前实例。</summary>
      <param name="configurationName">要从中进行设置的配置元素的名称。</param>
      <exception cref="ConfigurationErrorsException">未在配置中找到由输入配置名称指定的绑定元素。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ConnectionMode">
      <summary>获取或设置连接模式： <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> 或<see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />。</summary>
      <returns>返回一个包含连接模式 <see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" />；或 <see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid" /> 或<see cref="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed" />。默认值为 Relayed。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateBindingElements">
      <summary>检索当前绑定中包含的有序绑定元素集合。</summary>
      <returns>返回一个构成绑定的 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.CreateMessageSecurity">
      <summary>为当前实例创建安全绑定元素。</summary>
      <returns>返回一个包含安全绑定元素的 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.encoding">
      <summary>当前实例的编码元素。除了安全性和传输设置，编码构成绑定的三个核心属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.EnvelopeVersion">
      <summary>获取用于此绑定处理的消息的 SOAP 版本。</summary>
      <returns>返回一个包含用于此绑定的信封版本的 <see cref="T:System.ServiceModel.EnvelopeVersion" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.HostNameComparisonMode">
      <summary>获取或设置主机名上使用的比较模式。</summary>
      <returns>主机名上使用的比较模式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsBindingElementsMatch(Microsoft.ServiceBus.TcpRelayTransportBindingElement,System.ServiceModel.Channels.BinaryMessageEncodingBindingElement)">
      <summary>确定指定的绑定元素是否匹配当前实例中绑定元素的默认值。</summary>
      <returns>如果元素匹配，则为 true；否则为 false。</returns>
      <param name="transport">传输绑定元素。</param>
      <param name="encoding">编码绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ListenBacklog">
      <summary>获取或设置可以挂起的最大排队连接请求数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的消息的缓冲池所允许的最大尺寸。</summary>
      <returns>返回存储绑定处理的消息的缓冲池所允许的最大尺寸（以字节为单位）。默认值为 65,536。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxBufferSize">
      <summary>获取或设置一个值，该值指定用于在内存中存储消息的缓冲区的最大尺寸。</summary>
      <returns>返回用于在内存中存储消息的缓冲区的最大尺寸（以字节为单位）。默认值为 65,536。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxConnections">
      <summary>获取或设置一个值，该值控制要为客户端上的后续重用而池化的最大连接数以及允许在服务器上挂起的最大连接数。</summary>
      <returns>在客户端上，返回要合并以供后续重用的最大连接数；在服务器上，返回允许挂起的最大连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MaxReceivedMessageSize">
      <summary>获取或设置绑定处理的已接收消息的最大大小。</summary>
      <returns>返回绑定处理的已接收消息的最大大小（以字节为单位）。默认值为 65,536。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.MessageSecurityVersion">
      <summary>获取消息安全性版本。</summary>
      <returns>返回一个包含消息安全版本的 <see cref="T:System.ServiceModel.MessageSecurityVersion" />。当前总是返回 MessageSecurityVersion .. ::。WSSecurity11WSTrustFebruary2005WSSecureConversationFebruary2005WSSecurityPolicy11。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.ReaderQuotas">
      <summary>获取或设置可由使用此绑定配置的端点处理的 SOAP 消息的复杂性的约束。此属性不能为空。</summary>
      <returns>返回一个 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />，它指定了对交换的 SOAP 消息的复杂性约束。以下“备注”部分提供了这些约束的默认值。</returns>
      <exception cref="ArgumentNullException"><paramref name="ReaderQuotas" /> 为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>返回传输的 URI 方案。默认值为“sb”。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.Security">
      <summary>获取一个对象，该对象指定与使用此绑定配置的服务一起使用的安全性类型。</summary>
      <returns>返回一个包含此绑定使用的安全性类型的<see cref="T:Microsoft.ServiceBus.NetTcpRelaySecurity" />。默认的安全模式是 Transport。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是同步还是异步处理传入请求。</summary>
      <returns>如果同步处理请求，则为 true；如果异步处理，则为 false。默认值为 false，以异步方式处理请求。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelayBindingBase.TransferMode">
      <summary>回去或设置一个指示使用绑定配置的服务是使用流式传输还是缓冲消息传输模式（或两种）的值。</summary>
      <returns>返回一个指示使用绑定配置的服务是使用流式传输还是缓冲消息传输模式（或两种）的<see cref="T:System.ServiceModel.TransferMode" />。默认情况下，HTTP、TCP/IP 和命名管道传输使用缓消息传输模式。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.NetTcpRelayBindingBase.transport">
      <summary>当前实例的传输元素。除了编码和安全性，传输设置构成绑定的核心属性。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.NetTcpRelaySecurity">
      <summary>指定使用<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />配置的端点的传输级和消息级安全性要求的类型。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Message">
      <summary>获取使用<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />配置的服务的消息级安全性要求的类型。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.MessageSecurityOverRelayConnection" />，它表示端点的消息级安全性要求的类型。默认安全设置为：ClientCredentialType 为 UserName;AlgorithmSuite 为 Basic256。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Mode">
      <summary>获取或设置由<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />配置的端点是否使用了消息级和传输级安全性。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />，它表示端点是使用消息级还是传输级安全性。默认值为 Transport。</returns>
      <exception cref="ArgumentOutOfRangeException">该值是一个无效的 <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />域。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.RelayClientAuthenticationType">
      <summary>获取或设置中继客户端身份验证类型。</summary>
      <returns>返回一个包含中继认证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
      <exception cref="ArgumentOutOfRangeException">该值是一个无效的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />域。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.NetTcpRelaySecurity.Transport">
      <summary>获取使用<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />配置的端点的消息级安全性要求的类型。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.TcpRelayTransportSecurity" /> 表示端点的传输级安全性要求的类型。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp">
      <summary>允许为 WS-Http 中继绑定设置消息级安全属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp.EstablishSecurityContext">
      <summary>获取或设置一个值，该值指定是否已建立安全上下文令牌。</summary>
      <returns>如果安全上下文令牌已建立，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.NoRetry">
      <summary>表示不执行重试的重试策略。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.NoRetry" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.NoRetry.Clone">
      <summary>创建该实例的副本。</summary>
      <returns>该实例的已创建副本。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.OAuthTokenProvider">
      <summary>为服务总线提供身份验证令牌。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.BuildKey(System.String,System.String)">
      <summary>为提供程序构建密钥。</summary>
      <returns>密钥。</returns>
      <param name="appliesTo">将应用密钥的提供程序。</param>
      <param name="action">操作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>将规范化应用于令牌提供程序。</summary>
      <returns>规范化的令牌提供程序。</returns>
      <param name="appliesTo">将应用规范化的令牌提供程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>提供程序开始时检索令牌。</summary>
      <returns>操作的异步结果。</returns>
      <param name="appliesTo">将应用令牌的提供程序。</param>
      <param name="action">操作。</param>
      <param name="timeout">持续时间。</param>
      <param name="callback">回调。</param>
      <param name="state">操作的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>提供程序开始时检索 Web 令牌。</summary>
      <returns>操作的异步结果。</returns>
      <param name="appliesTo">将应用 Web 令牌的提供程序。</param>
      <param name="action">操作。</param>
      <param name="timeout">持续时间。</param>
      <param name="callback">回调。</param>
      <param name="state">操作的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>提供程序结束时检索标记。</summary>
      <returns>检索到的令牌。</returns>
      <param name="result">操作的结果。</param>
      <param name="cacheUntil">提供程序存储数据的持续时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.OAuthTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>提供程序结束时检索 Web 令牌。</summary>
      <returns>检索到的令牌。</returns>
      <param name="result">操作的结果。</param>
      <param name="cacheUntil">提供程序存储数据的持续时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayClientAuthenticationType">
      <summary>描述在发送邮件时是否需要服务的客户端将 Windows Azure Access Control 颁发的安全令牌提供给 Windows Azure Service Bus。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None">
      <summary>如果由侦听器指定，则客户端无需提供安全令牌。这表示一种选择退出机制，侦听器可以使用该机制免除端点上的 Windows Azure 访问控制保护。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken">
      <summary>如果由侦听器指定，则客户端需要提供安全令牌。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode">
      <summary>表示通过 Windows Azure Access Control 可用的不同类型的单向连接。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast">
      <summary>指定多个服务应用程序可以侦听给定端点。供 <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />使用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast">
      <summary>指定只有一个服务应用程序可以侦听给定端点。供 <see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" />使用。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement">
      <summary>表示用于单向通信的传输绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定的身份验证类型的<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />实例。</summary>
      <param name="relayClientAuthenticationType">中继客户端身份验证类型。可以是 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />，也可以是 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType,Microsoft.ServiceBus.RelayedOnewayConnectionMode)">
      <summary>初始化一个新的使用指定身份验证类型和连接模式的<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />实例。</summary>
      <param name="relayClientAuthenticationType">中继客户端身份验证类型。可以是 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />，也可以是 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.None" />。</param>
      <param name="connectionMode">连接模式。可以是 <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Unicast" />，也可以是 <see cref="F:Microsoft.ServiceBus.RelayedOnewayConnectionMode.Multicast" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayedOnewayTransportBindingElement)">
      <summary>初始化一个新的使用指定元素的<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />实例。</summary>
      <param name="elementToClone">要克隆的元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>创建一个通道工厂，用于创建指定类型的通道，并从指定的绑定上下文初始化。</summary>
      <returns>用于创建指定类型的通道并从指定的绑定上下文初始化的通道工厂。</returns>
      <param name="context">为绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">工厂构建的通道类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>创建一个通道侦听器，它接受指定类型的通道，并从指定的绑定上下文初始化。</summary>
      <returns>一个通道侦听器，它接受指定类型的通道，并从指定的绑定上下文初始化。</returns>
      <param name="context">为绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">构建侦听器以接受的通道类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示此绑定元素是否可以构建指定类型的通道工厂。</summary>
      <returns>如果可以建立通道工厂，则为 true；否则为 false。</returns>
      <param name="context">为此绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">通道工厂的通道类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示绑定元素是否可以为指定类型的通道构建通道侦听器。</summary>
      <returns>如果可以为指定类型的通道构建通道侦听器，则为 true；否则为 false。</returns>
      <param name="context">为此绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">侦听器接受的通道类型。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ChannelInitializationTimeout">
      <summary>获取或设置通道在断开连接之前处于初始化状态的最长时间。</summary>
      <returns>断开连接之前通道可以处于初始化状态的最长时间。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Clone">
      <summary>返回<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" /> 绑定元素上该实例的副本。</summary>
      <returns>包含此绑定元素的深度克隆的绑定元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionBufferSize">
      <summary>获取或设置用于从客户端或服务在线路上传输部分序列化消息的缓冲区的大尺寸。</summary>
      <returns>用于从客户端或服务传输线路上的部分序列化消息的缓冲区尺寸。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionMode">
      <summary>获取此绑定元素中使用的连接模式。连接模式可以是其中一个<see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" /> 枚举值。</summary>
      <returns>此绑定元素中使用的连接模式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ConnectionPoolSettings">
      <summary>获取当前实例的连接池设置。</summary>
      <returns>当前实例的连接池设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从绑定堆栈中的相应层返回所请求类型的对象（如果存在）。</summary>
      <returns>找到所请求类型的对象；否则，返回空。</returns>
      <param name="context">为此绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="T">要获得的属性的类型。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.ListenBacklog">
      <summary>获取或设置可以挂起的最大排队连接请求数。</summary>
      <returns>队列连接的最大数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxBufferSize">
      <summary>获取或设置保存此绑定处理的传入消息的缓冲区的最大尺寸（以字节为单位）。</summary>
      <returns>保存此绑定处理的传入消息的缓冲区的最大尺寸（以字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxOutputDelay">
      <summary>获取或设置消息或消息的一部分在发送之前可以在内存中保持缓冲的最长时间间隔。</summary>
      <returns>消息或消息的一部分在发送之前可以保留在内存中的最长时间间隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingAccepts">
      <summary>获取或设置可用于处理服务上的传入连接的挂起异步接受线程的最大数量。</summary>
      <returns>可用于处理服务上的传入连接的挂起异步接受线程的最大数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.MaxPendingConnections">
      <summary>获取或设置挂起连接的最大数量。</summary>
      <returns>最大挂起连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.RelayClientAuthenticationType">
      <summary>获取或设置此绑定元素使用的 Windows Azure Access Control 身份验证的类型。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" /> 表示此绑定元素使用的身份验证类型。默认值为 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.Scheme">
      <summary>获取此绑定元素使用的 URI 方案。</summary>
      <returns>此绑定元素使用的 URI 方案。返回的值是“sb”。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>包含有关导出绑定的自定义策略断言。</summary>
      <param name="exporter">可用于修改导出过程的元数据导出器。</param>
      <param name="context">用于插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayedOnewayTransportSecurity">
      <summary>表示单向绑定的传输安全性设置。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.RelayedOnewayTransportSecurity.ProtectionLevel">
      <summary>获取或设置传输安全保护级别。</summary>
      <returns>返回一个包含传输安全保护级别的<see cref="T:System.Net.Security.ProtectionLevel" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType">
      <summary>描述 <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />的订阅者在发送邮件时是否需要将 Windows Azure Access Control 服务颁发的安全令牌提供给 Windows Azure Service Bus 服务。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.None">
      <summary>如果由 NetEventRelay 订阅者指定，则客户端无需提供中继访问令牌。这表示一种选择退出机制，侦听器可以使用该机制免除端点上的 Windows Azure 访问控制保护并执行自己的访问控制。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayEventSubscriberAuthenticationType.RelayAccessToken">
      <summary>如果由 NetEventRelay 侦听器指定，则客户端需要提供中继访问令牌。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayNotFoundException">
      <summary>未找到 ServiceBus 中继时引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RelayNotFoundException" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RelayNotFoundException" />类的新实例。</summary>
      <param name="info">序列化信息。</param>
      <param name="context">流式上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RelayNotFoundException" />类的新实例。</summary>
      <param name="message">错误信息</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RelayNotFoundException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RelayNotFoundException" />类的新实例。</summary>
      <param name="message">错误信息</param>
      <param name="innerException">内部异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayTransportProtectionMode">
      <summary>描述传输中继上的保护类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.EndToEnd">
      <summary>服务应用程序和客户端应用程序都必须具有安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.ListenerOnly">
      <summary>服务应用程序必须具有安全性；客户端应用程序不需要安全性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayTransportProtectionMode.None">
      <summary>安全性已禁用。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RelayType">
      <summary>指定中继类型的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.Http">
      <summary>HTTP 中继。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetEvent">
      <summary>NetEvent 中继。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetOneway">
      <summary>NetOneway 中继。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.NetTcp">
      <summary>NetTcp 中继。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.RelayType.None">
      <summary>中继为无。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryExponential">
      <summary>表示执行指定重试次数的重试策略，使用随机指数退避方案确定重试之间的间隔。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.#ctor(System.TimeSpan,System.TimeSpan,System.TimeSpan,System.TimeSpan,System.Int32)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.RetryExponential" />类的新实例。</summary>
      <param name="minBackoff">最小退避间隔。</param>
      <param name="maxBackoff">最大退避间隔。</param>
      <param name="deltaBackoff">与重试相关的退避间隔。</param>
      <param name="terminationTimeBuffer">与重试相关联的终止时间缓冲区。</param>
      <param name="maxRetryCount">允许的最大重试次数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryExponential.Clone">
      <summary>创建此实例的新副本。</summary>
      <returns>创建此实例的新副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.DeltaBackoff">
      <summary>获取或设置与重试关联的退避间隔。</summary>
      <returns>与重试相关的退避间隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaximumBackoff">
      <summary>获取或设置最大退避间隔。</summary>
      <returns>最大退避间隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MaxRetryCount">
      <summary>获取或设置允许的最大重试次数。</summary>
      <returns>允许的最大重试次数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.MinimalBackoff">
      <summary>获取或设置最小退避间隔。</summary>
      <returns>最小退避间隔。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryExponential.TerminationTimeBuffer">
      <summary>获取或设置与重试关联的终止时间缓冲区。</summary>
      <returns>与重试相关联的终止时间缓冲区。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.RetryPolicy">
      <summary>为不可靠的操作和瞬态条件提供重试机制的基本实现。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.Clone">
      <summary>创建<see cref="T:Microsoft.ServiceBus.RetryPolicy" />的新副本。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.RetryPolicy" />的新副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.Default">
      <summary>获取与策略关联的默认策略。</summary>
      <returns>与策略关联的默认策略。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.IsRetryableException(System.Exception)">
      <summary>指定发生错误后是否允许重试。</summary>
      <returns>如果在异常后允许重试，则为 true；否则为 false。</returns>
      <param name="lastException">最近发生的异常。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.RetryPolicy.NoRetry">
      <summary>获取不执行重试的重试策略。</summary>
      <returns>不执行重试的重试策略。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.RetryPolicy.OnShouldRetry(System.TimeSpan,System.Int32,System.TimeSpan@)">
      <summary>指定策略是否应允许重试。</summary>
      <returns>如果政策允许重试，则为 true；否则为 false。</returns>
      <param name="remainingTime">剩余时间。</param>
      <param name="currentRetryCount">重试总次数。</param>
      <param name="retryInterval">重试间隔。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SamlTokenProvider">
      <summary>提供一组执行异步 SAML 令牌检索操作的方法。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.BuildKey(System.String,System.String)">
      <summary>为令牌提供程序生成密钥。</summary>
      <returns>为令牌提供程序生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取令牌”操作。</summary>
      <returns>一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取 web 令牌”操作。</summary>
      <returns>一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取令牌”操作。</summary>
      <returns>安全令牌。</returns>
      <param name="result">一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SamlTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取 web 令牌”操作。</summary>
      <returns>web 令牌。</returns>
      <param name="result">一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServerErrorException">
      <summary>处理请求期间发生错误时 Windows Azure Service Bus 引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.ServerErrorException" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化一个新的使用序列化信息和流式上下文的<see cref="T:Microsoft.ServiceBus.ServerErrorException" />实例。</summary>
      <param name="info">保存有关引发异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String)">
      <summary>初始化一个新的包含指定缓冲区大小的<see cref="T:Microsoft.ServiceBus.ServerErrorException" />实例。</summary>
      <param name="message">描述此异常的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServerErrorException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的使用指定错误消息和内部异常的<see cref="T:Microsoft.ServiceBus.ServerErrorException" />实例。</summary>
      <param name="message">描述此异常的错误消息。</param>
      <param name="innerException">引发当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder">
      <summary>提供一种创建和管理 MessagingFactory 类所用连接字符串内容的简单方法。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.#ctor(System.String)">
      <summary>初始化一个新的包含指定连接字符串的<see cref="T:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder" />实例。</summary>
      <param name="connectionString">连接字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingOAuthCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>使用身份验证凭据创建服务总线连接字符串。</summary>
      <returns>创建的服务总线连接字符串。</returns>
      <param name="endpoints">端点集。</param>
      <param name="stsEndpoints">安全令牌服务端点集。</param>
      <param name="runtimePort">运行时间端口。</param>
      <param name="managementPort">管理端口。</param>
      <param name="domain">将建立连接的域。</param>
      <param name="user">身份验证用户。</param>
      <param name="password">验证密码。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>使用共享访问密钥创建连接。</summary>
      <returns>使用共享访问密钥创建的连接。</returns>
      <param name="endpoints">端点集。</param>
      <param name="runtimePort">运行时间端口。</param>
      <param name="managementPort">管理端口。</param>
      <param name="keyName">共享访问密钥的名称。</param>
      <param name="key">共享访问密钥</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedAccessKey(System.Uri,System.String,System.String)">
      <summary>使用共享访问密钥创建连接。</summary>
      <returns>使用共享访问密钥创建的连接。</returns>
      <param name="endpoint">端点。</param>
      <param name="keyName">共享访问密钥的名称。</param>
      <param name="key">共享的访问密钥</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String)">
      <summary>使用共享密钥凭据创建连接。</summary>
      <returns>使用共享密钥凭据创建的连接。</returns>
      <param name="endpoints">端点。</param>
      <param name="stsEndpoints">安全令牌服务端点集。</param>
      <param name="runtimePort">运行时间端口。</param>
      <param name="managementPort">管理端口。</param>
      <param name="issuer">颁发者。</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingSharedSecret(System.Uri,System.String,System.String)">
      <summary>使用共享密钥凭据创建连接。</summary>
      <returns>使用共享密钥凭据创建的连接。</returns>
      <param name="endpoint">端点。</param>
      <param name="issuer">颁发者</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.CreateUsingWindowsCredential(System.Collections.Generic.IEnumerable{System.Uri},System.Collections.Generic.IEnumerable{System.Uri},System.Int32,System.Int32,System.String,System.String,System.Security.SecureString)">
      <summary>使用 Windows 凭据创建连接。</summary>
      <returns>创建的连接字符串。</returns>
      <param name="endpoints">端点集</param>
      <param name="stsEndpoints">安全令牌服务端点集。</param>
      <param name="runtimePort">运行时间端口。</param>
      <param name="managementPort">管理端口。</param>
      <param name="domain">将建立连接的域。</param>
      <param name="user">用户。</param>
      <param name="password">Windows 密码。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.Endpoints">
      <summary>获取一组端点。</summary>
      <returns>一组端点。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteManagementEndpoints">
      <summary>检索绝对管理端点。</summary>
      <returns>绝对管理端点</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.GetAbsoluteRuntimeEndpoints">
      <summary>检索绝对运行时间端点。</summary>
      <returns>绝对运行时间端点。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ManagementPort">
      <summary>获取或设置管理端口。</summary>
      <returns>管理端口。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthDomain">
      <summary>获取或设置连接的认证域。</summary>
      <returns>连接的认证域。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthPassword">
      <summary>获取或设置连接的身份验证密码。</summary>
      <returns>连接的验证密码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OAuthUsername">
      <summary>获取或设置连接的认证用户名。</summary>
      <returns>连接的认证用户名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.OperationTimeout">
      <summary>获取或设置指定在超时之前完成消息传递时间的 <see cref="T:System.TimeSpan" />。</summary>
      <returns>该 <see cref="T:System.TimeSpan" /> 指定在超时之前消息传递操作必须完成的时间。默认值为一分钟。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.RuntimePort">
      <summary>获取或设置运行时间端口。</summary>
      <returns>运行时间端口。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKey">
      <summary>获取或设置认证的共享访问密钥。</summary>
      <returns>用于连接认证的共享访问密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedAccessKeyName">
      <summary>获取或设置共享访问密钥的名称。</summary>
      <returns>共享访问密钥的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerName">
      <summary>获取或设置共享密钥颁发者名称。</summary>
      <returns>共享密钥颁发者名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.SharedSecretIssuerSecret">
      <summary>获取或设置共享密钥颁发者密钥。</summary>
      <returns>共享密钥颁发者的密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.StsEndpoints">
      <summary>获取一组 STS 端点。</summary>
      <returns>一组 STS 端点。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.ToString">
      <summary>返回表示当前对象的字符串。</summary>
      <returns>表示当前对象的字符串。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.TransportType">
      <summary>获取或设置与连接关联的传输类型。</summary>
      <returns>与连接关联的传输类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialDomain">
      <summary>获取或设置 Windows 凭据域。</summary>
      <returns>Windows 凭据域。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialPassword">
      <summary>获取或设置 Windows 凭据密码。</summary>
      <returns>Windows 凭据密码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusConnectionStringBuilder.WindowsCredentialUsername">
      <summary>获取或设置 Windows 凭据用户名。</summary>
      <returns>Windows 凭据用户名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusEnvironment">
      <summary>描述 Windows Azure Service Bus 环境。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateAccessControlUri(System.String)">
      <summary>创建一个 URI 字符串，用于指定的访问控制。</summary>
      <returns>返回一个包含指定 URI 的<see cref="T:System.Uri" />。</returns>
      <param name="serviceNamespace">URI 的创建对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String)">
      <summary>使用指定的方案、名称和服务路径构造应用程序的 Windows Azure Service Bus URI。</summary>
      <returns>返回一个包含新 URI 的<see cref="T:System.Uri" />。</returns>
      <param name="scheme">URI 方案。</param>
      <param name="serviceNamespace">应用程序使用的名称。</param>
      <param name="servicePath">URI 主机名后面的服务路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusEnvironment.CreateServiceUri(System.String,System.String,System.String,System.Boolean)">
      <summary>使用指定的方案、名称、服务路径和中继路径前缀构造应用程序的 Windows Azure Service Bus URI。</summary>
      <returns>返回一个包含新 URI 的<see cref="T:System.Uri" />。</returns>
      <param name="scheme">URI 方案。</param>
      <param name="serviceNamespace">应用程序使用的名称。</param>
      <param name="servicePath">URI 主机名后面的服务路径。</param>
      <param name="suppressRelayPathPrefix">如果中继路径前缀被抑制，则为 True；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.DefaultIdentityHostName">
      <summary>获取 Windows Azure Access Control Service 的默认主机名。</summary>
      <returns>返回默认标识主机名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusEnvironment.SystemConnectivity">
      <summary>获取保存 TCP 和基于 HTTP 端点的连接设置的单元素 <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" />实例。</summary>
      <returns>返回一个包含连接设置的 <see cref="T:Microsoft.ServiceBus.ConnectivitySettings" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceBusErrorData">
      <summary>表示与服务总线错误关联的数据。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.ServiceBusErrorData" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Code">
      <summary>获取或设置错误代码。</summary>
      <returns>错误代码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.Detail">
      <summary>获取或设置错误详细信息。</summary>
      <returns>错误详细信息。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.DetailTag">
      <summary>错误详细信息的标记。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceBusErrorData.ExtensionData">
      <summary>获取或设置错误的扩展数据对象。</summary>
      <returns>错误的扩展数据对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceBusErrorData.GetServiceBusErrorData(System.Net.HttpWebResponse)">
      <summary>获取服务总线错误数据的值。</summary>
      <returns>服务总线错误数据的值。</returns>
      <param name="webResponse">HTTP Web 响应。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.HttpStatusCodeTag">
      <summary>HTTP 状态代码的标记。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceBusErrorData.RootTag">
      <summary>标记根。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.ServiceRegistrySettings">
      <summary>包含 Windows Azure Service Bus 注册表的设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.#ctor(Microsoft.ServiceBus.DiscoveryType)">
      <summary>初始化一个新的使用指定的查找类型的<see cref="T:Microsoft.ServiceBus.ServiceRegistrySettings" />实例。</summary>
      <param name="discoveryType">指示端点是公共端还是私有端的查找类型。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.allowUnauthenticatedAccess">
      <summary>如果您的端点允许未经认证的访问，则为 true;否则为 false。默认值为 false。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DiscoveryMode">
      <summary>获取或设置服务的查找方式。</summary>
      <returns>对于公共查找，返回 <see cref="T:Microsoft.ServiceBus.DiscoveryType" />.DiscoveryType.Public；对于私有查找，返回 DiscoveryType.Private。默认值为 DiscoveryType.Private。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.ServiceRegistrySettings.DisplayName">
      <summary>获取或设置端点的显示名称。</summary>
      <returns>返回 <see cref="T:System.String" />。包含显示名称。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>将指定的绑定参数添加到指定的端点。</summary>
      <param name="endpoint">端点。</param>
      <param name="bindingParameters">要添加的绑定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>在指定的运行时间实现或修改指定的客户端。</summary>
      <param name="endpoint">端点。</param>
      <param name="clientRuntime">客户端。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>经由端点修改或扩展服务。</summary>
      <param name="endpoint">公开合同的终点。</param>
      <param name="endpointDispatcher">要修改或扩展的端点调度程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.ServiceRegistrySettings.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>确认端点符合某些预期标准。</summary>
      <param name="endpoint">要验证的端点。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.ServiceRegistrySettings.transportProtectionEnabled">
      <summary>如果启用了传输保护，则为 true；否则为 false。默认值为 true。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureToken">
      <summary>表示共享访问签名标记。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String)">
      <summary>初始化一个新的包含指定令牌字符串的<see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" />实例。</summary>
      <param name="tokenString">令牌字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime)">
      <summary>初始化一个新的包含指定令牌字符串和到期日期的<see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" />实例。</summary>
      <param name="tokenString">令牌字符串。</param>
      <param name="expiry">令牌到期。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.DateTime,System.String)">
      <summary>初始化一个新的包含指定令牌字符串、到期日和受众的<see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" />实例。</summary>
      <param name="tokenString">令牌字符串。</param>
      <param name="expiry">令牌到期。</param>
      <param name="audience">令牌受众。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureToken.#ctor(System.String,System.String)">
      <summary>初始化一个新的包含指定标识符和令牌字符串的<see cref="T:Microsoft.ServiceBus.SharedAccessSignatureToken" />实例。</summary>
      <param name="id">令牌标识符。</param>
      <param name="tokenString">令牌字符串。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.AudienceFieldName">
      <summary>获取受众字段名称。</summary>
      <returns>受众字段名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.ExpiresOnFieldName">
      <summary>获取字段名称到期值。</summary>
      <returns>字段名称到期值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.KeyValueSeparator">
      <summary>获取键值分隔符。</summary>
      <returns>键值分隔符。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyLength">
      <summary>指定密钥的最大长度。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.MaxKeyNameLength">
      <summary>指定密钥名称的最大长度。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureToken.PairSeparator">
      <summary>获取与令牌关联的成对分隔符。</summary>
      <returns>与令牌关联的成对分隔符。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasKeyValueSeparator">
      <summary>指定共享访问签名令牌的键值分隔符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SasPairSeparator">
      <summary>指定共享访问签名令牌的成对分隔符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SharedAccessSignature">
      <summary>指定共享的访问签名。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.Signature">
      <summary>指定签名令牌。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedExpiry">
      <summary>指定令牌的签名到期日期。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedKeyName">
      <summary>指定签名的密钥名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResource">
      <summary>指定签名资源。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureToken.SignedResourceFullFieldName">
      <summary>指定签名资源的完整字段名称。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider">
      <summary>表示与令牌提供程序关联的共享访问签名。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.BuildKey(System.String,System.String)">
      <summary>为令牌提供程序生成密钥。</summary>
      <returns>为令牌提供程序生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.EpochTime">
      <summary>纪元时间。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginGetToken 方法时执行。</summary>
      <returns>操作的结果。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">AsyncCallback 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginGetWebToken 方法时执行。</summary>
      <returns>操作的结果。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">AsyncCallback 委托，它引用操作完成时要调用的方法。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>在调用 EndGetToken 方法时执行。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />对象。</returns>
      <param name="result">引用异步操作以获取令牌的 IAsyncResult 对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>在调用 EndGetWebToken 方法时执行。</summary>
      <returns>表示 Web 令牌的字符串。</returns>
      <param name="result">引用异步操作以获取 web 令牌的 IAsyncResult 对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.SharedAccessSignatureTokenProvider.StripQueryParameters">
      <summary>获悉令牌提供程序是否除去查询参数。</summary>
      <returns>如果令牌提供程序除去查询参数，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SharedSecretTokenProvider">
      <summary>提供返回 Web 令牌断言的名称/值对的方法，以及执行异步共享密钥令牌检索操作的方法。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.BuildKey(System.String,System.String)">
      <summary>为令牌提供程序生成密钥。</summary>
      <returns>为令牌提供程序生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.Byte[])">
      <summary>使用指定的颁发者名称和颁发者密钥为简单 Web 令牌断言返回 URL 编码的名称/值对的字符串。</summary>
      <returns>用于简单 Web 令牌断言的 URL 编码的名称/值对。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.ComputeSimpleWebTokenString(System.String,System.String)">
      <summary>使用指定的颁发者名称和颁发者密钥为简单 Web 令牌断言返回 URL 编码的名称/值对的字符串。</summary>
      <returns>用于简单 Web 令牌断言的 URL 编码的名称/值对。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取令牌”操作。</summary>
      <returns>一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取 web 令牌”操作。</summary>
      <returns>一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取令牌”操作。</summary>
      <returns>安全令牌。</returns>
      <param name="result">一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SharedSecretTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取 web 令牌”操作。</summary>
      <returns>web 令牌。</returns>
      <param name="result">一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityToken">
      <summary>包装简单 Web 令牌的安全令牌。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String)">
      <summary>初始化一个新的包含指定简单 Web 令牌的<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />实例。</summary>
      <param name="tokenString">表示简单 Web 令牌的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime)">
      <summary>初始化一个新的包含指定简单 Web 令牌和到期日的<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />实例。</summary>
      <param name="tokenString">表示简单 Web 令牌的字符串。</param>
      <param name="expiry">简单 Web 令牌的到期日期。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.DateTime,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />类的新实例。</summary>
      <param name="tokenString">表示简单 Web 令牌的字符串。</param>
      <param name="expiry">简单 Web 令牌的到期日期。</param>
      <param name="audience">简单 Web 令牌的受众。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityToken.#ctor(System.String,System.String)">
      <summary>初始化一个新的包含指定令牌 ID 和简单 Web 令牌的<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />实例。</summary>
      <param name="id">简单 Web 令牌的唯一标识符。</param>
      <param name="tokenString">表示简单 Web 令牌的字符串。</param>
      <exception cref="T:System.NullReferenceException"><paramref name="id" /> 参数或 <paramref name="tokenString" /> 参数为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Audience">
      <summary>获取简单 Web 令牌的受众。</summary>
      <returns>简单 Web 令牌的受众。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.AudienceFieldName">
      <summary>获取受众字段名称。</summary>
      <returns>受众字段名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOn">
      <summary>获取安全令牌将到期的日期和时间。</summary>
      <returns>安全令牌将到期的日期和时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ExpiresOnFieldName">
      <summary>获取与令牌到期关联的字段名称。</summary>
      <returns>与令牌到期关联的字段名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Id">
      <summary>获取与简单 Web 令牌关联的 ID。</summary>
      <returns>与简单 Web 令牌关联的 ID。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.KeyValueSeparator">
      <summary>获取与令牌关联的键值分隔符。</summary>
      <returns>与令牌关联的键值分隔符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.PairSeparator">
      <summary>获取与令牌关联的成对分隔符。</summary>
      <returns>与令牌关联的成对分隔符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.SecurityKeys">
      <summary>获取与安全令牌关联的加密密钥。</summary>
      <returns>包含与简单 Web 令牌关联的密钥集的<see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /><see cref="T:System.IdentityModel.Tokens.SecurityKey" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.Token">
      <summary>获取简单 Web 令牌。</summary>
      <returns>简单 Web 令牌。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidFrom">
      <summary>未实现。</summary>
      <returns>引发一个 <see cref="T:System.NotImplementedException" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SimpleWebSecurityToken.ValidTo">
      <summary>未实现。</summary>
      <returns>引发一个 <see cref="T:System.NotImplementedException" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer">
      <summary>将 <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />、<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" /> 和 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" /> 对象读写为 XML 的类。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.#ctor(System.IdentityModel.Selectors.SecurityTokenSerializer)">
      <summary>初始化一个新的具有指定安全性令牌序列化程序的 <see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" />实例。</summary>
      <param name="innerSerializer">用作内部序列化程序的安全性令牌序列化程序。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="innerSerializer" /> 参数为NULL。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>确定此序列化程序是否可以读取指定 XML 阅读器引用的 &lt;KeyIdentifier&gt; 元素。</summary>
      <returns>指定 &lt;KeyIdentifier&gt; 元素可以读取，则为 true；否则为 false。</returns>
      <param name="reader">读取密钥标识符子句的<see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>确定此序列化程序是否可以读取指定 XML 阅读器引用的 &lt;KeyIdentifier&gt; 元素。</summary>
      <returns>指定 &lt;KeyIdentifier&gt; 元素可以读取，则为 true；否则为 false。</returns>
      <param name="reader">读取密钥标识符的<see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanReadTokenCore(System.Xml.XmlReader)">
      <summary>确定此序列化程序是否可以读取指定 XML 阅读器指向的安全性令牌。</summary>
      <returns>读取安全令牌时为 true；否则为 false。</returns>
      <param name="reader">读取安全性令牌的<see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierClauseCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>确定此序列化程序是否可以写入指定的密钥标识符子句。</summary>
      <returns>当此序列化程序可以写入指定的密钥标识符子句时为 true；否则为 false。</returns>
      <param name="keyIdentifierClause">表示要写入的密钥标识符子句的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteKeyIdentifierCore(System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>确定此序列化程序是否可以写入指定的密钥标识符。</summary>
      <returns>当此序列化程序可以写入指定的密钥标识符时为 true；否则为 false。</returns>
      <param name="keyIdentifier">表示要写入的密钥标识符的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.CanWriteTokenCore(System.IdentityModel.Tokens.SecurityToken)">
      <summary>确定此序列化程序是否可以将指定的安全性令牌写入 XML。</summary>
      <returns>可以写入安全令牌时为 true；否则为 false。</returns>
      <param name="token">要转换为 XML 的<see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.DefaultInstance">
      <summary>指定类<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer" />的实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierClauseCore(System.Xml.XmlReader)">
      <summary>使用指定的 XML 阅读器读取密钥标识符子句。</summary>
      <returns>表示密钥标识符已读取的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</returns>
      <param name="reader">读取密钥标识符子句的<see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadKeyIdentifierCore(System.Xml.XmlReader)">
      <summary>使用指定的 XML 阅读器读取密钥标识符。</summary>
      <returns>表示密钥标识符已读取的 <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</returns>
      <param name="reader">读取密钥标识符的<see cref="T:System.Xml.XmlReader" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.ReadTokenCore(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenResolver)">
      <summary>读取<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />或指定 XML 阅读器指向的安全性令牌。</summary>
      <returns>表示 SimpleWebSecurityToken 或安全性令牌已读取的 <see cref="T:System.IdentityModel.Tokens.SecurityToken" />。</returns>
      <param name="reader">读取 SimpleWebSecurityToken 或安全性令牌的<see cref="T:System.Xml.XmlReader" />。</param>
      <param name="tokenResolver">确定安全性令牌类型的<see cref="T:System.IdentityModel.Selectors.SecurityTokenResolver" />。</param>
      <exception cref="T:System.NotSupportedException">XML 元素的编码不是 base64Binary。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierClauseCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifierClause)">
      <summary>使用指定 XML 阅读器读取指定密钥标识符子句。</summary>
      <param name="writer">读取密钥标识符子句的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="keyIdentifierClause">表示要写入的密钥标识符子句的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifierClause" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteKeyIdentifierCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityKeyIdentifier)">
      <summary>使用指定 XML 阅读器读取指定密钥标识符。</summary>
      <param name="writer">读取密钥标识符的 <see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="keyIdentifier">表示要写入的密钥标识符的<see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />。</param>
      <exception cref="T:System.InvalidOperationException">二进制令牌内容为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebSecurityTokenSerializer.WriteTokenCore(System.Xml.XmlWriter,System.IdentityModel.Tokens.SecurityToken)">
      <summary>使用指定 XML 编写器写入指定<see cref="T:Microsoft.ServiceBus.SimpleWebSecurityToken" />或安全性令牌。</summary>
      <param name="writer">写入 SimpleWebSecurityToken 或安全性令牌的<see cref="T:System.Xml.XmlWriter" />。</param>
      <param name="token">要写入的 SimpleWebSecurityToken 或安全性令牌。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SimpleWebTokenProvider">
      <summary>提供一组执行异步 SWT 检索操作的方法。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.BuildKey(System.String,System.String)">
      <summary>为简单 Web 令牌提供程序生成密钥。</summary>
      <returns>为简单 Web 令牌提供程序生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取令牌”操作。</summary>
      <returns>一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始获取 web 令牌”操作。</summary>
      <returns>一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取令牌”操作。</summary>
      <returns>安全令牌。</returns>
      <param name="result">一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.SimpleWebTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>执行“结束获取 web 令牌”操作。</summary>
      <returns>web 令牌。</returns>
      <param name="result">一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketConnectionPoolSettings">
      <summary>表示控制套接字连接池行为的属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.GroupName">
      <summary>获取或设置套接字连接池的组名。</summary>
      <returns>套接字连接池的组名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.IdleTimeout">
      <summary>获取或设置断开之前连接在连接池中空置的最长时间。</summary>
      <returns>断开之前连接在连接池中空置的最长时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.LeaseTimeout">
      <summary>获取或设置关闭活动连接之后的时间跨度。</summary>
      <returns>套接字连接关闭的持续时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.SocketConnectionPoolSettings.MaxOutboundConnectionsPerEndpoint">
      <summary>获取或设置连接池中缓存的每个端点的最大离站连接数。</summary>
      <returns>连接池中缓存的每个端点的最大离站连接数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.SocketSecurityRole">
      <summary>描述套接字安全性的角色。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.None">
      <summary>在客户端上设置时，应用程序将发送未加密的消息。在服务器上设置时，应用程序将接受加密和未加密的消息。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslClient">
      <summary>该应用程序被标识为 SSL 客户端，这表示应用程序将尝试使用加密通道连接和发送消息。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.SocketSecurityRole.SslServer">
      <summary>将应用程序标识为 SSL 服务器，这表示应用程序将仅接受安全传输连接。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement">
      <summary>表示支持策略导出中 SSL 流上通道安全的传输绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.Clone">
      <summary>返回此绑定元素实例的副本。</summary>
      <returns>此绑定元素实例的副本。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从绑定堆栈中的相应层返回所请求类型的对象（如果存在）。</summary>
      <returns>找到所请求类型的对象；否则，返回空。</returns>
      <param name="context">为此绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="T">要获得的属性的类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpClientTransportTokenAssertionProviderBindingElement.GetTransportTokenAssertion">
      <summary>获取表示安全绑定中使用的传输令牌的<see cref="T:System.Xml.XmlElement" />。</summary>
      <returns>表示安全绑定中使用的传输令牌的<see cref="T:System.Xml.XmlElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayConnectionMode">
      <summary>描述<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />的连接模式。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Hybrid">
      <summary>通过 Windows Azure Service Bus 基础结构中继通信，而客户端和服务端点协商彼此的直接套接字连接。此直接连接的协调由 Windows Azure Service Bus 云服务控制。直接套接字连接算法能够在位于相对的防火墙和 NAT 设备后面的双方之间建立直接连接。该算法仅使用离开站连接进行防火墙穿越，并依赖 NAT 穿越的相互端口预测算法。由于 NAT 穿越算法依赖于非常狭窄的时间协调和关于预期 NAT 行为的最佳预测，因此该算法的对于具有少量客户端的家庭和小型企业场景的成功率往往非常高，对于更大规模的 NAT，成功率会降低。如果可以建立直接连接，则中继连接会自动升级到直接连接，而不会丢失消息或数据。如果无法建立直接连接，数据将继续流经 Windows Azure Service Bus Relay。该模式还需要使用 NAT 预测算法的出站端口 819。对于大多数个人防火墙产品，直接连接模式建立的出站套接字连接还需要用户授予一次性策略异常（Windows 个人防火墙和其他产品通常会提示用户）托管申请。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TcpRelayConnectionMode.Relayed">
      <summary>所有通信都通过 Windows Azure Service Bus 云进行中继。受 SSL 保护的控制连接用于协商所有客户端—服务通信流经的中继端到端套接字连接。建立连接后，Windows Azure Service Bus 基础结构的行为很像中继双向字节流所用的套接字转发器代理。该模式还需要使用 NAT 预测算法的出站端口 819。对于大多数个人防火墙产品，直接连接模式建立的出站套接字连接还需要用户授予一次性策略异常（Windows 个人防火墙和其他产品通常会提示用户）托管申请。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement">
      <summary>表示 TCP 传输中继的绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定中继客户端身份验证类型的<see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" />实例。</summary>
      <param name="relayClientAuthenticationType">中继客户端身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.#ctor(Microsoft.ServiceBus.TcpRelayTransportBindingElement)">
      <summary>初始化一个新的使用指定中继绑定元素的<see cref="T:Microsoft.ServiceBus.TcpRelayTransportBindingElement" />实例。</summary>
      <param name="elementToBeCloned">要克隆的元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>创建可用于创建通道的通道工厂。</summary>
      <returns>指定类型的通道工厂。</returns>
      <param name="context">描述创建通道工厂所需的绑定、行为、合同和其他信息。</param>
      <typeparam name="TChannel">通道工厂的类型。</typeparam>
      <exception cref="InvalidOperationException">启用传输保护并且“连接模式”设置为“混合”或“直接”时。该成员不太可能直接使用，但可以在创建自定义绑定时使用。有关更多信息，请参阅创建自定义 AppFabric 服务总线绑定。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>创建指定类型的通道侦听器。</summary>
      <returns>指定类型的通道侦听器。</returns>
      <param name="context">描述创建通道工厂所需的绑定、行为、合同和其他信息。</param>
      <typeparam name="TChannel">通道工厂的类型。</typeparam>
      <exception cref="InvalidOperationException">启用传输保护并将“连接模式”设置为“混合”或“直接”时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Clone">
      <summary>创建当前绑定元素的副本。</summary>
      <returns>返回一个包含绑定元素副本的<see cref="T:System.ServiceModel.Channels.BindingElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionMode">
      <summary>获取或设置连接模式。</summary>
      <returns>返回一个包含连接模式的<see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.ConnectionPoolSettings">
      <summary>获取当前实例的连接池设置。</summary>
      <returns>当前实例的连接池设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从绑定上下文返回指定的对象。</summary>
      <returns>包含指定对象的绑定元素，如果未找到，则返回空。</returns>
      <param name="context">上下文。</param>
      <typeparam name="T">要获取的对象类型。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.IsDynamic">
      <summary>获取或设置绑定元素是否为动态。</summary>
      <returns>如果绑定元素是动态的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.RelayClientAuthenticationType">
      <summary>获取或设置服务客户端使用的身份验证类型。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。包含身份验证类型。RelayAccessToken 的默认值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportBindingElement.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>返回传输的 URI 方案，即“TCP”。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TcpRelayTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导出有关绑定的自定义策略断言。</summary>
      <param name="exporter">可用于修改导出过程的元数据导出器。</param>
      <param name="context">用于插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TcpRelayTransportSecurity">
      <summary>提供控制 TCP 传输中继绑定的身份验证参数和保护级别的属性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.TcpRelayTransportSecurity.ProtectionLevel">
      <summary>获取或设置传输保护级别。</summary>
      <returns>返回一个包含保护级别的<see cref="T:System.Net.Security.ProtectionLevel" />。默认值为 EncryptAndSign。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenConstants">
      <summary>提供表示身份验证请求中使用的参数名称、字段名称、方法名称和分隔符的常量。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.DefaultCompoundClaimDelimiter">
      <summary>用于分隔复合令牌值列表的字符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpAuthParameterSeparator">
      <summary>用于分隔 HTTP 身份验证请求中发送的参数的字符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodGet">
      <summary>用于表示 HTTP 请求中 GET 谓词的字符串。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodHead">
      <summary>用于表示 HTTP 请求中 HEAD 谓词的字符串。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodPost">
      <summary>用于表示 HTTP 请求中 POST 谓词的字符串。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.HttpMethodTrace">
      <summary>用于表示 HTTP 请求中 TRACE 谓词的字符串。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.KeyValueSeparator">
      <summary>指定键和值之间分隔的字符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ManagementIssuerName">
      <summary>用于访问 Windows Azure Access Control 管理服务的默认颁发者名称字符串值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerNameSize">
      <summary>颁发者名称的最大大小。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.MaxIssuerSecretSize">
      <summary>发行方密钥的最大大小。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.OutputClaimIssuerId">
      <summary>来自 Windows Azure Access Control 服务的所有输出声明的颁发者 ID。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.Saml11ConfirmationMethodBearerToken">
      <summary>安全断言标记语言 (SAML) 持有者断言中使用的 ConfirmationMethod 属性的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.ServiceBusIssuerName">
      <summary>用于访问 Windows Azure Service Bus 的默认颁发者名称字符串值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenAudience">
      <summary>在简单 Web 令牌 (SWT) 中使用的令牌受众属性名称。令牌受众是设计用于 SWT 的 SWT 处理器。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenDigest256">
      <summary>简单 Web 令牌中使用的基于散列的消息验证代码的属性名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenExpiresOn">
      <summary>简单 Web 令牌中使用的令牌到期（以秒为单位）的属性名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TokenIssuer">
      <summary>简单 Web 令牌 (SWT) 颁发者的属性名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.TrackingIdHeaderName">
      <summary>返回的令牌响应中跟踪 ID 的属性名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.UrlParameterSeparator">
      <summary>用于分隔令牌请求中参数的字符。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAccessToken">
      <summary>安全性令牌服务使用 WRAP 协议在响应中返回的访问令牌的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAppliesTo">
      <summary>发送到 Windows Azure Access Control 服务的令牌请求正文中的 AppliesTo 字段的名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertion">
      <summary>使用 WRAP 协议在令牌请求中发送的 WRAP 断言的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAssertionFormat">
      <summary>使用 WRAP 协议在令牌请求中发送的断言格式的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthenticationType">
      <summary>WRAP 身份验证协议类型名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapAuthorizationHeaderKey">
      <summary>在对 Windows Azure Service Bus 的请求的授权标头中发送的访问令牌的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapBaseTime">
      <summary>WRAP 协议中使用的基准日期和时间。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapContentType">
      <summary>使用 WRAP 协议时用于格式化令牌请求参数的内容类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapName">
      <summary>使用 WRAP 协议在令牌请求中发送的帐户名的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapPassword">
      <summary>使用 WRAP 协议在令牌请求中发送的帐户密码的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapRequestedLifetime">
      <summary>使用 WRAP 协议在令牌请求中发送的请求令牌生存期（以秒为单位）的参数名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSamlAssertionFormat">
      <summary>指定安全声明标记语言格式。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapSwtAssertionFormat">
      <summary>指定简单 Web 令牌格式。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenConstants.WrapTokenExpiresIn">
      <summary>令牌颁布者使用 WRAP 协议在令牌响应中返回的令牌到期的参数名称（以秒为单位）。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider">
      <summary>表示具有内置工厂方法的安全性令牌提供程序，该方法返回一些众所周知的令牌提供程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TokenProvider" />类的新实例。</summary>
      <param name="cacheTokens">如果正在缓存新的安全性令牌，则为 true；否则为 false。</param>
      <param name="supportHttpAuthToken">如果此提供程序支持 Web 令牌，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,Microsoft.ServiceBus.TokenScope)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TokenProvider" />类的新实例。</summary>
      <param name="cacheTokens">如果正在缓存新的安全性令牌，则为 true；否则为 false。</param>
      <param name="supportHttpAuthToken">如果此提供程序支持 Web 令牌，则为 true；否则为 false。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.#ctor(System.Boolean,System.Boolean,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TokenProvider" />类的新实例。</summary>
      <param name="cacheTokens">如果正在缓存新的安全性令牌，则为 true；否则为 false。</param>
      <param name="supportHttpAuthToken">如果此提供程序支持 Web 令牌，则为 true；否则为 false。</param>
      <param name="cacheSize">高速缓存的大小。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取安全令牌。</summary>
      <returns>一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="bypassCache">true 表示忽略高速缓存中的现有令牌信息；false 表示使用高速缓存中的令牌信息。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BeginGetWebToken(System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取 Web 令牌。</summary>
      <returns>一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="bypassCache">true 表示忽略高速缓存中的现有令牌信息；false 表示使用高速缓存中的令牌信息。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.BuildKey(System.String,System.String)">
      <summary>为令牌提供程序生成密钥。</summary>
      <returns>为令牌提供程序生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheSize">
      <summary>获取或设置缓存的大小。</summary>
      <returns>高速缓存的大小。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.CacheTokens">
      <summary>获取或设置一个值，该值指示是否正在缓存新的安全性令牌。</summary>
      <returns>如果正在缓存新的安全性令牌，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Clear">
      <summary>清除令牌提供程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateOAuthTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>创建 OAuth（授权的开放标准）令牌提供程序。</summary>
      <returns>用于返回 OAuth 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">安全令牌服务 (STS) 的 URI。</param>
      <param name="credential">用户凭证。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String)">
      <summary>使用指定的 SAML 令牌创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>使用指定的 SAML 令牌和范围创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri)">
      <summary>使用指定的 SAML 令牌和安全令牌服务 (STS) 的 URI 创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>使用指定的 SAML 令牌、安全令牌服务 (STS) 的 URI 和令牌范围创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32)">
      <summary>使用指定的 SAML 令牌、安全令牌服务 (STS) 的 URI 和缓存范围创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
      <param name="cacheSize">高速缓存的大小。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSamlTokenProvider(System.String,System.Uri,System.Int32,Microsoft.ServiceBus.TokenScope)">
      <summary>使用指定的 SAML 令牌、安全令牌服务 (STS) 的 URI、缓存范围和令牌范围创建 SAML 令牌提供程序。</summary>
      <returns>用于返回 SAML 令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="samlToken">表示 SAML 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
      <param name="cacheSize">高速缓存的大小。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String)">
      <summary>创建一个 URL，该 URL 使用指定的密钥名称和共享访问密钥授予对令牌提供程序的访问权限。</summary>
      <returns>创建的 URL 用于授予对令牌提供程序的访问权限。</returns>
      <param name="keyName">密钥名称。</param>
      <param name="sharedAccessKey">共享的访问密钥</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>创建一个 URL，该 URL 使用指定的密钥名称、共享访问密钥和令牌范围授予对令牌提供程序的访问权限。</summary>
      <returns>创建的 URL 用于授予对令牌提供程序的访问权限。</returns>
      <param name="keyName">密钥名称。</param>
      <param name="sharedAccessKey">共享的访问密钥</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan)">
      <summary>创建一个 URL，该 URL 使用指定的密钥名称、共享访问密钥和令牌时间授予对令牌提供程序的访问权限。</summary>
      <returns>创建的 URL 用于授予对令牌提供程序的访问权限。</returns>
      <param name="keyName">密钥名称。</param>
      <param name="sharedAccessKey">共享的访问密钥</param>
      <param name="tokenTimeToLive">操作保持有效的时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedAccessSignatureTokenProvider(System.String,System.String,System.TimeSpan,Microsoft.ServiceBus.TokenScope)">
      <summary>创建一个允许访问令牌提供程序的 URL。</summary>
      <returns>创建的 URL 用于授予对令牌提供程序的访问权限。</returns>
      <param name="keyName">密钥名称。</param>
      <param name="sharedAccessKey">共享的访问密钥</param>
      <param name="tokenTimeToLive">操作保持有效的时间。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[])">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>返回共享密钥令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],Microsoft.ServiceBus.TokenScope)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>创建的令牌提供程序。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥集。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>返回共享密钥令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥集。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.Byte[],System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>创建的令牌提供程序。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥集。</param>
      <param name="stsUri">安全令牌服务的端点 Uri。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>返回共享密钥令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>创建的令牌提供程序。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>返回共享密钥令牌的 <see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSharedSecretTokenProvider(System.String,System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>创建共享密钥令牌提供程序。</summary>
      <returns>创建的令牌提供程序。</returns>
      <param name="issuerName">颁发者名称。</param>
      <param name="issuerSecret">颁发者密钥。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String)">
      <summary>创建一个简单 Web 令牌提供程序。</summary>
      <returns>用于返回简单 Web 令牌的<see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="token">表示简单 Web 令牌的字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,Microsoft.ServiceBus.TokenScope)">
      <summary>创建一个简单 Web 令牌提供程序。</summary>
      <returns>创建的简单 Web 令牌提供程序。</returns>
      <param name="token">表示简单 Web 令牌的字符串。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri)">
      <summary>创建一个简单 Web 令牌提供程序。</summary>
      <returns>用于返回简单 Web 令牌的<see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="token">表示简单 Web 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateSimpleWebTokenProvider(System.String,System.Uri,Microsoft.ServiceBus.TokenScope)">
      <summary>创建一个简单 Web 令牌提供程序。</summary>
      <returns>创建的简单 Web 令牌提供程序。</returns>
      <param name="token">表示简单 Web 令牌的字符串。</param>
      <param name="stsUri">安全令牌服务 (STS) 的 URI。</param>
      <param name="tokenScope">与提供程序关联的令牌范围。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>创建一个 Windows 令牌提供程序。</summary>
      <returns>用于返回 Windows 令牌的<see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">安全令牌服务 (STS) 的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.CreateWindowsTokenProvider(System.Collections.Generic.IEnumerable{System.Uri},System.Net.NetworkCredential)">
      <summary>创建一个 Windows 令牌提供程序。</summary>
      <returns>用于返回 Windows 令牌的<see cref="T:Microsoft.ServiceBus.TokenProvider" />。</returns>
      <param name="stsUris">安全令牌服务 (STS) 的 URI。</param>
      <param name="credential">用户凭证。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetToken(System.IAsyncResult)">
      <summary>完成异步操作以获取安全令牌。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />对象。</returns>
      <param name="result">一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.EndGetWebToken(System.IAsyncResult)">
      <summary>完成异步操作以获取 Web 令牌。</summary>
      <returns>表示 Web 令牌的<see cref="T:System.String" />。</returns>
      <param name="result">一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>异步检索提供程序的令牌。</summary>
      <returns>异步操作的结果。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="bypassCache">true 表示忽略高速缓存中的现有令牌信息；false 表示使用高速缓存中的令牌信息。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.GetWebTokenAsync(System.String,System.String,System.Boolean,System.TimeSpan)">
      <summary>异步检索提供程序的 Web 令牌。</summary>
      <returns>异步操作的结果。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="bypassCache">true 表示忽略高速缓存中的现有令牌信息；false 表示使用高速缓存中的令牌信息。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.IsWebTokenSupported">
      <summary>获取或设置一个值，该值指示此提供程序是否支持 Web 令牌。</summary>
      <returns>如果此提供程序支持 Web 令牌，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.NormalizeAppliesTo(System.String)">
      <summary>返回一个对象，其值与令牌提供程序相同。</summary>
      <returns>返回的对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginGetToken 方法时执行。</summary>
      <returns>一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginGetWebToken 方法时执行。</summary>
      <returns>一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
      <param name="timeout">指定获取安全令牌的消息的超时值的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>在调用 EndGetToken 方法时执行。</summary>
      <returns><see cref="T:System.IdentityModel.Tokens.SecurityToken" />对象。</returns>
      <param name="result">一个引用异步操作来获取令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>在调用 EndGetWebToken 方法时执行。</summary>
      <returns>表示 Web 令牌的<see cref="T:System.String" />。</returns>
      <param name="result">一个引用异步操作来获取 web 令牌的<see cref="T:System.IAsyncResult" />对象。</param>
      <param name="cacheUntil">此方法返回时，包含缓存中令牌信息的到期日期和时间。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.StripQueryParameters">
      <summary>获悉令牌提供程序是否除去查询参数。</summary>
      <returns>如果令牌提供程序除去查询参数，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.TokenProvider.TokenScope">
      <summary>获取或设置与提供程序关联的令牌范围。</summary>
      <returns>与提供程序关联的令牌范围。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProvider.Key">
      <summary>表示与令牌关联的密钥。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TokenProvider.Key" />类的新实例。</summary>
      <param name="appliesTo">指定密钥适用的地址。</param>
      <param name="claim">指定特定用户、应用程序、计算机或其他实体</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(Microsoft.ServiceBus.TokenProvider.Key)">
      <summary>确定指定的密钥是否等于当前对象。</summary>
      <returns>如果指定的对象等于当前对象，则为 true；否则为 false。</returns>
      <param name="other">与当前对象进行比较的密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前对象。</summary>
      <returns>如果指定的对象等于当前对象，则为 true；否则为 false。</returns>
      <param name="obj">要与当前对象进行比较的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProvider.Key.GetHashCode">
      <summary>返回密钥的散列码。</summary>
      <returns>密钥的散列码。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenProviderException">
      <summary>表示服务总线令牌提供程序的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TokenProviderException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TokenProviderException" />类的新实例。</summary>
      <param name="message">异常消息。</param>
      <param name="innerException">导致异常的错误。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.TokenScope">
      <summary>枚举服务总线的令牌范围。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Entity">
      <summary>实体。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.TokenScope.Namespace">
      <summary>命名空间。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.TransportClientEndpointBehavior">
      <summary>描述用于指定特定端点服务总线凭证的 WCF 端点行为。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.#ctor(Microsoft.ServiceBus.TokenProvider)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" />类的新实例。</summary>
      <param name="tokenProvider">用作绑定参数的令牌提供程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Channels.BindingParameterCollection)">
      <summary>将运行时的指定数据传递给指定的绑定以支持服务总线凭证行为。</summary>
      <param name="endpoint">要修改的端点。</param>
      <param name="bindingParameters">绑定元素用于支持行为的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyClientBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.ClientRuntime)">
      <summary>经由端点修改或扩展客户端。</summary>
      <param name="endpoint">要自定义的端点。</param>
      <param name="clientRuntime">要自定义的客户端运行时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceEndpoint,System.ServiceModel.Dispatcher.EndpointDispatcher)">
      <summary>经由端点修改或扩展服务。</summary>
      <param name="endpoint">公开合同的终点。</param>
      <param name="endpointDispatcher">要修改或扩展的端点调度程序。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.TransportClientEndpointBehavior.System#ServiceModel#Description#IEndpointBehavior#Validate(System.ServiceModel.Description.ServiceEndpoint)">
      <summary>确认端点是有效的 Windows Azure Service Bus 端点，可以通过此实例的行为进行修改。</summary>
      <param name="endpoint">要验证的端点。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.TransportClientEndpointBehavior.TokenProvider">
      <summary>获取或设置用作绑定参数的标记提供程序。</summary>
      <returns>用作绑定参数的令牌提供程序。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelayBinding">
      <summary>用于为通过 HTTP 请求而非 SOAP 消息公开的 Web 服务配置端点的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndWebHttpSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的使用指定类型的安全性和中继客户端认证的<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />实例。</summary>
      <param name="securityMode">与绑定一起使用的安全性类型。</param>
      <param name="relayClientAuthenticationType">中继上使用的客户端身份验证的类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的使用指定配置名称的<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />实例。</summary>
      <param name="configurationName">待使用的配置。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.AllowCookies">
      <summary>获取或设置一个值，该值指定通过 <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />发送的消息中是否允许 cookie。</summary>
      <returns>如果允许 cookie，则返回 true；否则，返回 false。默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ContentTypeMapper">
      <summary>获取或设置内容类型映射器。</summary>
      <returns>内容类型映射器。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WebHttpRelayBinding.CreateBindingElements">
      <summary>使用绑定的绑定元素创建集合。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.BindingElementCollection" />，它包含<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />所用的绑定元素的有序堆栈。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.EnvelopeVersion">
      <summary>获取 SOAP 信封版本。</summary>
      <returns>返回<see cref="T:System.ServiceModel.EnvelopeVersion" />。自从 <see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> 不使用 SOAP，这总是返回 EnvelopeVersion.None。<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" /> 不太可能是您应该用于 SOAP 消息传递的绑定。但是，Windows Azure Service Bus 确实支持 SOAP。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.HostNameComparisonMode">
      <summary>获取或设置主机名上使用的比较模式。</summary>
      <returns>主机名上使用的比较模式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferPoolSize">
      <summary>获取或设置传输使用的最大缓冲池大小。</summary>
      <returns>返回最大缓冲池大小。默认值为 524288 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxBufferSize">
      <summary>获取或设置传输支持的最大缓冲区大小。</summary>
      <returns>返回最大缓冲区大小。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.MaxReceivedMessageSize">
      <summary>获取或设置可以接收的最大允许消息大小。</summary>
      <returns>返回允许的最大邮件大小。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ProxyAddress">
      <summary>获取或设置一个 URI，该 URI 包含用于 HTTP 请求的代理地址。</summary>
      <returns>返回 <see cref="T:System.Uri" />，它包含用于 HTTP 请求的代理的地址。默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.ReaderQuotas">
      <summary>获取或设置已处理消息的 xml 阅读器配额。</summary>
      <returns>返回一个包含阅读器配额的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Scheme">
      <summary>获取与绑定一起使用的端点方案。</summary>
      <returns>返回方案。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.Security">
      <summary>获取当前实例的安全设置。</summary>
      <returns>返回一个包含安全设置的<see cref="T:Microsoft.ServiceBus.WebHttpRelaySecurity" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是同步还是异步处理传入请求。</summary>
      <returns>如果同步处理请求，则为 true；如果异步处理，则为 false。默认值为 false，以异步方式处理请求。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.TransferMode">
      <summary>获取或设置传输模式。</summary>
      <returns>返回一个包含传输模式的 <see cref="T:System.ServiceModel.TransferMode" />。默认值为 Buffered。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示是使用计算机范围的代理设置而不是用户特定的设置。</summary>
      <returns>如果使用机器范围的代理设置，则为 true。否则为 false。默认设置为 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelayBinding.WriteEncoding">
      <summary>获取或设置用于编写消息文本的字符编码。</summary>
      <returns>返回一个包含编码的<see cref="T:System.Text.Encoding" />。默认值为 utf8encoding。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WebHttpRelaySecurity">
      <summary>指定配置为接收 HTTP 请求的服务端点可用的安全类型。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Mode">
      <summary>获取或设置配置为使用<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />接收HTTP请求的端点使用的安全模式。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" />，它指示端点是使用传输级安全性，仅凭证，还是不使用安全性。默认值为 None。</returns>
      <exception cref="ArgumentOutOfRangeException">该值不是有效的 EndToEndWebHttpSecurityMode。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>获取或设置服务客户端使用的中继客户端认证类型。</summary>
      <returns>返回一个包含中继认证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。默认值为 RelayClientAuthenticationType.RelayAccessToken。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WebHttpRelaySecurity.Transport">
      <summary>获取或设置绑定的传输级安全性设置。</summary>
      <returns>返回一个包含绑定的 <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" />。设置的默认值是 ClientCredentialType 为 None，ProxyCredentialType 为 None，以及Realm =“”。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WindowsTokenProvider">
      <summary>表示服务总线的令牌提供程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.BuildKey(System.String,System.String)">
      <summary>为令牌提供程序生成密钥。</summary>
      <returns>生成的密钥。</returns>
      <param name="appliesTo">访问令牌适用的 URI。</param>
      <param name="action">请求操作。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.NormalizeAppliesTo(System.String)">
      <summary>返回目标地址的规范化 URI 形式。</summary>
      <returns>目标地址的规范化 URI 形式。</returns>
      <param name="appliesTo">规范化适用的 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在提供程序服务启动时检索令牌。</summary>
      <returns>操作的结果。</returns>
      <param name="appliesTo">将应用令牌的对象。</param>
      <param name="action">操作。</param>
      <param name="timeout">操作的持续时间。</param>
      <param name="callback">提供程序的参数。</param>
      <param name="state">提供程序的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnBeginGetWebToken(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在提供程序服务启动时检索 Web 令牌。</summary>
      <returns>操作的结果。</returns>
      <param name="appliesTo">将应用令牌的对象。</param>
      <param name="action">操作。</param>
      <param name="timeout">操作的持续时间。</param>
      <param name="callback">提供程序的参数。</param>
      <param name="state">提供程序的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetToken(System.IAsyncResult,System.DateTime@)">
      <summary>在提供程序服务停止时检索令牌。</summary>
      <returns>检索到的令牌。</returns>
      <param name="result">操作的结果。</param>
      <param name="cacheUntil">提供程序存储数据的指定持续时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WindowsTokenProvider.OnEndGetWebToken(System.IAsyncResult,System.DateTime@)">
      <summary>在提供程序服务停止时检索 Web 令牌。</summary>
      <returns>检索到的 Web 令牌。</returns>
      <param name="result">操作的结果。</param>
      <param name="cacheUntil">提供程序存储数据的指定持续时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.WS2007HttpRelayBinding">
      <summary>表示派生自<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />的可互操作绑定并为 Security、ReliableSession 和 TransactionFlow 绑定元素的更新版本提供支持。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor">
      <summary>初始化一个新的具有绑定所用指定安全性的<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" />实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType)">
      <summary>初始化一个新的具有绑定所用指定安全性和中继客户端认证的<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" />实例。</summary>
      <param name="securityMode">指定结合 SOAP 消息用于客户端的安全类型的安全模式。</param>
      <param name="relayClientAuthenticationType">客户端使用的身份验证类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" />实例，它具有绑定所用安全性类型、客户端中继指定认证类型以及指示是否启用可靠会话的值。</summary>
      <param name="securityMode">指定结合 SOAP 消息用于客户端的安全类型。</param>
      <param name="relayClientAuthenticationType">客户端使用的身份验证类型。</param>
      <param name="reliableSessionEnabled">如果启用了可靠会话，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.#ctor(System.String)">
      <summary>初始化一个新的具有由配置名称指定的绑定<see cref="T:Microsoft.ServiceBus.WS2007HttpRelayBinding" />实例。</summary>
      <param name="configName">的绑定配置名称 <see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" /></param>
    </member>
    <member name="M:Microsoft.ServiceBus.WS2007HttpRelayBinding.CreateMessageSecurity">
      <summary>从当前绑定中检索安全绑定元素。</summary>
      <returns>返回一个包含当前安全绑定元素的<see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBinding">
      <summary>表示可互操作的绑定，它通过云支持分布式事务和安全可靠会话。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.AllowCookies">
      <summary>获取或设置一个值，该值指示客户端是否接受 cookies 并在后续请求中传播 cookies。</summary>
      <returns>返回 <see cref="T:System.Boolean" />。如果绑定允许 cookie，则为 true；否则为 false。默认为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.CreateMessageSecurity">
      <summary>返回当前绑定的安全绑定元素。</summary>
      <returns>返回一个包含当前绑定的<see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBinding.GetTransport">
      <summary>从当前绑定返回传输绑定元素。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。包含当前绑定的传输绑定元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBinding.Security">
      <summary>获取此绑定使用的安全设置。</summary>
      <returns>返回一个包含此绑定所用安全性的<see cref="T:Microsoft.ServiceBus.WSHttpRelaySecurity" />。Mode 属性的默认值是 Message。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelayBindingBase">
      <summary>为基类提供 <see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" /> 和 <see cref="T:Microsoft.ServiceBus.WS2007FederationHttpRelayBinding" />通用的成员。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.#ctor(System.Boolean)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.WSHttpRelayBindingBase" />类实例，其中包含的值指示是否启用了可靠会话。</summary>
      <param name="reliableSessionEnabled">如果启用了可靠会话，则为 true；否则为 false。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateBindingElements">
      <summary>返回当前 Windows Azure Service Bus 绑定中包含的有序绑定元素集。</summary>
      <returns>返回包含绑定对象的<see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.CreateMessageSecurity">
      <summary>在派生类中实现时，从当前 Windows Azure Service Bus 绑定返回安全绑定元素。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.SecurityBindingElement" />。包含当前 Windows Azure Service Bus 绑定中的安全绑定元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.EnvelopeVersion">
      <summary>获取用于此绑定处理的消息的 SOAP 版本。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.EnvelopeVersion" />。与此 Windows Azure Service Bus 绑定一起使用的信封版本的值。值始终是 SOAP 1.2。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.WSHttpRelayBindingBase.GetTransport">
      <summary>在派生类中实现时，从当前 Windows Azure Service Bus 绑定返回传输绑定元素。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。包含当前 Windows Azure Service Bus 绑定中的传输绑定元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.HostNameComparisonMode">
      <summary>获取或设置主机名上使用的比较模式。</summary>
      <returns>主机名上使用的比较模式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxBufferPoolSize">
      <summary>获取或设置为使用此 Windows Azure Service Bus 绑定管理端点所需的缓冲区的缓冲区管理器分配的最大内存量。</summary>
      <returns>返回 <see cref="T:System.Int64" />。使用此绑定配置的端点使用的缓冲池的最大尺寸（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MaxReceivedMessageSize">
      <summary>获取或设置可由 Windows Azure Service Bus 绑定处理的消息的最大容量。</summary>
      <returns>返回 <see cref="T:System.Int64" />。由 Windows Azure Service Bus 绑定处理的邮件的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.MessageEncoding">
      <summary>获取或设置是否使用 MTOM 或 Text / XML 对 SOAP 消息进行编码。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.WSMessageEncoding" />。指示是使用 MTOM 还是 Text / XML 来编码 SOAP 消息。默认值为 Text / XML。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ProxyAddress">
      <summary>获取或设置 HTTP 代理的 URI 地址。</summary>
      <returns>返回用作 HTTP 代理地址的<see cref="T:System.Uri" />。默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReaderQuotas">
      <summary>获取或设置可由使用此安全总线绑定配置的端点处理的 SOAP 消息的复杂性的约束。</summary>
      <returns>返回指定复杂性约束的 <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.ReliableSession">
      <summary>获取一个对象，该对象提供对使用系统提供的绑定之一时可用的可靠 Windows Azure Service Bus 会话绑定元素的属性的便捷访问。</summary>
      <returns>返回 <see cref="T:System.ServiceModel.OptionalReliableSession" />。提供对使用系统提供的绑定之一时可用的可靠 Windows Azure Service Bus 会话绑定元素的属性的便捷访问。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.Scheme">
      <summary>获取使用此绑定配置的通道和侦听器的 URI 传输方案。</summary>
      <returns>返回表示 URI 传输方案的<see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.System#ServiceModel#Channels#IBindingRuntimePreferences#ReceiveSynchronously">
      <summary>获取一个值，该值指示是否可以同步或异步更有效地处理传入请求。</summary>
      <returns>如果可以同步更有效地处理请求，则为 true；否则为 false。默认值为 false，以异步方式处理请求。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.TextEncoding">
      <summary>获取或设置消息文本所用的字符编码。</summary>
      <returns>消息文本的字符编码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelayBindingBase.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示是否应使用系统自动配置的 HTTP 代理（如果可用）。</summary>
      <returns>如果应该使用系统自动配置的 HTTP 代理（如果可用），则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.WSHttpRelaySecurity">
      <summary>表示<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />的安全设置。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Message">
      <summary>获取此 Windows Azure Service Bus 绑定的消息级安全性设置。</summary>
      <returns>返回包含安全设置的<see cref="T:Microsoft.ServiceBus.NonDualMessageSecurityOverRelayHttp" />。默认值包括：EstablishSecurityContext 默认设置为 true，ClientCredentialType 为 Windows，AlgorithmSuite 为 Basic256，NegotiateServiceCredential 为 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Mode">
      <summary>指定此 Windows Azure Service Bus 绑定的消息安全模式。</summary>
      <returns>返回 <see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />。包含此 Windows Azure Service Bus 绑定的安全模式。默认值为 Transport。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.RelayClientAuthenticationType">
      <summary>获取或设置服务应用程序或客户端应用程序提供给 Windows Azure Service Bus 所需的认证类型。</summary>
      <returns>服务应用程序或客户端应用程序提供给 Windows Azure Service Bus 所需的认证类型。默认是 <see cref="F:Microsoft.ServiceBus.RelayClientAuthenticationType.RelayAccessToken" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.WSHttpRelaySecurity.Transport">
      <summary>获取一个对象，该对象包含此 Windows Azure Service Bus 绑定的传输级安全设置。</summary>
      <returns>返回包含此项目传输安全性的 <see cref="T:Microsoft.ServiceBus.HttpRelayTransportSecurity" />。默认值包括：ClientCredentialType 为 None，ProxyCredentialType 为 None。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement">
      <summary>一个补充基类<see cref="T:System.ServiceModel.Channels.TransportBindingElement" />的抽象类，其中包含面向连接的传输（如 TCP 和命名管道）通用的其他属性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>指示是否可以构建指定类型的通道工厂。</summary>
      <returns>如果可以建立通道工厂，则为 true；否则为 false。</returns>
      <param name="context">通道的绑定上下文。</param>
      <typeparam name="TChannel">要检查的通道类型。</typeparam>
      <exception cref="ArgumentNullException"><paramref name="context" /> 为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>返回一个值，该值指示绑定元素是否可以为特定类型的通道创建侦听器。</summary>
      <returns>如果可以创建 IChannelListener 类侦听器，则为 true；否则为 false。</returns>
      <param name="context">为绑定元素提供上下文的绑定上下文。</param>
      <typeparam name="TChannel">要检查的通道类型。</typeparam>
      <exception cref="ArgumentNullException"><paramref name="context" /> 为空。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ChannelInitializationTimeout">
      <summary>获取或设置时间跨度，它指定在超时之前通道初始化必须完成的时间。</summary>
      <returns>返回一个初始化超时的 <see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.ConnectionBufferSize">
      <summary>获取并设置用于从客户端或服务在线路上传输序列化消息块的缓冲区容量。</summary>
      <returns>连接缓冲区的容量。默认值为 8192 字节。</returns>
      <exception cref="ArguementOutOfRangeException">该值小于零。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>从绑定堆栈中检索属性（如果存在）。</summary>
      <returns>绑定堆栈中的对象（如果存在），如果未找到，则返回空。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">属性类型。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.HostNameComparisonMode">
      <summary>获取或设置一个值，该值指示在匹配 URI 时是否使用主机名来访问服务。</summary>
      <returns>返回一个确定主机名是否用于访问服务的<see cref="T:System.ServiceModel.HostNameComparisonMode" />。默认值为 StrongWildCard，它忽略比较中的主机名和端口号。</returns>
      <exception cref="ArguementOutOfRangeException">该值不是有效的 HostnameComparisonMode。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxBufferSize">
      <summary>获取或设置要使用的缓冲区的最大尺寸。</summary>
      <returns>用于缓冲内存中传入消息的最大字节数。默认值为 65,536 字节。</returns>
      <exception cref="ArguementOutOfRangeException">该值小于或等于零。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxOutputDelay">
      <summary>获取或设置在发送之前，消息块或完整消息可以在内存中保持缓冲的最长时间间隔。</summary>
      <returns>返回一个 <see cref="T:System.TimeSpan" />，它指定在发送之前，消息块或完整消息可以在内存中保持缓冲的最大时间间隔。默认值为 2 秒。仅当传出消息的 AllowedOutputBatching 属性设置为 true 时，此属性才有意义。否则，将忽略此值并立即发送消息。</returns>
      <exception cref="ArguementOutOfRangeException">该值小于零。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingAccepts">
      <summary>获取或设置可用于处理到服务的传入连接的挂起异步接受操作的最大数量。</summary>
      <returns>服务可以同时接受的最大连接数。默认值为 1。</returns>
      <exception cref="ArguementOutOfRangeException">该值小于或等于零。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.MaxPendingConnections">
      <summary>获取或设置等待在服务上分派的最大连接数。</summary>
      <returns>等待在服务上发送的最大入站连接数。默认值为 10。</returns>
      <exception cref="ArguementOutOfRangeException">该值小于或等于零。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Channels.ConnectionOrientedTransportBindingElement.TransferMode">
      <summary>获取或设置一个值，该值指定是使用面向连接的传输缓冲还是流式传输消息。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.TransferMode" />，它表示通道是使用流式传输还是缓冲模式的消息传输。默认值为 Buffered。</returns>
      <exception cref="ArguementOutOfRangeException">该值不是有效的 TransferMode。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement">
      <summary>表示地址配置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElement.Value">
      <summary>获取或设置地址的 URI。</summary>
      <returns>地址的 URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection">
      <summary>表示地址配置中的元素集。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.AddressConfigurationElementCollection.Addresses">
      <summary>获取集合中元素的地址。</summary>
      <returns>集合中元素的地址。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement">
      <summary>表示包含<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" />实例集的配置部分。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement">
      <summary>表示一个配置元素，它指定用于与基于 ASMX的WS-I Basic Profile 1.1一致的 Web 服务（如基于 ASMX 的服务）通信的绑定，或通过 Windows Azure Service Bus 接受来自基于 ASMX 的客户端的消息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement" /> 实例。</summary>
      <param name="name">绑定元素的名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.AllowCookies">
      <summary>获取或设置一个布尔值，该值指示客户端是否接受 cookie 并在后续请求中传播它们。</summary>
      <returns>如果客户端接受 cookie 并在后续请求中传播它们，则为 true；否则为 false。默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.BindingElementType">
      <summary>获取此绑定元素的类型。</summary>
      <returns>返回一个包含绑定元素类型的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>使用指定绑定集合的内容初始化此绑定配置元素。</summary>
      <param name="binding">绑定元素的集合。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.IsDynamic">
      <summary>获取或设置绑定元素是否为动态。</summary>
      <returns>如果绑定元素是动态的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的消息的缓冲池的最大容量。</summary>
      <returns>返回一个包含缓冲池容量的 <see cref="T:System.Int64" />。默认值为 512*1024 字节。最小值为 0。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxBufferSize">
      <summary>获取或设置在为使用此绑定配置的端点处理消息时存储消息的缓冲区的最大容量。</summary>
      <returns>返回最大缓冲区容量。默认值为 65,536 字节。最小值为 1 个字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置可在使用此绑定配置的通道上接收的消息的最大消息大小（以字节为单位），包括标头。</summary>
      <returns>收到的最大邮件大小。默认值为 65,536 字节。最小值为 1 个字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.MessageEncoding">
      <summary>获取或设置消息传递编码，该编码指示是否使用 MTOM 还是 text/XML 对 SOAP 消息进行编码。</summary>
      <returns>返回一个包含 text/XML 或 MTOM 的<see cref="T:System.ServiceModel.WSMessageEncoding" />。默认值为 Text。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Properties">
      <summary>获取对象的集合，这些对象可以是此绑定配置元素的属性或配置元素对象。</summary>
      <returns>返回一个包含当前实例属性的<see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ProxyAddress">
      <summary>获取或设置描述 HTTP 代理地址的 URI。</summary>
      <returns>返回一个包含 URI <see cref="T:System.Uri" />。默认为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.ReaderQuotas">
      <summary>获取或设置一个 XML 值，该值对可由此绑定配置的端点处理的 SOAP 消息的复杂性施加约束。</summary>
      <returns>返回一个包含阅读器配额的 <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.Security">
      <summary>获取要用于绑定的安全性类型。</summary>
      <returns>返回一个指定此绑定使用的安全性类型的<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" />。默认值为 None。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TextEncoding">
      <summary>获取或设置用于在绑定上发送消息的字符集编码。</summary>
      <returns>返回一个包含文本编码 <see cref="T:System.Text.Encoding" />。默认值为 UTF8。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.TransferMode">
      <summary>获取或设置是在请求或响应上缓冲或流式传输消息。</summary>
      <returns>返回一个包含传输模式的 <see cref="T:System.ServiceModel.TransferMode" />。默认值为 TransferMode.Buffered。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示是否应使用系统自动配置的 HTTP 代理（如果可用）。</summary>
      <returns>如果使用 http 代理，则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement">
      <summary>配置 SOAP 消息安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.AlgorithmSuite">
      <summary>获取或设置要使用<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" />的安全算法。</summary>
      <returns>返回一个包含安全算法的 <see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。默认值为 Basic256。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement.ClientCredentialType">
      <summary>获取或设置用于客户端身份验证的客户端凭据的类型。</summary>
      <returns>返回一个包含凭据的 <see cref="T:System.ServiceModel.BasicHttpMessageCredentialType" />。默认为 UserName。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement">
      <summary>表示配置基本 HTTP 中继绑定的安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Message">
      <summary>获取一个配置元素，该元素指定<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />的消息级安全性设置。</summary>
      <returns>返回一个包含安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.BasicHttpRelayMessageSecurityElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Mode">
      <summary>获取或设置<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />的安全模式。</summary>
      <returns>返回<see cref="T:Microsoft.ServiceBus.EndToEndBasicHttpSecurityMode" />枚举的值。默认值为 none。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>获取或设置此配置元素中指定的认证类型。</summary>
      <returns>从中返回一个值 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />，它包含应用当前实例的绑定元素使用的认证类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.BasicHttpRelaySecurityElement.Transport">
      <summary>获取一个配置元素，该元素指定<see cref="T:Microsoft.ServiceBus.BasicHttpRelayBinding" />绑定的传输级安全设置。</summary>
      <returns>返回一个包含控制 HTTP 传输的认证参数属性的<see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement">
      <summary>表示为面向连接的传输绑定元素（如 TCP 和命名管道）提供其他配置设置的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将此配置元素的设置应用于指定的 <see cref="T:System.ServiceModel.Channels.BindingElement" />。</summary>
      <param name="bindingElement">用于更新设置的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ChannelInitializationTimeout">
      <summary>获取或设置通道在断开连接之前处于初始化状态的最长时间。</summary>
      <returns>断开连接之前通道可以处于初始化状态的最长时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.ConnectionBufferSize">
      <summary>获取或设置用于从客户端或服务在线路上传输部分序列化消息的缓冲区的大尺寸。</summary>
      <returns>返回一个 <see cref="T:System.Int32" />，它包含用于从客户端或服务在线路上传输部分序列化消息的缓冲区容量。默认值为 8K。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定配置元素的内容复制到此配置元素。</summary>
      <param name="from">要复制的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.HostNameComparisonMode">
      <summary>获取或设置一个值，该值指示在匹配 URI 时是否使用主机名来访问服务。</summary>
      <returns>有效的 HostnameComparisonMode 值指示在将传入请求路由到端点 URI 时是否包含主机名。默认值为 StrongWildcard，它忽略匹配中的主机名。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxBufferSize">
      <summary>获取或设置要使用的缓冲区的最大尺寸。</summary>
      <returns>用于缓冲内存中传入消息的最大字节数。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxOutputDelay">
      <summary>获取或设置消息的一部分或完整消息在发送之前可以在内存中保持缓冲的最长时间间隔。</summary>
      <returns>消息或完整消息的一部分在发送之前可以保留在内存中的最长时间间隔。默认值为 2 秒。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingAccepts">
      <summary>获取或设置可用于处理服务上的传入连接的挂起异步接受线程的最大数量。</summary>
      <returns>服务可以接受的最大待处理消息数。默认值为 1。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.MaxPendingConnections">
      <summary>获取或设置挂起连接的最大数量。</summary>
      <returns>最大挂起连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.Properties">
      <summary>获取 ConfigurationPropertyCollection 实例，该实例包含 ConfigurationProperty 对象集，这些对象可以是此配置元素的属性或 ConfigurationElement 对象。</summary>
      <returns>返回一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />，其中包含 ConfigurationProperty 对象集的实例，该对象可以是此配置元素的属性或 ConfigurationElement 对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionOrientedTransportElement.TransferMode">
      <summary>获取或设置一个值，该值指定是使用面向连接的传输缓冲还是流式传输消息。</summary>
      <returns>返回有效的 <see cref="T:System.ServiceModel.TransferMode" />值，它指定通道是使用流式传输还是缓冲式消息传输模式。默认值为 Buffered。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement">
      <summary>读取描述连接状态的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.ConnectionStatusElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.BehaviorType">
      <summary>获取行为的类型。</summary>
      <returns>返回一个包含行为类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ConnectionStatusElement.CreateBehavior">
      <summary>根据当前配置设置创建行为扩展。</summary>
      <returns>返回一个包含行为扩展的 <see cref="T:System.Object" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement">
      <summary>表示指定用于传输 SOAP 消息的 HTTP 传输的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.AllowCookies">
      <summary>获取或设置配置文件中的值，该值指示客户端是否接受 cookie 并在后续请求中传播它们。</summary>
      <returns>如果允许 cookies，则为 true；否则为 false。默认为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将此配置元素的设置应用于指定的绑定元素。</summary>
      <param name="bindingElement">用于更新设置的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.BindingElementType">
      <summary>获取绑定的类型。（重写 BindingElementExtensionElement.BindingElementType。）</summary>
      <returns>返回一个包含绑定类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定扩展元素的属性复制到此配置元素。</summary>
      <param name="from">要复制属性的扩展元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.CreateDefaultBindingElement">
      <summary>根据此配置元素中的设置创建绑定元素。</summary>
      <returns>返回一个包含默认绑定元素的 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.InitializeFrom(System.ServiceModel.Channels.BindingElement)">
      <summary>使用指定绑定元素的内容初始化此绑定配置元素。</summary>
      <param name="bindingElement">要初始化的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.KeepAliveEnabled">
      <summary>获取或设置配置文件中的布尔值，该值指示是否与 Internet 资源建立持久连接。</summary>
      <returns>如果保持与 Internet 资源的持久连接，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.MaxBufferSize">
      <summary>从配置文件中获取或设置缓冲池的最大容量。</summary>
      <returns>返回最大缓冲区容量。默认值为 65,536。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.Properties">
      <summary>获取一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />，它包含 ConfigurationProperty 对象集的实例，该对象可以是此配置元素的属性或 ConfigurationElement 对象。（重写 TransportElement.Properties。）</summary>
      <returns>返回一个包含当前实例属性的<see cref="T:System.Configuration.ConfigurationPropertyCollection" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAddress">
      <summary>获取或设置配置文件中的 URI，该 URI 包含用于 HTTP 请求的代理地址。</summary>
      <returns>返回一个包含 URI <see cref="T:System.Uri" />。默认为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.ProxyAuthenticationScheme">
      <summary>获取或设置用于验证 HTTP 代理处理的客户端请求的认证方案。</summary>
      <returns>用于验证 HTTP 代理处理的客户端请求的认证方案。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.RelayClientAuthenticationType">
      <summary>获取或设置存储在配置文件中的中继客户端认证类型。</summary>
      <returns>返回<see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.TransferMode">
      <summary>获取或设置配置文件中的值，该值指定是在请求或响应上缓冲或流式传输消息。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.TransferMode" />，它指定是在请求或响应上缓冲或流式传输消息。默认情况下，HTTP、TCP/IP 和命名管道传输使用缓消息传输模式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportElement.UseDefaultWebProxy">
      <summary>获取或设置配置文件中的值，该值指示是使用计算机范围的代理设置而不是用户特定的设置。</summary>
      <returns>如果使用 System.Net 默认代理设置，则为 true；否则为 false。默认为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement">
      <summary>表示控制 HTTP 传输的认证参数的配置元素。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>从配置文件中获取或设置用于对代理进行身份验证的客户端凭证的类型。</summary>
      <returns>返回一个包含代理类型的<see cref="T:System.ServiceModel.HttpProxyCredentialType" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement">
      <summary>表示配置元素，该元素指定用于通过 Windows Azure Service Bus 传输 SOAP 消息的 HTTPS 传输。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.BindingElementType">
      <summary>获取绑定元素的类型。</summary>
      <returns>绑定元素的类型。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.HttpsRelayTransportElement.CreateDefaultBindingElement">
      <summary>从此配置元素中的设置创建绑定元素。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.Channels.TransportBindingElement" />，其属性从此配置元素中的设置复制。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.IssuerElement">
      <summary>描述 Windows Azure Service Bus 令牌颁发者的配置元素。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Address">
      <summary>获取或设置令牌颁发者的 URI 地址。</summary>
      <returns>令牌颁发者的 URI 地址。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.IssuerElement.CopyFrom(System.Configuration.ConfigurationElement)">
      <summary>将指定配置元素的内容复制到此配置元素。</summary>
      <param name="from">要从中复制内容的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.IssuerElement.Properties">
      <summary>获取此配置元素中包含的属性集。</summary>
      <returns>此配置元素中包含的属性集。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement">
      <summary>通过 Windows Azure Service Bus 在中继连接上描述消息安全选项的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.AlgorithmSuite">
      <summary>从配置文件中获取或设置用于保护消息的消息加密和密钥包装算法。</summary>
      <returns>返回一个包含消息加密和密钥包装算法的<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。默认为 Basic256，它将 256 位高级加密标准 (AES) 指定为对称加密算法。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement.ClientCredentialType">
      <summary>从配置文件中获取或设置在使用基于消息的安全性或 TransportWithMessageCredential 执行客户端认证时要使用的凭证类型。</summary>
      <returns>返回一个包含凭证类型的<see cref="T:System.ServiceModel.MessageCredentialType" />。默认为 Windows。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement">
      <summary>使用 HTTP 传输机制描述 Windows Azure Service Bus 中继上邮件安全性的配置元素。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.AlgorithmSuite">
      <summary>从配置文件中获取或设置用于保护 HTTP 消息的消息加密和密钥包装算法。</summary>
      <returns>用于保护 HTTP 消息的消息加密和密钥包装算法。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.ClientCredentialType">
      <summary>从配置文件中获取或设置在使用基于消息的安全性或 TransportWithMessageCredential 执行客户端认证时要使用的凭证类型。</summary>
      <returns>返回一个包含消息凭证类型的<see cref="T:System.ServiceModel.MessageCredentialType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayHttpElement.NegotiateServiceCredential">
      <summary>从配置文件中获取或设置一个布尔值，该值指定是在带外客户端配置服务凭证，还是通过协商过程从服务获取服务凭证。</summary>
      <returns>如果服务凭证是在带外客户端提供的，或者是通过协商过程从服务获得服务凭证，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement">
      <summary>一个配置元素，它描述了发送至 Windows Azure Service Bus 中继的单向消息的消息安全性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.AlgorithmSuite">
      <summary>从配置文件中获取或设置用于保护单向消息的消息加密和密钥包装算法。</summary>
      <returns>返回一个包含算法套件的<see cref="T:System.ServiceModel.Security.SecurityAlgorithmSuite" />。默认值为 Base256。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement.ClientCredentialType">
      <summary>从配置文件中获取或设置在使用基于消息的安全性或 TransportWithMessageCredential 执行客户端认证时要使用的凭证类型。</summary>
      <returns>返回一个包含消息凭证类型的<see cref="T:System.ServiceModel.MessageCredentialType" />。默认为 Windows。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement">
      <summary>表示包含<see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" />实例集的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement">
      <summary>描述 <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />配置设置的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement" /> 实例。</summary>
      <param name="name">配置中设置的绑定名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.BindingElementType">
      <summary>获取此配置元素表示的绑定类型。</summary>
      <returns>返回一个包含<see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />类绑定的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>从指定绑定的属性值初始化此 XML 配置元素的内容。</summary>
      <param name="binding">用于复制设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ListenBacklog">
      <summary>获取或设置可以挂起的最大排队连接请求数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的消息的缓冲池所允许的最大尺寸。</summary>
      <returns>返回存储绑定处理的消息的缓冲池允许的最大尺寸。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxBufferSize">
      <summary>获取或设置用于在内存中存储消息的缓冲区的最大容量（以字节为单位）。</summary>
      <returns>返回用于在内存中存储消息的缓冲区的最大尺寸（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxConnections">
      <summary>获取或设置要为客户端上的后续重用而池化的最大连接数，以及允许在服务器上挂起的最大连接数。</summary>
      <returns>在客户端上，返回要合并以供后续重用的最大连接数；在服务器上，返回允许挂起的最大连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置绑定处理的已接收消息的最大大小。</summary>
      <returns>返回绑定处理的已接收消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Properties">
      <summary>获取一个集合，该集合包含可以是此绑定配置元素的属性或配置元素对象的对象。</summary>
      <returns>返回一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />，其中包含 ConfigurationProperty 对象集的实例，该对象可以是此配置元素的属性或 ConfigurationElement 对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.ReaderQuotas">
      <summary>获取或设置一个 XML 元素，该元素包含可由使用此绑定配置的端点处理的 SOAP 消息复杂性的约束。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />，它指定了 SOAP 消息的复杂性约束。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetEventRelayBindingElement.Security">
      <summary>获取包含 Windows Azure Service Bus 网络事件中继绑定的安全选项的配置元素。</summary>
      <returns>返回一个描述安全选项的<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" />。默认值为 Transport。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement">
      <summary>表示包含<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" />实例集的配置部分。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement">
      <summary>表示一个配置元素，该元素指定通过服务总线进行特定于对等通道的 TCP 消息传递的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement" /> 实例。</summary>
      <param name="name">唯一标识此配置元素的名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.BindingElementType">
      <summary>获取或设置一个 XML 值，该值包含当前实例的绑定元素的类型。</summary>
      <returns>返回一个包含当前实例类型的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>使用指定绑定的内容初始化当前实例。</summary>
      <param name="binding">绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ListenBacklog">
      <summary>获取或设置一个 XML 值，该值包含可以挂起的最大排队连接请求数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferPoolSize">
      <summary>获取或设置一个 XML 值，该值包含存储绑定处理的消息的缓冲池所允许的最大大小。</summary>
      <returns>返回存储绑定处理的消息的缓冲池允许的最大尺寸。默认值为 65,536。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxBufferSize">
      <summary>获取或设置一个 XML 值，该值包含用于在内存中存储消息的缓冲区的最大大小（以字节为单位）。</summary>
      <returns>返回用于在内存中存储消息的缓冲区的最大尺寸（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxConnections">
      <summary>获取或设置一个 XML 值，该值指定服务分别创建和接受的最大出站和入站连接数。</summary>
      <returns>在客户端上，返回要合并以供后续重用的最大连接数；在服务器上，返回允许挂起的最大连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置一个 XML 值，该值包含可在使用此绑定配置的通道上接收的消息的最大大小。</summary>
      <returns>返回绑定处理的消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Properties">
      <summary>获取 ConfigurationPropertyCollection 实例，该实例包含 ConfigurationProperty 对象集，这些对象可以是此配置元素的属性或 ConfigurationElement 对象。</summary>
      <returns>返回一个 <see cref="T:System.Configuration.ConfigurationPropertyCollection" />，它包含 ConfigurationProperty 对象集，可以是此配置元素的属性或 ConfigurationElement 对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.ReaderQuotas">
      <summary>获取或设置一个 XML 值，该值对可由使用此绑定配置的端点处理的 SOAP 消息的复杂性进行约束。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />，它指定了 SOAP 消息的复杂性约束。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelayBindingElement.Security">
      <summary>获取包含服务总线单向TCP中继绑定的安全元素的 XML 值。</summary>
      <returns>返回一个描述安全元素的<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement">
      <summary>定义 App.config 文件中<see cref="T:System.ServiceModel.NetTcpBinding" />绑定的安全设置。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Message">
      <summary>获取消息的安全设置。</summary>
      <returns>返回一个包含消息的<see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayOnewayElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Mode">
      <summary>获取或设置应用的安全性类型。</summary>
      <returns>返回一个包含安全模式的<see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />实例。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.RelayClientAuthenticationType">
      <summary>获取一个值，该值描述在发送邮件时是否需要服务的客户端将 Windows Azure Service Bus 服务发出的安全令牌呈现给 Windows Azure Service Bus 服务。</summary>
      <returns>返回一个包含中继认证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetOnewayRelaySecurityElement.Transport">
      <summary>获取传输的安全设置。</summary>
      <returns>返回一个包含安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.OnewayRelayTransportSecurityElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement">
      <summary>表示包含<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" />实例集的配置部分。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement">
      <summary>描述适合通过 Windows Azure Service Bus 中继进行跨机器通信的安全可靠绑定的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的具有指定配置名称的<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement" />实例。</summary>
      <param name="name">绑定配置名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.BindingElementType">
      <summary>获取此配置元素的类型。（重写 StandardBindingElement.BindingElementType。）</summary>
      <returns>返回一个包含配置元素类型的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ConnectionMode">
      <summary>获取或设置存储在此配置的 App.config 文件中的连接模式。</summary>
      <returns>返回一个包含连接模式的<see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" />。默认为 Relayed。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>从指定绑定的属性值初始化此绑定配置元素的内容。</summary>
      <param name="binding">从中初始化的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ListenBacklog">
      <summary>获取或设置 App.config 文件中的值，该值指定可以等待在侦听器上接受的最大通道数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferPoolSize">
      <summary>获取或设置 App.config 文件中的值，该文件包含存储绑定处理的 TCP 消息的缓冲池的最大容量。</summary>
      <returns>返回存储绑定处理的消息的缓冲池允许的最大尺寸。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxBufferSize">
      <summary>获取或设置 App.config 文件中的值，该值指定用于在内存中存储消息的缓冲区的最大容量（以字节为单位）。</summary>
      <returns>用于在内存中存储消息的缓冲区的最大容量（以字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxConnections">
      <summary>获取或设置 App.config 文件中的值，该值指定服务分别创建和接受的最大出站和入站连接数。</summary>
      <returns>在客户端上，返回要合并以供后续重用的最大连接数；在服务器上，返回允许挂起的最大连接数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置 App.config 文件中的值，该文件包含可在使用此绑定配置的通道上接收的消息的最大容量。</summary>
      <returns>返回绑定处理的消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定元素。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Properties">
      <summary>获取 ConfigurationPropertyCollection 实例，该实例包含 ConfigurationProperty 对象集，这些对象可以是此配置元素的属性或 ConfigurationElement 对象。（重写 StandardBindingElement.Properties。）</summary>
      <returns>ConfigurationProperty 对象集可以是此配置元素的属性或 ConfigurationElement 对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReaderQuotas">
      <summary>从 App.config 文件中获取一个值，该值对使用此绑定配置的端点可以处理的 SOAP 消息的复杂性进行约束。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />，它指定了对交换的 SOAP 消息的复杂性约束。以下“备注”部分提供了这些约束的默认值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.ReliableSession">
      <summary>获取一个配置元素，该元素指定是否在通道端点之间建立可靠会话。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" />，它指示是否在通道端点之间建立 WS-RM 可靠会话。默认值为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.Security">
      <summary>从 App.config 文件中获取一个值，该值确定要与此绑定一起使用的安全性类型。</summary>
      <returns>返回一个包含关联绑定安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" />。默认值为 none。从关联绑定中检索的<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" />使用 NetTcpRelayBinding 间接创建。因此，在创建绑定之后，除非您还新建绑定，否则不能用新对象替换此对象。但是，可以通过安全属性设置 WebHttpRelaySecurity 的大部分成员。有关绑定安全性的更多信息，请参阅“安全和保护”部分。除了传输和编码类型之外，安全性设置表示定义此绑定的三个主要属性之一。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode">
      <summary>获取或设置 App.config 文件中的值，该值指定消息是缓冲还是流式传输还是请求或响应。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.TransferMode" />，其中包含指示使用绑定配置的服务是使用流式传输还是缓冲（或两种）消息传输模式。可选值如下所示：BufferedStreamedStreamedRequestStreamedResponse。默认值为 Buffered。指定 <see cref="P:Microsoft.ServiceBus.Configuration.NetTcpRelayBindingElement.TransferMode" />为流式传输表示 StreamedRequest 和 StreamedResponse。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement">
      <summary>表示通过 Windows Azure Service Bus 中继配置网络 TCP 服务的安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Message">
      <summary>获取一个表示<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />消息安全设置的配置元素。</summary>
      <returns>返回一个包含消息的<see cref="T:Microsoft.ServiceBus.Configuration.MessageSecurityOverRelayConnectionElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Mode">
      <summary>获取或设置一个 XML 值，该值描述<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />配置的端点是使用消息级还是传输级安全性。</summary>
      <returns>返回一个包含安全模式的<see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />。默认值为 Transport。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>获取或设置客户端在发送消息时向 Windows Azure Service Bus 提供所需的认证类型。</summary>
      <returns>返回一个包含身份验证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NetTcpRelaySecurityElement.Transport">
      <summary>获取的<see cref="T:Microsoft.ServiceBus.NetTcpRelayBinding" />传输安全性设置。</summary>
      <returns>返回一个包含中继绑定的<see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement">
      <summary>表示使用 HTTP 为非双工服务合同发送的消息的安全性的配置设置。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement.EstablishSecurityContext">
      <summary>获取或设置一个 XML 值，该值定义是否已建立安全上下文。</summary>
      <returns>如果建立了上下文，则为 true；否则为 true。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement">
      <summary>表示一个配置元素，当包含在自定义绑定中时，指定通过 Windows Azure Service Bus 传输单向消息的通道。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将此配置元素中的设置应用于指定的绑定元素。</summary>
      <param name="bindingElement">用于更新设置的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.BindingElementType">
      <summary>获取当前实例的类型。</summary>
      <returns>返回一个包含<see cref="T:Microsoft.ServiceBus.RelayedOnewayTransportBindingElement" />类当前实例的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionMode">
      <summary>获取或设置描述单向连接模式的 XML 值。</summary>
      <returns>返回一个包含连接模式的<see cref="T:Microsoft.ServiceBus.RelayedOnewayConnectionMode" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ConnectionPoolSettings">
      <summary>获取或设置描述当前实例的连接池设置的 XML 值。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" />，其中包含应用当前实例的绑定元素使用的连接池设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将设置从指定的配置元素复制到当前实例。</summary>
      <param name="from">要从中复制的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.ListenBacklog">
      <summary>获取或设置可以挂起的最大排队连接请求数。</summary>
      <returns>可以挂起的最大排队连接请求数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportElement.RelayClientAuthenticationType">
      <summary>获取或设置一个 XML 值，该值描述此配置元素中指定的认证类型。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />，其中包含当前实例适用的绑定元素使用的认证类型。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement">
      <summary>控制<see cref="T:Microsoft.ServiceBus.NetOnewayRelayBinding" /> 和 <see cref="T:Microsoft.ServiceBus.NetEventRelayBinding" />类传输安全设置的配置元素。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.RelayedOnewayTransportSecurityElement.ProtectionLevel">
      <summary>获取或设置应用于通过使用此配置元素配置的绑定传输的消息的传输安全保护级别。</summary>
      <returns>返回一个 <see cref="T:System.Net.Security.ProtectionLevel" />，其中包含此配置元素中指定的传输安全保护级别。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceBusSectionType">
      <summary>枚举服务总线部分类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.All">
      <summary>全部类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.MessagingFactory">
      <summary>Messaging Factory 部分类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Configuration.ServiceBusSectionType.NamespaceManager">
      <summary>命名空间管理器部分类型。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement">
      <summary>包含 AppFabric Service Bus 注册表的设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.BehaviorType">
      <summary>获取服务注册表设置的操作类型。</summary>
      <returns>服务注册表设置的操作类型。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.CreateBehavior">
      <summary>根据当前注册表设置创建行为扩展。</summary>
      <returns>基于当前注册表设置的行为扩展。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DiscoveryMode">
      <summary>获取或设置服务的查找方式。</summary>
      <returns>查找类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.ServiceRegistrySettingsElement.DisplayName">
      <summary>获取或设置端点的显示名称。</summary>
      <returns>显示名称。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement">
      <summary>表示共享访问签名元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement)">
      <summary>从此配置元素复制指定的元素。</summary>
      <param name="source">复制内容的来源。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Key">
      <summary>获取或设置共享访问密钥。</summary>
      <returns>共享的访问密钥</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.KeyName">
      <summary>获取或设置共享访问密钥名称。</summary>
      <returns>共享访问密钥名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.Properties">
      <summary>获取配置属性的集合。</summary>
      <returns>配置属性的集合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedAccessSignatureElement.TokenScope">
      <summary>获取或设置与元素关联的令牌范围。</summary>
      <returns>与元素关联的令牌范围。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SharedSecretElement">
      <summary>一个配置元素，它指定配置用于使用<see cref="F:Microsoft.ServiceBus.TransportClientCredentialType.SharedSecret" />凭证的服务或客户端端点的凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SharedSecretElement.CopyFrom(Microsoft.ServiceBus.Configuration.SharedSecretElement)">
      <summary>将指定的共享密钥配置元素的内容复制到此配置元素。</summary>
      <param name="source">要复制的共享密钥配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerName">
      <summary>获取或设置颁发者名称。</summary>
      <returns>颁发者名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.IssuerSecret">
      <summary>获取或设置颁发者密钥。</summary>
      <returns>颁发者密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.Properties">
      <summary>获取此配置元素的属性，其中包含颁发者名称和颁发者密钥。</summary>
      <returns>包含颁发者名称和颁发者密钥的此配置元素的属性。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SharedSecretElement.TokenScope">
      <summary>获取或设置令牌范围。</summary>
      <returns>令牌范围。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement">
      <summary>表示为 TCP 传输指定其他连接池设置的配置元素。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.GroupName">
      <summary>获取或设置用于传出通道的连接池的名称。</summary>
      <returns>返回用于传出通道的连接池的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.IdleTimeout">
      <summary>获取或设置连接在断开连接之前可以空闲的最长时间。</summary>
      <returns>返回正数 <see cref="T:System.TimeSpan" />，它指定在断开连接之前连接可以空闲的最长时间。默认值为 00:02:00。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.LeaseTimeout">
      <summary>获取或设置关闭活动连接之后的时间跨度。</summary>
      <returns>返回一个 <see cref="T:System.TimeSpan" />，它指示 TCP 连接关闭的持续时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement.MaxOutboundConnectionsPerEndpoint">
      <summary>获取或设置服务启动的远程端点的最大连接数。</summary>
      <returns>返回服务启动的远程端点的最大连接数。默认值为 10。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElement">
      <summary>表示 URI 元素的安全令牌服务。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.StsUriElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElement.Value">
      <summary>获取或设置元素的值。</summary>
      <returns>元素的值。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection">
      <summary>表示安全令牌服务的 URI 元素集。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.StsUriElementCollection.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.StsUriElementCollection" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.StsUriElementCollection.Addresses">
      <summary>获取集合中元素的地址。</summary>
      <returns>集合中元素的地址。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement">
      <summary>指定一个配置元素，该配置元素使通道在 TCP 传输中包含自定义绑定时传输消息。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将此配置元素的设置应用于指定的绑定元素。</summary>
      <param name="bindingElement">用于更新设置的绑定元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.BindingElementType">
      <summary>获取此绑定元素的类型。</summary>
      <returns>返回一个包含绑定元素类型的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionMode">
      <summary>获取或设置存储在此配置的 App.config 文件中的连接模式。</summary>
      <returns>返回一个包含连接模式的<see cref="T:Microsoft.ServiceBus.TcpRelayConnectionMode" />。默认设置为 Relayed。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ConnectionPoolSettings">
      <summary>获取或设置描述当前实例的连接池设置的 XML 值。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.Configuration.SocketConnectionPoolSettingsElement" />，其中包含应用当前实例的绑定元素使用的连接池设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定配置元素的内容复制到此配置元素。</summary>
      <param name="from">要复制的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.IsDynamic">
      <summary>获取或设置中继绑定是否为动态绑定。</summary>
      <returns>如果中继绑定是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.ListenBacklog">
      <summary>获取或设置一个 XML 值，其中包含可以挂起的最大排队连接请求数。</summary>
      <returns>返回可以挂起的最大排队连接请求数。默认值为 10。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportElement.RelayClientAuthenticationType">
      <summary>获取或设置包含中继客户端认证类型的 XML 值。</summary>
      <returns>返回一个包含中继认证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。默认值为 RelayClientAuthenticationType.RelayAccessToken。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement">
      <summary>表示通过 Windows Azure Service Bus 中继配置 TCP 服务的安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TcpRelayTransportSecurityElement.ProtectionLevel">
      <summary>获取或设置包含传输安全级 TCP 中继的 XML 值。</summary>
      <returns>返回一个包含传输安全级的 <see cref="T:System.Net.Security.ProtectionLevel" />。默认值为 EncryptAndSign。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElement">
      <summary>表示指定服务总线令牌提供程序的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定配置元素的内容复制到此配置元素。</summary>
      <param name="from">要从中复制内容的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Name">
      <summary>获取指定<see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" />对象的名称。</summary>
      <returns>指定的<see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElement" />对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.Properties">
      <summary>获取配置元素中包含的属性集。</summary>
      <returns>配置元素中包含的属性集。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedAccessSignature">
      <summary>获取共享访问签名元素。</summary>
      <returns>共享访问签名元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.SharedSecret">
      <summary>获取令牌提供程序元素中包含的共享密钥元素。</summary>
      <returns>令牌提供程序元素中包含的共享密钥元素。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElement.WindowsAuthentication">
      <summary>获取此元素的 Windows 认证设置。</summary>
      <returns>此元素的 Windows 认证设置。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection">
      <summary>表示令牌提供程序的元素集。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TokenProviderElementCollection.Item(System.String)">
      <summary>获取集合中的项。</summary>
      <returns>集合中的项。</returns>
      <param name="name">项的名称。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement">
      <summary>一个配置元素，它指定 Windows Azure Service Bus 中继上传输的服务或客户端端点的操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.BehaviorType">
      <summary>获取或设置传输客户端端点的操作类型。</summary>
      <returns>传输客户端端点的操作类型。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定配置元素的内容复制到此配置元素。</summary>
      <param name="from">要从中复制内容的配置元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.CreateBehavior">
      <summary>返回一个新的具有与此配置元素相同设置的<see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" />对象。</summary>
      <returns>一个新的具有与此配置元素相同设置的<see cref="T:Microsoft.ServiceBus.TransportClientEndpointBehavior" />对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.Properties">
      <summary>获取此配置元素中包含的属性集。</summary>
      <returns>此配置元素中包含的属性集。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.TransportClientEndpointBehaviorElement.TokenProvider">
      <summary>获取或设置用作绑定参数的标记提供程序。</summary>
      <returns>用作绑定参数的令牌提供程序。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement">
      <summary>表示包含指定使用<see cref="T:Microsoft.ServiceBus.WebHttpRelayBinding" />绑定设置的设置的子元素的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingCollectionElement.GetDefault">
      <summary>获取使用的默认绑定。</summary>
      <returns>返回一个表示默认绑定的<see cref="T:System.ServiceModel.Channels.Binding" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement">
      <summary>用于为 Windows Azure Service Bus 中继服务配置端点的绑定元素，该中继服务响应 HTTP 请求而不是 SOAP 消息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement" /> 实例。</summary>
      <param name="name">新绑定元素的名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.AllowCookies">
      <summary>获取或设置一个值，该值指示客户端是否接受 cookies 并在后续请求中传播 cookies。</summary>
      <returns>如果允许 cookies，则为 true；否则为 false。默认为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.BindingElementType">
      <summary>获取此配置元素表示的绑定类型。</summary>
      <returns>返回一个包含绑定类型的 <see cref="T:System.Type" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>从指定绑定的属性值初始化此绑定配置元素的内容。</summary>
      <param name="binding">用于更新此配置元素的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.IsDynamic">
      <summary>获取或设置绑定元素是否为动态。</summary>
      <returns>如果绑定元素是动态的，则为 true;否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferPoolSize">
      <summary>获取或设置为管理使用此绑定的端点所需的缓冲区的缓冲区管理器分配的最大内存量。</summary>
      <returns>返回由此绑定配置的端点使用的缓冲池的最大容量（以字节为单位）。默认值为 65,536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxBufferSize">
      <summary>获取或设置分配给由通道接收消息的消息缓冲区管理器使用的最大内存量。</summary>
      <returns>返回消息缓冲区管理器可用的最大内存量（以字节为单位）。默认值为 524,288（0x80000）字节。</returns>
      <exception cref="ArgumentOutOfRangeException">值集小于或等于零。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.MaxReceivedMessageSize">
      <summary>获取或设置绑定可以处理的消息的最大大小。</summary>
      <returns>返回绑定处理的消息的最大大小（以字节为单位）。默认值为 65,536 字节。</returns>
      <exception cref="ArgumentOutOfRangeException">该值小于零。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Properties">
      <summary>获取对象的集合，这些对象可以是此配置元素的属性或配置元素对象。</summary>
      <returns>返回一个包含 ConfigurationProperty 对象集的<see cref="T:System.Configuration.ConfigurationPropertyCollection" />，该集合可以是此配置元素上的属性或 ConfigurationElement 对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ProxyAddress">
      <summary>获取或设置 HTTP 代理的 URI 地址。</summary>
      <returns>返回一个用作 HTTP 代理地址的<see cref="T:System.Uri" />。默认值为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.ReaderQuotas">
      <summary>获取或设置一个 XML 配置元素，该元素包含可由使用此绑定配置的端点处理的 SOAP 消息复杂性的约束。</summary>
      <returns>返回一个包含复杂性约束的<see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />。</returns>
      <exception cref="ArgumentNullException">valueset 为 空。</exception>
      <exception cref="ArgumentOutOfRangeException">XmlDictionaryReaderQuotas 的配额值是只读的。</exception>
      <exception cref="ArgumentException">配额必须是正数。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.Security">
      <summary>获取包含此绑定使用的安全设置的配置元素。</summary>
      <returns>返回一个包含此绑定的安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" />。默认值为 none。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.TransferMode">
      <summary>获取或设置一个值，该值指示使用关联绑定配置的服务是使用流式传输还是缓冲（或两种）消息传输模式。</summary>
      <returns>返回一个 <see cref="T:System.ServiceModel.TransferMode" />，其中包含指示使用绑定配置的服务是使用流式传输还是缓冲（或两种）消息传输模式。默认值为 Buffered。</returns>
      <exception cref="InvalidEnumArgumentException">值集不是有效的 TransferMode 值。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示系统自动配置的 HTTP 代理是否应与关联的绑定一起使用（如果可用）。</summary>
      <returns>如果应该使用系统自动配置的 HTTP 代理（如果可用），则为 true；否则为 false。默认值为 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelayBindingElement.WriteEncoding">
      <summary>获取或设置用于关联绑定中的消息文本的字符编码。</summary>
      <returns>返回一个指示所用字符编码的<see cref="T:System.Text.Encoding" />。默认值为 UTF8Encoding。</returns>
      <exception cref="ArgumentNullException">值集为空。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement">
      <summary>表示通过 Windows Azure Service Bus 中继配置 Web HTTP 服务的安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Mode">
      <summary>获取或设置绑定使用的安全模式。</summary>
      <returns>返回一个 <see cref="T:Microsoft.ServiceBus.EndToEndWebHttpSecurityMode" />，其中包含服务端点使用的端到端 HTTP 安全模式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>获取或设置服务客户端使用的中继客户端认证类型。</summary>
      <returns>返回一个包含身份验证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WebHttpRelaySecurityElement.Transport">
      <summary>获取一个配置元素，该元素指示配置为接收 HTTP 请求的服务端点的传输级安全设置。</summary>
      <returns>返回一个包含安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.HttpRelayTransportSecurityElement" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WindowsElement">
      <summary>表示服务总线配置的 windows 元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WindowsElement.CopyFrom(Microsoft.ServiceBus.Configuration.WindowsElement)">
      <summary>将指定的 windows 元素复制到当前实例。</summary>
      <param name="source">要复制的 windows 元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Domain">
      <summary>获取或设置域。</summary>
      <returns>域。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Password">
      <summary>获取或设置密码。</summary>
      <returns>密码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.Properties">
      <summary>获取或设置配置属性的集合。</summary>
      <returns>配置属性的集合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.StsUris">
      <summary>获取或设置安全令牌服务 (STS) URI 的集合。</summary>
      <returns>安全令牌服务 (STS) URI 的集合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UseDefaultCredentials">
      <summary>获取或设置一个值，该值指示是否使用默认凭证。</summary>
      <returns>如果要使用默认凭证，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WindowsElement.UserName">
      <summary>获取或设置用户名。</summary>
      <returns>用户名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement">
      <summary>表示包含<see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" />实例集的配置部分。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement">
      <summary>表示包含绑定设置的配置元素，该绑定提供对 Security、ReliableSession 和 TransactionFlow 绑定元素的更新版本的支持。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement" />实例。</summary>
      <param name="name">绑定的名称。该值应该是唯一的，因为它用作绑定的标识。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WS2007HttpRelayBindingElement.BindingElementType">
      <summary>获取当前实例的绑定元素的类型。</summary>
      <returns>返回一个包含绑定元素类型的<see cref="T:System.Type" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement">
      <summary>为<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement" /> 配置元素提供基类，该配置元素指定支持分布式事务和安全可靠会话的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement" /> 类的新实例，其具有指定名称。</summary>
      <param name="name">唯一标识此配置元素的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>使用指定绑定的内容初始化此绑定配置元素。</summary>
      <param name="binding">绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.IsDynamic">
      <summary>获取或设置绑定基本元素是否为动态。</summary>
      <returns>如果绑定基本元素是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxBufferPoolSize">
      <summary>获取或设置存储由<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定处理的消息的缓冲池的最大容量。</summary>
      <returns>存储由<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定处理的消息的缓冲池的最大容量。默认值为 524288 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MaxReceivedMessageSize">
      <summary>获取或设置在使用<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定配置的通道上接收的消息的最大大小。</summary>
      <returns>使用<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定配置的通道上接收的消息的最大大小。默认值为 65536 字节。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.MessageEncoding">
      <summary>获取或设置是否使用 MTOM 或 Text / XML 对 SOAP 消息进行编码。</summary>
      <returns>指示是使用 MTOM 还是 Text / XML 来编码 SOAP 消息。默认值为 Text/XML。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.Properties">
      <summary>获取此绑定配置元素的属性集。</summary>
      <returns>此绑定配置元素的属性集。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ProxyAddress">
      <summary>获取或设置 HTTP 代理的 URI 地址。</summary>
      <returns>HTTP 代理的 URI 地址。默认为 null。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReaderQuotas">
      <summary>获取可由使用<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定配置的端点处理的 SOAP 消息的复杂性的约束。</summary>
      <returns>可由使用<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定配置的端点处理的 SOAP 消息的复杂性的约束。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.ReliableSession">
      <summary>获取一个<see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> 配置元素，它表示在<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定中定义的 WS-Reliable 消息传递的可选配置设置。</summary>
      <returns>一个<see cref="T:System.ServiceModel.Configuration.StandardBindingOptionalReliableSessionElement" /> 配置元素，它表示在<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定中定义的 WS-Reliable 消息传递的可选配置设置。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.TextEncoding">
      <summary>获取或设置消息文本所用的字符编码。</summary>
      <returns>消息文本的字符编码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingBaseElement.UseDefaultWebProxy">
      <summary>获取或设置一个值，该值指示是否应使用系统自动配置的 HTTP 代理（如果可用）。</summary>
      <returns>如果应该使用系统自动配置的 HTTP 代理（如果可用），则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement">
      <summary>一个配置元素，它表示支持分布式事务和安全可靠会话的可互操作绑定。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.AllowCookies">
      <summary>获取或设置一个值，该值指示服务或客户端是否接受 cookies 在后续请求中传播 cookie。</summary>
      <returns>如果服务或客户端接受 cookie 并在后续请求中传播它们，则为 true；否则为 false。默认为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.BindingElementType">
      <summary>获取<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定的类型。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定的类型。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)">
      <summary>使用指定绑定的内容初始化此绑定配置元素。</summary>
      <param name="binding">用于初始化配置元素的绑定。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)">
      <summary>将此配置元素的设置应用于指定的绑定。</summary>
      <param name="binding">用于更新设置的绑定。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Properties">
      <summary>获取此绑定配置元素的属性集。</summary>
      <returns>此绑定配置元素的属性集。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayBindingElement.Security">
      <summary>获取包含<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定的安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" />配置元素。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />绑定的安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" />配置元素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement">
      <summary>表示通过 Windows Azure Service Bus 中继配置 WS-HTTP 服务的安全性的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Message">
      <summary>获取消息的安全设置。</summary>
      <returns>返回一个指定消息安全设置的 <see cref="T:Microsoft.ServiceBus.Configuration.NonDualMessageSecurityOverRelayHttpElement" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Mode">
      <summary>获取或设置配置用于接收 HTTP 请求的端点的安全模式。</summary>
      <returns>返回一个指定应用安全性类型的<see cref="T:Microsoft.ServiceBus.EndToEndSecurityMode" />。默认值为 Message。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.RelayClientAuthenticationType">
      <summary>获取或设置服务客户端使用的中继客户端认证类型。</summary>
      <returns>返回一个包含身份验证类型的 <see cref="T:Microsoft.ServiceBus.RelayClientAuthenticationType" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelaySecurityElement.Transport">
      <summary>获取传输的安全设置。</summary>
      <returns>返回一个指定传输安全设置的<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" />。使用此属性返回的<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" />对象设置<see cref="T:Microsoft.ServiceBus.WSHttpRelayBinding" />的传输安全性参数。如果<see cref="M:Microsoft.ServiceBus.WSHttpRelayBinding.#ctor(Microsoft.ServiceBus.EndToEndSecurityMode,Microsoft.ServiceBus.RelayClientAuthenticationType,System.Boolean)" />指定了 TransportCredentialOnly 值，那么 Transport 属性提供的设置对服务端点生效。此属性的值只能在构造函数中设置为显式参数，并且在创建绑定实例后不能再次设置。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement">
      <summary>一个配置元素，用于描述通过 Windows Azure Service Bus 中继的 HTTP 传输的安全性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.WSHttpRelayTransportSecurityElement.ProxyCredentialType">
      <summary>获取或设置服务或客户端端点用于对代理进行认证的凭证类型。</summary>
      <returns>服务或客户端端点用于对代理进行认证的凭证类型。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement">
      <summary>一个配置元素，用于定义可由配置绑定的端点处理的 SOAP 消息复杂性的约束。这个类无法被继承。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxArrayLength">
      <summary>获取或设置允许的最大数组长度。</summary>
      <returns>允许的最大数组长度。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxBytesPerRead">
      <summary>获取或设置每次读取返回的最大允许字节数。</summary>
      <returns>每次读取返回的最大允许字节数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxDepth">
      <summary>获取或设置每次读取的最大嵌套节点深度。</summary>
      <returns>每次读取的最大嵌套节点深度。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxNameTableCharCount">
      <summary>获取或设置表名中允许的最大字符数。</summary>
      <returns>表名中允许的最大字符数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Configuration.XmlDictionaryReaderQuotasElement.MaxStringContentLength">
      <summary>获取或设置 XML 元素内容中允许的最大字符数。</summary>
      <returns>XML 元素内容中允许的最大字符数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter">
      <summary>将 WSDL 合同和策略断言映射到 Windows Azure Service Bus HttpRelayTransport 绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导入有关绑定的自定义策略断言。</summary>
      <param name="importer">可用于修改导入过程的元数据导入程序。</param>
      <param name="context">用于插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>在导入与 HttpRelayTransport 绑定关联的元数据文档之前调用。</summary>
      <param name="wsdlDocuments">描述该服务</param>
      <param name="xmlSchemas">描述 <paramref name="wsdlDocuments" />。</param>
      <param name="policy">包含策略元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>导入 Windows Azure Service Bus HttpRelayTransport 绑定的 WSDL 合同信息。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">将 WSDL 转换为服务描述的上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.HttpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将 WSDL 中定义的端点映射到服务描述中。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter">
      <summary>将 WSDL 合同和策略断言映射到 Windows Azure Service Bus OnewayRelayTransport 绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导入有关绑定的自定义策略断言。</summary>
      <param name="importer">可用于修改导入过程的元数据导入程序。</param>
      <param name="context">用于插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>在导入与 OnewayRelayTransport 绑定关联的元数据文档之前调用。</summary>
      <param name="wsdlDocuments">描述该服务</param>
      <param name="xmlSchemas">描述 <paramref name="wsdlDocuments" />。</param>
      <param name="policy">包含策略元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>导入 Windows Azure Service Bus OnewayRelayTransport 绑定的 WSDL 合同信息。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">将 WSDL 转换为服务描述的上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.OnewayRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将 WSDL 中定义的端点映射到服务描述中。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter">
      <summary>将 WSDL 合同和策略断言映射到 Windows Azure Service Bus 标准绑定中。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Description.StandardRelayBindingImporter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>在导入与标准绑定关联的元数据文档之前调用。</summary>
      <param name="wsdlDocuments">描述该服务。</param>
      <param name="xmlSchemas">描述 <paramref name="wsdlDocuments" />。</param>
      <param name="policy">包含策略元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>导入标准绑定的 WSDL 合同信息。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">提供将 WSDL 转换为服务描述的上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.StandardRelayBindingImporter.ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将 WSDL 中定义的端点映射到服务描述中。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="endpointContext">转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter">
      <summary>将 WSDL 合同和策略断言映射到 Windows Azure Service Bus TcpRelayTransport 绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IPolicyImportExtension#ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导入有关绑定的自定义策略断言。</summary>
      <param name="importer">可用于修改导入过程的元数据导入程序。</param>
      <param name="context">用于插入自定义策略断言的策略转换上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#BeforeImport(System.Web.Services.Description.ServiceDescriptionCollection,System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlElement})">
      <summary>在导入与 TcpRelayTransport 绑定关联的元数据文档之前调用。</summary>
      <param name="wsdlDocuments">描述该服务。</param>
      <param name="xmlSchemas">描述 <paramref name="wsdlDocuments" />。</param>
      <param name="policy">包含策略元素。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportContract(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>导入 Windows Azure Service Bus TcpRelayTransport 绑定的 WSDL 合同信息。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">将 WSDL 转换为服务描述的上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Description.TcpRelayTransportBindingElementImporter.System#ServiceModel#Description#IWsdlImportExtension#ImportEndpoint(System.ServiceModel.Description.WsdlImporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将 WSDL 中定义的端点映射到服务描述中。</summary>
      <param name="importer">用于导入和解析 WSDL 元数据的 WSDL 导入程序。</param>
      <param name="context">转换上下文。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.CertificateType">
      <summary>指定用于 Windows Server 服务器场的服务总线管理中使用的证书类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.CustomFarmCertificate">
      <summary>指定自定义证书。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedCertificateRevocationList">
      <summary>指定生成的证书吊销列表。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmCertificate">
      <summary>指定生成的服务器场证书。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.CertificateType.GeneratedFarmRootCertificate">
      <summary>指定生成的场根证书。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.ConnectionDetail">
      <summary>表示与服务总线连接关联的详细信息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.ConnectionDetail.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.ConnectionDetail" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.AuthorizationType">
      <summary>获取或设置连接的授权类型。</summary>
      <returns>连接的授权类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.ConnectionString">
      <summary>获取或设置与连接关联的连接字符串。</summary>
      <returns>与连接关联的连接字符串。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.KeyName">
      <summary>获取或设置与连接关联的密钥名称。</summary>
      <returns>与连接关联的密钥名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.Rights">
      <summary>获取或设置与连接关联的访问权限。</summary>
      <returns>与连接关联的访问权限。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.ConnectionDetail.SecondaryConnectionString">
      <summary>获取或设置与连接关联的辅助连接字符串。</summary>
      <returns>与连接关联的辅助连接字符串。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.FarmCertificateInfo">
      <summary>表示与服务总线场关联的证书的详细信息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.FarmCertificateInfo.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.FarmCertificateInfo" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateKeyName">
      <summary>获取或设置与证书关联的密钥名。</summary>
      <returns>与证书关联的密钥名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateName">
      <summary>获取或设置证书的名称。</summary>
      <returns>证书的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.CertificateType">
      <summary>获取或设置证书的类型。</summary>
      <returns>证书的类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Downloadable">
      <summary>获取或设置证书是否可下载。</summary>
      <returns>如果证书可下载，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.ExpirationDate">
      <summary>获取或设置证书的到期日期。</summary>
      <returns>证书的到期日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.IsAutoGenerated">
      <summary>获取或设置是否自动生成证书。</summary>
      <returns>如果证书是自动生成的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.FarmCertificateInfo.Thumbprint">
      <summary>获取或设置与证书关联的指纹。</summary>
      <returns>与证书关联的指纹。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Metric">
      <summary>表示用于监视服务总线状态的度量标准。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Metric.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.Metric" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.DisplayName">
      <summary>获取或设置度量标准的显示名称。</summary>
      <returns>度量标准的显示名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Name">
      <summary>获取或设置度量标准的名称。</summary>
      <returns>指标的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.PrimaryAggregation">
      <summary>获取或设置此度量标准的主要聚合。</summary>
      <returns>此度量标准的主要聚合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Rollups">
      <summary>获取或设置度量标准汇总的集合。</summary>
      <returns>度量标准汇总的集合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Metric.Unit">
      <summary>获取或设置度量单位。</summary>
      <returns>公制单位。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricRollup">
      <summary>表示服务总线度量标准的汇总数据。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricRollup.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.MetricRollup" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Retention">
      <summary>获取或设置与汇总关联的保留时间。</summary>
      <returns>与汇总关联的保留时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.TimeGrain">
      <summary>获取或设置与汇总关联的时间粒度。</summary>
      <returns>与汇总相关的时间粒度。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricRollup.Values">
      <summary>获取或设置度量标准值的集合。</summary>
      <returns>度量值的集合。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.MetricValue">
      <summary>表示与服务总线关联的度量标准的值。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.MetricValue.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.MetricValue" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Average">
      <summary>获取或设置度量标准的平均值。</summary>
      <returns>指标的平均值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Max">
      <summary>获取或设置度量标准的最大值。</summary>
      <returns>度量标准的最大值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Min">
      <summary>获取或设置度量标准的最小值。</summary>
      <returns>指标的最小值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Timestamp">
      <summary>获取或设置与度量标准值关联的时间戳。</summary>
      <returns>与度量标准值关联的时间戳。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.MetricValue.Total">
      <summary>获取或设置总指标值。</summary>
      <returns>总指标值。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceAvailability">
      <summary>表示给定服务命名空间的可用性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceAvailability.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.NamespaceAvailability" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Available">
      <summary>获取或设置命名空间是否可用。</summary>
      <returns>如果命名空间可用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ExtensionData">
      <summary>获取或设置与命名空间关联的扩展数据对象。</summary>
      <returns>与命名空间关联的扩展数据对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.Reason">
      <summary>获取或设置命名空间不可用的原因。</summary>
      <returns>命名空间不可用的原因。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceAvailability.ReasonDetail">
      <summary>获取或设置与命名空间关联的原因的详细信息。</summary>
      <returns>有关命名空间的原因的详细信息。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceAvailability.Serializer">
      <summary>数据合同序列化器。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceDescription">
      <summary>定义服务命名空间的所需语义。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceDescription.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.NamespaceDescription" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.AcsManagementEndpoint">
      <summary>获取或设置访问控制服务的管理端点。</summary>
      <returns>访问控制服务的管理端点。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ConnectionString">
      <summary>获取或设置客户端用于连接到服务器的连接字符串。</summary>
      <returns>客户端用于连接到服务器的连接字符串。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.CreatedAt">
      <summary>获取或设置创建命名空间的日期。</summary>
      <returns>创建命名空间的日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Critical">
      <summary>获取或设置描述是否为可为空的关键描述。</summary>
      <returns>如果描述是可空的关键描述，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.DefaultKey">
      <summary>获取或设置命名空间的默认密钥。</summary>
      <returns>命名空间的默认密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Enabled">
      <summary>指定是否启用此实例。</summary>
      <returns>如果启用此实例，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Name">
      <summary>获取或设置命名空间的名称。</summary>
      <returns>命名空间的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Region">
      <summary>获取或设置将存储客户数据的 Microsoft 数据中心的地理区域。</summary>
      <returns>将存储客户数据的Microsoft数据中心的地理区域。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceDescription.Serializer">
      <summary>与命名空间关联的数据协定序列化程序。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.ServiceBusEndpoint">
      <summary>获取或设置服务总线终点值。</summary>
      <returns>服务总线终点值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.Status">
      <summary>获取或设置命名空间的状态。</summary>
      <returns>命名空间的状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceDescription.SubscriptionId">
      <summary>获取或设置命名空间订阅标识符。</summary>
      <returns>命名空间订阅标识符。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceEntityStats">
      <summary>表示命名空间实体的属性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NamespaceEntityStats.#ctor">
      <summary>初始化 the4  <see cref="T:Microsoft.ServiceBus.Management.NamespaceEntityStats" /> 类新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.NotificationHubCount">
      <summary>获取或设置通知中心的数量。</summary>
      <returns>通知中心的数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.QueueCount">
      <summary>获取或设置与状态关联的队列数。</summary>
      <returns>与状态关联的队列数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.RelayCount">
      <summary>获取或设置与状态关联的中继数。</summary>
      <returns>与状态关联的继电器数量。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceEntityStats.Serializer">
      <summary>指定状态序列化程序。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NamespaceEntityStats.TopicCount">
      <summary>获取或设置与状态关联的主题数。</summary>
      <returns>与状态关联的主题数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NamespaceState">
      <summary>枚举不同的命名空间状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Activating">
      <summary>命名空间正在激活。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Active">
      <summary>命名空间已激活。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Created">
      <summary>命名空间已创建。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Creating">
      <summary>命名空间正在创建。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabled">
      <summary>命名空间已禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Disabling">
      <summary>命名空间正在被禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Enabling">
      <summary>正在启用命名空间。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removed">
      <summary>命名空间已删除。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Removing">
      <summary>正在删除命名空间。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleted">
      <summary>命名空间已删除。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.SoftDeleting">
      <summary>命名空间标记为删除。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NamespaceState.Unknown">
      <summary>命名空间未知。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPlan">
      <summary>表示通知中心计划。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPlan.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.NotificationHubPlan" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.Revision">
      <summary>获取或设置版本。</summary>
      <returns>版本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMaxUnits">
      <summary>获取或设置所选 SKU 的最大单位。</summary>
      <returns>所选 SKU 的最大单位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.SelectedSKUMinUnits">
      <summary>获取或设置所选 SKU 的最小单位。</summary>
      <returns>所选 SKU 的最小单位。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubPlan.SKU">
      <summary>指定库存量单位。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPlan.UpdatedAt">
      <summary>获取或设置计划更新的确切时间。</summary>
      <returns>计划更新的确切时间。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials">
      <summary>表示与通知中心关联的 PNS 凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.AdmCredential">
      <summary>获取或设置管理凭证。</summary>
      <returns>管理凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.ApnsCredential">
      <summary>获取或设置 APNS 凭证。</summary>
      <returns>APNS 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.GcmCredential">
      <summary>获取或设置 GCM 凭证。</summary>
      <returns>GCM 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.MpnsCredential">
      <summary>获取或设置 MPNS 凭证。</summary>
      <returns>MPNS 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.Revision">
      <summary>获取或设置凭证版本。</summary>
      <returns>凭证版本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.UpdatedAt">
      <summary>获取或设置上次更新凭证的日期。</summary>
      <returns>上次更新凭证的日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubPnsCredentials.WnsCredential">
      <summary>获取或设置 WNS 凭证。</summary>
      <returns>WNS 凭证。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKU">
      <summary>提供通知中心 SKU。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.NotificationHubSKU.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.NotificationHubSKU" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedApiCallsPerDayPerUnit">
      <summary>获取或设置每单位每天允许的最大 API 调用次数。</summary>
      <returns>每单位每天允许的最大 API 调用次数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedDevicesPerUnit">
      <summary>获取或设置每个单元允许的最大设备数。</summary>
      <returns>每个单元允许的最大设备数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedOperationsPerDayPerUnit">
      <summary>获取或设置每单位每天允许的最大操作数。</summary>
      <returns>每单位每天允许的最大操作数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedPushesPerDayPerUnit">
      <summary>获取或设置每单位每天允许的最大推送量。</summary>
      <returns>每单位每天允许的最大推送量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedRegistrationsPerUnit">
      <summary>获取或设置每个单元允许的最大注册量。</summary>
      <returns>每个单元允许的最大注册量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MaxAllowedUnits">
      <summary>获取或设置允许的最大单位。</summary>
      <returns>允许的最大单位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.NotificationHubSKU.MinAllowedUnits">
      <summary>获取或设置允许的最小单位。</summary>
      <returns>允许的最小单位。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKU.SKU">
      <summary>指定通知中心的库存量单位。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.NotificationHubSKUType">
      <summary>指定通知中心 SKU 的枚举类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Basic">
      <summary>表示通知中心基本层类型。参阅通知中心定价详细信息。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Free">
      <summary>表示通知中心免费层类型。参阅通知中心定价详细信息。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.NotificationHubSKUType.Standard">
      <summary>表示通知中心标准层类型。参阅通知中心定价详细信息。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.Property">
      <summary>表示服务总线属性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.Property" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.Property.Clone">
      <summary>创建该实例的副本。</summary>
      <returns>此实例的已创建副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Created">
      <summary>获取或设置创建属性的时间。</summary>
      <returns>创建属性的日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Modified">
      <summary>获取或设置修改属性的时间。</summary>
      <returns>修改属性的日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Name">
      <summary>获取或设置属性的名称。</summary>
      <returns>属性的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Revision">
      <summary>获取或设置属性的版本。</summary>
      <returns>该属性的版本。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.Property.Serializer">
      <summary>与属性关联的序列化程序。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.Property.Value">
      <summary>获取或设置属性值。</summary>
      <returns>属性值。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.RegionCodeDescription">
      <summary>表示与服务总线的区域代码关联的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.RegionCodeDescription.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.RegionCodeDescription" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.Code">
      <summary>获取或设置与此实例关联的代码。</summary>
      <returns>与此实例关联的代码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.RegionCodeDescription.FullName">
      <summary>获取或设置此实例的全名。</summary>
      <returns>此实例的全名。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.RegionCodeDescription.Serializer">
      <summary>与描述相关的序列化。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UnavailableReason">
      <summary>指定服务不可用的原因。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.InvalidName">
      <summary>服务名称无效。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInLockdown">
      <summary>该服务的名称处于锁定状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.NameInUse">
      <summary>该服务的名称正在使用中。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.None">
      <summary>未定义原因。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.SubscriptionIsDisabled">
      <summary>服务订阅已禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UnavailableReason.TooManyNamespaceInCurrentSubscription">
      <summary>当前订阅中的命名空间太多。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UsageCredit">
      <summary>表示使用信用管理。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.Equals(Microsoft.ServiceBus.Management.UsageCredit)">
      <summary>指定此实例是否与另一个使用信用相等。</summary>
      <returns>如果此实例与另一个使用信用相等，则为 true；否则为 false。</returns>
      <param name="other">要比较的其他使用信用。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.ExtensionData">
      <summary>获取或设置存储数据的对象</summary>
      <returns>存储数据的对象</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Identifier">
      <summary>获取或设置信用标识符。</summary>
      <returns>信用标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.KeyName">
      <summary>获取或设置与信用关联的密钥名称。</summary>
      <returns>与信用相关联的密钥名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHBasicUnit">
      <summary>获取或设置通知中心的基本单位。</summary>
      <returns>通知中心的基本单元。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.NHStandardUnit">
      <summary>获取或设置通知中心的标准单位。</summary>
      <returns>通知中心的标准单位。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.RequestorService">
      <summary>获取或设置请求程序服务。</summary>
      <returns>请求程序服务。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.Revision">
      <summary>获取或设置信用版本。</summary>
      <returns>信用版本。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Management.UsageCredit.Serializer">
      <summary>指定使用信用序列化程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UsageCredit.ToString">
      <summary>返回<see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />字符串表示形式。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Management.UsageCredit" />字符串表示形式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UsageCredit.UpdatedAt">
      <summary>获取或设置更新信用详细信息的最后日期。</summary>
      <returns>信用详细信息更新的最后日期。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Management.UserValidationResult">
      <summary>表示与用户验证关联的结果。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Management.UserValidationResult.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Management.UserValidationResult" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Reason">
      <summary>获取或设置用户验证的原因。</summary>
      <returns>用户验证的原因。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Management.UserValidationResult.Result">
      <summary>获取或设置验证的结果。</summary>
      <returns>验证的结果。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AccessRights">
      <summary>指定用户的可能访问权限。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Listen">
      <summary>访问权限是 Listen。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Manage">
      <summary>访问权限是“Manage”。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AccessRights.Send">
      <summary>访问权限是“Send”。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRule">
      <summary>表示允许的规则。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,Microsoft.ServiceBus.Messaging.AllowRuleClaimType,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>初始化一个新的具有指定参数的<see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" />实例。</summary>
      <param name="issuerName">声明颁发者的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" />名称。</param>
      <param name="claimType">该声明的 <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" />类型。</param>
      <param name="claimValue">该声明的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" />值。</param>
      <param name="rights">可能的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AllowRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>初始化一个新的实例 <see cref="T:Microsoft.ServiceBus.Messaging.AllowRule" /> 类。</summary>
      <param name="issuerName">声明颁发者的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName" />名称。</param>
      <param name="claimType">该声明的 <see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType" />类型。</param>
      <param name="claimValue">该声明的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue" />值。</param>
      <param name="rights">可能的<see cref="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights" />列表。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AllowRule.KeyName">
      <summary>获取或设置允许规则密钥名称。</summary>
      <returns>允许规则密钥名称。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AllowRuleClaimType">
      <summary>指定 AllowRuleClaim 类型的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Role">
      <summary>类型是 Role。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AllowRuleClaimType.Upn">
      <summary>类型是 Upn。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRule">
      <summary>定义 Azure Service Bus 授权规则，该规则用于确定是否允许操作。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimType">
      <summary>获取或设置声明类型。</summary>
      <returns>声明类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ClaimValue">
      <summary>获取或设置声明值，即“Send”、“Listen”或“Manage”。</summary>
      <returns>声明值可以是“Send”、“Listen”或“Manage”。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Clone">
      <summary>创建<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />的副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.CreatedTime">
      <summary>获取或设置创建授权规则的日期和时间。</summary>
      <returns>创建授权规则的日期和时间。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前对象。</summary>
      <returns>如果指定的对象等于当前对象，则为 true；否则为 false。</returns>
      <param name="obj">要与当前对象进行比较的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.GetHashCode">
      <summary>返回此实例的散列码。</summary>
      <returns>此实例的散列码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.IssuerName">
      <summary>获取或设置颁发者的名称标识符。</summary>
      <returns>颁发者的名称标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.KeyName">
      <summary>获取或设置授权规则密钥名称。</summary>
      <returns>授权规则密钥名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.ModifiedTime">
      <summary>获取或设置修改授权规则的日期和时间。</summary>
      <returns>修改授权规则的日期和时间。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.NameIdentifierClaimType">
      <summary>名称标识符声明规则。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.OnValidate">
      <summary>在验证授权规则时，允许派生类提供自定义处理。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Revision">
      <summary>获取或设置修订版本号。</summary>
      <returns>修订版本号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRule.Rights">
      <summary>获取或设置权限列表。</summary>
      <returns>权限列表。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleClaimType">
      <summary>角色声明规则。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.RoleRoleClaimType">
      <summary>角色声明规则。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.SharedAccessKeyClaimType">
      <summary>共享访问密钥声明规则。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortNameIdentifierClaimType">
      <summary>短名称标识符声明规则。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.ShortUpnClaimType">
      <summary>简短 UPN 声明规则。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRule.UpnClaimType">
      <summary>UPN 声明规则。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>检查指定访问权限的有效性。</summary>
      <param name="value">要检查的访问权限。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.AuthorizationRules">
      <summary>代表<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />的集合。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.#ctor(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary>初始化一个新的包含<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />列表的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />实例。</summary>
      <param name="enumerable"><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Add(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>添加指定的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />至集合。</summary>
      <param name="item">待添加的 <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Clear">
      <summary>清除集合中的所有元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Contains(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>确定集合中是否存在指定的项目。</summary>
      <returns>如果找到指定的项，则为 true；否则为 false。</returns>
      <param name="item">要在集合中搜索的项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.CopyTo(Microsoft.ServiceBus.Messaging.AuthorizationRule[],System.Int32)">
      <summary>将元素复制到从指定数组索引开始的数组中。</summary>
      <param name="array">用于保存复制元素的数组。</param>
      <param name="arrayIndex">复制开始的从零开始的索引。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.Count">
      <summary>获取或设置集合中包含的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />数量。</summary>
      <returns>集合中包含的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />数量。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetEnumerator">
      <summary>获取通过集合迭代的枚举器。</summary>
      <returns>可通过集合迭代的枚举器</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.Predicate{Microsoft.ServiceBus.Messaging.AuthorizationRule})">
      <summary>获取<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />的集合。</summary>
      <returns>与指定值匹配的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />集合。</returns>
      <param name="match">用于匹配指定值的授权规则。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.GetRules(System.String)">
      <summary>获取与指定值匹配的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />集合。</summary>
      <returns>与指定值匹配的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />集合。</returns>
      <param name="claimValue">要搜索的值。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.HasEqualRuntimeBehavior(Microsoft.ServiceBus.Messaging.AuthorizationRules)">
      <summary>确定指定的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />是否具有与此当前对象相同的运行时行操作。</summary>
      <returns>如果运行时行操作相同，则为 true；否则为 false。</returns>
      <param name="comparand">与当前对象进行比较的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</param>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.innerCollection">
      <summary>指定内部集合。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.IsReadOnly">
      <summary>获取或设置<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />是否是只读的。</summary>
      <returns>如果<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />为只读，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.Remove(Microsoft.ServiceBus.Messaging.AuthorizationRule)">
      <summary>删除集合中指定的<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRule" />。</summary>
      <returns>如果操作成功，则为 true；否则为 false。</returns>
      <param name="item">要删除的项目。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.AuthorizationRules.RequiresEncryption">
      <summary>获取一个值，指示<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />是否需要加密。</summary>
      <returns>如果<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />需要加密，则为 true；否则为 false。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.AuthorizationRules.Serializer">
      <summary>指定用于序列化和反序列化对象的序列化程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.System#Collections#IEnumerable#GetEnumerator">
      <summary>获取通过集合迭代的枚举器。</summary>
      <returns>可通过集合迭代的枚举器</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.AuthorizationRules.TryGetSharedAccessAuthorizationRule(System.String,Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule@)">
      <summary>获取与指定密钥关联的规则。</summary>
      <returns>如果<see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />包含具有指定密钥的元素则为 true；否则为 false。</returns>
      <param name="keyName">密钥的名称。</param>
      <param name="rule">与指定密钥关联的规则。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessage">
      <summary>表示 AppFabric ServiceBus 客户端之间的通信单位。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />类的新实例。</summary>
      <param name="messageBodyStream">消息正文流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.IO.Stream,System.Boolean)">
      <summary>初始化一个新的将提供流作为正文的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />实例。</summary>
      <param name="messageBodyStream">消息正文流。</param>
      <param name="ownsStream">true 表示关闭消息时将关闭流；false 表示消息关闭时不会关闭流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object)">
      <summary>初始化一个新的通过使用带有二进制 XmlDictionaryWriter 的 DataContractSerializer 从给定对象中创建的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />实例。</summary>
      <param name="serializableObject">可序列化的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.#ctor(System.Object,System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>初始化一个新的使用提供的 XmlObjectSerializer 从给定对象中创建的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />实例。</summary>
      <param name="serializableObject">可序列化的对象。</param>
      <param name="serializer">序列化程序对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon">
      <summary>放弃 peek-lock 消息的锁定。</summary>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时调用，或者在未在 peek-lock 模式下接收的消息上调用时引发。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时时间通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">与此消息关联的锁定丢失或未找到锁定令牌时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">从会话收到此消息时，与会话关联的锁丢失。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Abandon(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>放弃 peek-lock 消息的锁定。</summary>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync">
      <summary>异步放弃对隐藏锁定消息的锁定。</summary>
      <returns>操作的异步结果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.AbandonAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步放弃对隐藏锁定消息的锁定。</summary>
      <returns>操作的异步结果。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃对隐藏锁定消息的锁定。</summary>
      <returns>引用放弃对隐藏锁定消息的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndAbandon 委托。</param>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收到消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginAbandon(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃对隐藏锁定消息的锁定。</summary>
      <returns>引用放弃对隐藏锁定消息的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndAbandon 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginComplete(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息。</summary>
      <returns>引用完成消息异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndComplete 委托。</param>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收到消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用使消息成为死信的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndDeadLetter 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用使消息成为死信的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndDeadLetter 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDeadLetter(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用使消息成为死信的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的描述信息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndDeadLetter 委托。</param>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以推迟消息。</summary>
      <returns>引用推迟消息异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndDefer（System.IAsyncResult）委托。</param>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginDefer(System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以推迟消息。</summary>
      <returns>引用推迟消息异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndDefer（System.IAsyncResult）委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以更新消息锁定。</summary>
      <returns>引用更新消息锁定异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndRenewLock（System.IAsyncResult）委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Clone">
      <summary>克隆消息，以便可以将消息的克隆作为新消息发送。</summary>
      <returns>包含克隆消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Complete">
      <summary>完成消息的接收操作，并指示消息应标记为已处理和已删除。</summary>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时调用，或者在未在 peek-lock 模式下接收的消息上调用时引发。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时时间通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.CompleteAsync">
      <summary>异步完成消息的接收操作，并指示消息应标记为已处理和已删除。</summary>
      <returns>操作的异步结果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ContentType">
      <summary>获取或设置内容的类型。</summary>
      <returns>消息正文的内容类型。这是发送方和接收方用于特定于应用程序的逻辑的内容类型标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.CorrelationId">
      <summary>获取或设置关联的标识符。</summary>
      <returns>关联的标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter">
      <summary>将消息移动到死信队列。</summary>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时调用，或者在未在 peek-lock 模式下接收的消息上调用时引发。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>将消息移动到死信队列。</summary>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetter(System.String,System.String)">
      <summary>将消息移动到死信队列。</summary>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的描述信息。</param>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时调用，或者在未在 peek-lock 模式下接收的消息上调用时引发。</exception>
      <exception cref="T:System.ServiceModel.CommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />和<see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync">
      <summary>异步将消息移动到死信队列。</summary>
      <returns>操作的异步结果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步将消息移动到死信队列。</summary>
      <returns>操作的异步结果。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeadLetterAsync(System.String,System.String)">
      <summary>异步将消息移动到死信队列。</summary>
      <returns>操作的异步结果。</returns>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的描述信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer">
      <summary>表示接收方想要推迟此消息的处理。</summary>
      <exception cref="T:System.ObjectDisposedException">当消息处于处置状态或者接收到消息的接收器处于处置状态时引发。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时调用，或者在未在 peek-lock 模式下接收的消息上调用时引发。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时时间通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />和<see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Defer(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>表示接收方想要推迟此消息的处理。</summary>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync">
      <summary>异步指示接收方想要推迟此消息的处理。</summary>
      <returns>操作的异步结果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeferAsync(System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步指示接收方想要推迟此消息的处理。</summary>
      <returns>操作的异步结果。</returns>
      <param name="propertiesToModify">要修改的属性的键值对集合。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.DeliveryCount">
      <summary>获取交付数量。</summary>
      <returns>交付数量。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 ServiceBus 尚未传递消息，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.Dispose">
      <summary>执行与正在释放、正在发放或重置非托管资源相关的应用程序定义的任务。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndAbandon(System.IAsyncResult)">
      <summary>结束异步请求以放弃对隐藏锁定消息的锁定。</summary>
      <param name="result">引用异步放弃请求的<see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">如果提供的<paramref name="result" />不正确，则引发。传递给 EndAbandon 的<paramref name="result" />对象必须是从匹配的 BeginAbandon 返回的对象，或传递给提供给 BeginAbandon 的回调。</exception>
      <exception cref="T:System.ArgumentNullException">如果使用空<paramref name="result" />调用，则引发。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时时间通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">与此消息关联的锁定丢失或未找到锁定令牌时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">从会话收到此消息时，与会话关联的锁丢失。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndComplete(System.IAsyncResult)">
      <summary>结束异步操作以完成消息。</summary>
      <param name="result">引用异步完成请求的<see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">如果提供的<paramref name="result" />不正确，则引发。传递给 EndComplete 的<paramref name="result" />对象必须是从匹配的 BeginComplete 返回的对象，或传递给提供给 BeginComplete 的回调。</exception>
      <exception cref="T:System.ArgumentNullException">如果使用空<paramref name="result" />调用，则引发。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时时间通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />和<see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDeadLetter(System.IAsyncResult)">
      <summary>结束异步请求以将消息移动到死信队列。</summary>
      <param name="result">引用使消息成为死信的异步请求的<see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">如果提供的<paramref name="result" />不正确，则引发。传递给 EndDeadLetter 的<paramref name="result" />对象必须是从匹配的 EndDeadLetter 返回的对象，或传递给提供给 EndDeadLetter 的回调。</exception>
      <exception cref="T:System.ArgumentNullException">如果使用空<paramref name="result" />调用，则引发。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />和<see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndDefer(System.IAsyncResult)">
      <summary>结束异步请求以推迟消息。</summary>
      <param name="result">引用异步推迟请求的<see cref="T:System.IAsyncResult" />。</param>
      <exception cref="T:System.ArgumentException">如果提供的<paramref name="result" />不正确，则引发。传递给 EndDefer 的<paramref name="result" />对象必须是从匹配的 EndDefer 返回的对象，或传递给提供给 EndDefer 的回调。</exception>
      <exception cref="T:System.ArgumentNullException">如果使用空<paramref name="result" />调用，则引发。</exception>
      <exception cref="T:System.ServiceModel.MessagingCommunicationException">当消息服务器中不再存在接收消息的队列或订阅时引发此异常。</exception>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果消息上的锁已过期，则引发该异常。LockDuration 是一个实体范围的设置，可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" /> 和 <see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果会话锁定已过期，则引发该异常。会话锁定持续时间与消息 LockDuration 相同，并且是实体范围的设置。它可以通过分别用于队列和订阅的<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />和<see cref="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration" />初始化。</exception>
      <exception cref="T:System.InvalidOperationException">在未从消息服务器接收的消息上调用时引发。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException">当服务总线服务繁忙且无法处理请求时。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">收到消息的消息传递实体已被删除。</exception>
      <exception cref="T:System.UnauthorizedAccessException">当 TokenProvider 提供的安全令牌不包含执行此操作的声明时。</exception>
      <exception cref="T:System.ServiceModel.QuotaExceededException">当与实体的并发连接数超过允许的最大值时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.EndRenewLock(System.IAsyncResult)">
      <summary>结束异步请求以更新消息锁定。</summary>
      <param name="result">引用 RenewLock 方法的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedSequenceNumber">
      <summary>获取或设置消息的排队序列号。</summary>
      <returns>消息的排队序列号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.EnqueuedTimeUtc">
      <summary>获取或设置发送时间的日期和时间（以 UTC 格式）。</summary>
      <returns>UTC 中的入队时间。此值表示将消息排入队列的实际时间。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ExpiresAtUtc">
      <summary>获取将消息设置为过期的 UTC 日期和时间。</summary>
      <returns>消息过期时间 (UTC)。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 ServerBus 尚未传递消息。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ForcePersistence">
      <summary>获取或设置一个值，该值指示消息是立即持久保存到数据库，而不是短时间保留在内存中。如果将消息发送到非快速队列或主题，则忽略此属性。</summary>
      <returns>如果要立即将消息持久保存到数据库，而不是短时间保存在内存中，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1">
      <summary>通过使用二进制 <see cref="T:System.Xml.XmlDictionaryReader" />的<see cref="T:System.Runtime.Serialization.DataContractSerializer" />，将代理消息正文反序列化为指定类型的对象 。</summary>
      <returns>反序列化的对象或图形。</returns>
      <typeparam name="T">消息正文将反序列化的类型。</typeparam>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态或消息正文流已被处置。</exception>
      <exception cref="T:System.InvalidOperationException">如果消息包含的正文流为空，或者正文流不包含数据或消息正文已被消耗。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.GetBody``1(System.Runtime.Serialization.XmlObjectSerializer)">
      <summary>使用提供的<see cref="T:System.Runtime.Serialization.XmlObjectSerializer" />代码将代理消息正文反序列化为指定类型的对象。</summary>
      <returns>反序列化的对象或图形。</returns>
      <param name="serializer">序列化程序对象。</param>
      <typeparam name="T">通过类参数。</typeparam>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态或消息正文已被使用，则引发该异常。</exception>
      <exception cref="T:System.ArgumentNullException">如果使用空<paramref name="serializer" />对象调用，则引发。</exception>
      <exception cref="T:System.InvalidOperationException">如果消息包含的正文流为空，或者正文流不包含数据或消息正文已被消耗，则引发。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.IsBodyConsumed">
      <summary>指定消息是否已被使用。</summary>
      <returns>如果消息已被使用，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Label">
      <summary>获取或设置特定于应用程序的标签。</summary>
      <returns>应用程序特定标签。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockedUntilUtc">
      <summary>获取 UTC 日期和时间，直到消息将在队列/订阅中锁定。</summary>
      <returns>消息将在队列/订阅中锁定的日期和时间。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从 ServiceBus 收到消息，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.LockToken">
      <summary>获取服务总线为此消息分配的锁令牌。</summary>
      <returns>服务总线为此消息分配的锁定令牌。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从 ServiceBus 收到消息，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.MessageId">
      <summary>获取或设置消息的标识符。</summary>
      <returns>消息的标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.ArgumentException">如果消息标识符为空或超过 128 个字符，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.PartitionKey">
      <summary>获取或设置用于将事务性消息发送到不支持会话的队列或主题的分区键。</summary>
      <returns>用于发送事务性消息的分区键。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Properties">
      <summary>获取应用程序特定的消息属性。</summary>
      <returns>应用程序特定的消息属性。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock">
      <summary>更新消息上的锁定。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果 <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> 为 true，您可以立即重试操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">您可以立即重试该操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果您调用<see cref="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLock" /> 太晚，则引发异常。在会话中，永远不会引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果消息来自<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />，引发异常而不是 <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" />。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.RenewLockAsync">
      <summary>异步更新消息上的锁定。</summary>
      <returns>操作的异步结果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyTo">
      <summary>获取或设置要回复的队列的地址。</summary>
      <returns>回复队列地址。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ReplyToSessionId">
      <summary>获取或设置要回复的会话标识符。</summary>
      <returns>要回复的会话标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ScheduledEnqueueTimeUtc">
      <summary>获取或设置消息将入队的 UTC 日期和时间。此属性返回 UTC 时间；设置属性时，提供的 DateTime值 也必须是 UTC 格式。</summary>
      <returns>以 UTC 为单位的计划入队时间。此值用于延迟消息发送。它用于延迟发送到将来特定时间的消息。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果传入的值是 DateTime.MaxValue，则引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SequenceNumber">
      <summary>获取服务总线分配给消息的唯一编号。</summary>
      <returns>服务总线分配给消息的唯一编号。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从消息服务器收到消息，则引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.SessionId">
      <summary>获取或设置会话的标识符。</summary>
      <returns>会话的标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.Size">
      <summary>获取消息的大小（以字节为单位）。</summary>
      <returns>消息大小（以字节为单位）</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.State">
      <summary>获取或设置消息的状态。</summary>
      <returns>消息的状态。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#GetSchema">
      <summary>此方法是保留的，不应使用。实现 IXmlSerializable 接口时，应该从此方法返回空（在 Visual Basic 中为 Nothing），而如果需要指定自定义模式，则将 XmlSchemaProviderAttribute 应用于该类。</summary>
      <returns>一个 XmlSchema，它描述由 WriteXml 方法生成并由 ReadXml 方法使用的对象的 XML 表示形式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#ReadXml(System.Xml.XmlReader)">
      <summary>从 XML 表示生成对象。此方法保留供内部使用，不应直接或间接使用（例如，使用序列化程序或格式化程序）。</summary>
      <param name="reader">从中反序列化对象的 XmlReader 流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.System#Xml#Serialization#IXmlSerializable#WriteXml(System.Xml.XmlWriter)">
      <summary>将对象转换为其 XML 表示形式。此方法保留供内部使用，不应直接或间接使用（例如，使用串行器或格式化程序）。</summary>
      <param name="writer">对象序列化的 XmlWriter 流。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive">
      <summary>获取或设置消息的使用时间值。这是消息到期的持续时间，从消息发送到服务总线开始。超过 TimeToLive 值的消息将到期，不再保留在消息存储中。订阅者将无法接收到期的消息。TimeToLive 是可以接收消息的最长生命周期，但其值不能超过实体在目标队列或订阅上的指定<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive" />值。如果指定的 TimeToLive 值较小，则它将应用于单个消息。但是，消息上指定的较大值将被实体的 DefaultMessageTimeToLive 值覆盖。</summary>
      <returns>消息的使用时间值。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果传入的值小于或等于 TimeSpan.Zero，则引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.To">
      <summary>获取或设置发送地址。</summary>
      <returns>发送地址。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessage.ToString">
      <summary>返回表示当前消息的字符串。</summary>
      <returns>当前消息的字符串表示形式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.ViaPartitionKey">
      <summary>当事务用于通过传输队列发送消息时，获取或设置分区键值。</summary>
      <returns>当事务用于通过传输队列发送消息时的分区键值。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty">
      <summary>代表<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的属性包。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ContentType">
      <summary>获取或设置内容的类型。</summary>
      <returns>消息正文的内容类型。这是发送方和接收方用于特定于应用程序的逻辑的内容类型标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.CorrelationId">
      <summary>获取或设置关联的标识符。</summary>
      <returns>相关标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.DeliveryCount">
      <summary>获取为传递此消息而进行的交付数。</summary>
      <returns>为传递此消息而进行的交付数量。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.InvalidOperationException">如果 ServiceBus 尚未传递消息。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.EnqueuedTimeUtc">
      <summary>获取或设置发送时间的日期和时间（以 UTC 格式）。</summary>
      <returns>UTC 中的入队时间。此值表示将消息排入队列的实际时间。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ExpiresAtUtc">
      <summary>获取将消息设置为过期的 UTC 日期和时间。</summary>
      <returns>消息过期时间 (UTC)。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ForcePersistence">
      <summary>获取或设置是否强制持久化此属性。</summary>
      <returns>如果强制持久化此属性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Label">
      <summary>获取或设置特定于应用程序的标签。</summary>
      <returns>应用程序特定标签。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockedUntilUtc">
      <summary>获取 UTC 日期和时间，直到消息将在队列/订阅中锁定。</summary>
      <returns>消息将在队列/订阅中锁定的日期和时间。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从 ServiceBus 收到消息。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.LockToken">
      <summary>获取服务总线为消息分配的锁定令牌。</summary>
      <returns>服务总线为消息分配的锁定令牌。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从 ServiceBus 收到消息。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Message">
      <summary>获取代理消息。</summary>
      <returns>代理消息对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.MessageId">
      <summary>获取或设置消息的标识符。</summary>
      <returns>消息标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.ArgumentException">如果消息标识符为空或超过 128 个字符。</exception>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Name">
      <summary>发送消息时用于将属性包应用于<see cref="T:System.ServiceModel.Channels.Message" />的名称。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.PartitionKey">
      <summary>获取或设置用于将事务性消息发送到不支持会话的队列或主题的分区键。</summary>
      <returns>返回<see cref="T:System.String" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.Properties">
      <summary>获取代理消息的属性。</summary>
      <returns>代理消息的属性。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyTo">
      <summary>获取或设置要回复的队列的地址。</summary>
      <returns>回复队列地址。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ReplyToSessionId">
      <summary>获取或设置要回复的会话标识符。</summary>
      <returns>要回复的会话标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ScheduledEnqueueTimeUtc">
      <summary>获取或设置消息将入队的 UTC 日期和时间。</summary>
      <returns>以 UTC 为单位的计划入队时间。此值用于延迟消息发送。它用于延迟发送到将来特定时间的消息。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果传入的值是 DateTime.MaxValue。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SequenceNumber">
      <summary>获取服务总线分配给消息的唯一编号。</summary>
      <returns>服务总线分配给消息的唯一编号。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.InvalidOperationException">如果未从消息服务器收到消息。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.SessionId">
      <summary>获取或设置会话的标识符。</summary>
      <returns>会话的标识符。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.System#ServiceModel#Channels#IMessageProperty#CreateCopy">
      <summary>创建代理消息的当前实例的副本。</summary>
      <returns>代理消息的当前实例的副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.TimeToLive">
      <summary>获取或设置消息的使用时间值。这是消息到期的持续时间，从消息发送到服务总线开始。超过 TimeToLive 值的消息将到期，不再保留在消息存储中。订阅者将无法接收到期消息。</summary>
      <returns>消息的使用时间值。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果传入的值小于或等于 TimeSpan.Zero。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.To">
      <summary>获取或设置发送地址。</summary>
      <returns>目标队列的地址。</returns>
      <exception cref="T:System.ObjectDisposedException">如果消息处于已处置状态。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.BrokeredMessageProperty.ViaPartitionKey">
      <summary>当事务用于通过传输队列发送消息时，获取或设置分区键值。</summary>
      <returns>返回<see cref="T:System.String" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.CorrelationFilter">
      <summary>表示相关筛选器表达式。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor">
      <summary>初始化一个新的具有默认值的<see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" />实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.#ctor(System.String)">
      <summary>初始化一个新的具有指定相关标识符的<see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" />实例。</summary>
      <param name="correlationId">相关的标识符。</param>
      <exception cref="T:System.ArgumentException"><paramref name="correlationId" />为无效或为空时引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ContentType">
      <summary>获取消息的内容类型。</summary>
      <returns>消息的内容类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.CorrelationId">
      <summary>获取关联的标识符。</summary>
      <returns>关联的标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Label">
      <summary>获取应用程序特定标签。</summary>
      <returns>应用程序特定标签。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>指示消息是否与当前 SQL 表达式匹配。</summary>
      <returns>如果消息与当前 SQL 表达式匹配，则为 true；否则为 false。</returns>
      <param name="message"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.MessageId">
      <summary>获取消息的标识符。</summary>
      <returns>消息的标识符。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Preprocess">
      <summary>获取预处理的筛选器表达式。</summary>
      <returns>预处理的筛选器表达式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.Properties">
      <summary>获取消息的应用程序特定属性。</summary>
      <returns>消息的应用程序特定属性。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyTo">
      <summary>获取要回复的队列的地址。</summary>
      <returns>要回复的队列的地址。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.ReplyToSessionId">
      <summary>获取要回复的会话标识符。</summary>
      <returns>要回复的会话标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.RequiresPreprocessing">
      <summary>获取一个值指示<see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" />表达式是否需要预处理。</summary>
      <returns>如果<see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" /> 表达式需要预处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.SessionId">
      <summary>获取会话标识符。</summary>
      <returns>会话标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.CorrelationFilter.To">
      <summary>获取要发送地址。</summary>
      <returns>发送地址。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.CorrelationFilter.Validate">
      <summary>验证 <see cref="T:Microsoft.ServiceBus.Messaging.CorrelationFilter" />对象。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException">
      <summary>指示消息重复错误的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" />类的新实例。</summary>
      <param name="message">有关异常的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.DuplicateMessageException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.DuplicateMessageException" />类的新实例。</summary>
      <param name="message">有关异常的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus">
      <summary>枚举实体可用性的状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Available">
      <summary>该实体可用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Limited">
      <summary>该实体受限。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Restoring">
      <summary>该实体正在恢复。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityAvailabilityStatus.Unknown">
      <summary>该实体未知。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityDescription">
      <summary>表示实体的描述。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.ExtensionData">
      <summary>获取或设置包含额外数据的结构。</summary>
      <returns>一个 <see cref="T:System.Runtime.Serialization.ExtensionDataObject" />，其中包含未被识别为属于数据协定的数据。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.EntityDescription.IsReadOnly">
      <summary>获取或设置一个值，该值指示实体描述是否为只读。</summary>
      <returns>如果实体描述是只读的，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.EntityDescription.ThrowIfReadOnly">
      <summary>如果实体描述是只读的，则引发异常。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.EntityStatus">
      <summary>枚举消息传递实体状态的可能值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Active">
      <summary>消息传递实体的状态是活动的。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Disabled">
      <summary>消息传递实体的状态已禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.ReceiveDisabled">
      <summary>消息传递实体的接收状态被禁用。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.Restoring">
      <summary>恢复消息传递实体的先前状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.EntityStatus.SendDisabled">
      <summary>消息传递实体的发送状态被禁用。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs">
      <summary>提供<see cref="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived" /> 事件的数据。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.#ctor(System.Exception,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs" />类的新实例。</summary>
      <param name="exception">此事件数据所属的异常情况。</param>
      <param name="action">与事件相关的操作。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Action">
      <summary>获取或设置与事件关联的操作。</summary>
      <returns>与事件相关的操作。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.ExceptionReceivedEventArgs.Exception">
      <summary>获取或设置此事件数据所属的异常。</summary>
      <returns>此事件数据所属的异常情况。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FalseFilter">
      <summary>表示 false 筛选器表达式。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.FalseFilter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>匹配当前 SQL 表达式的消息。</summary>
      <returns>如果匹配，则为 true；否则为 false。</returns>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Preprocess">
      <summary>获取预处理的筛选器表达式。</summary>
      <returns>预处理的筛选器表达式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.FalseFilter.RequiresPreprocessing">
      <summary>获取一个值，该值指示 SQL 筛选器表达式是否需要预处理。</summary>
      <returns>如果 SQL 筛选器表达式需要预处理，则为 true；否则为 false。目前总是返回 true。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FalseFilter.Validate">
      <summary>验证 SQL 表达式。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Filter">
      <summary>描述针对 BrokeredMessage 计算的筛选器表达式。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>将 BrokeredMessage 与 FilterExpression 匹配。</summary>
      <returns>如果 BrokeredMessage 与筛选表达式匹配，则为 true；否则为 false。</returns>
      <param name="message">BrokeredMessage 对象。</param>
      <exception cref="T:System.InvalidOperationException">当前对象状态的操作无效。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">筛选评估失败。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Preprocess">
      <summary>预处理筛选器表达式并返回预处理的 FilterExpression。</summary>
      <returns>预处理的 FilterExpression。</returns>
      <exception cref="T:System.InvalidOperationException">当前对象状态的操作无效。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.RequiresPreprocessing">
      <summary>获取一个值，该值指示筛选器表达式是否需要预处理。</summary>
      <returns>如果筛选器表达式需要预处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Filter.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>获取或设置包含额外数据的对象。</summary>
      <returns>包含额外数据的对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Filter.Validate">
      <summary>验证 FilterExpression 并确保它符合有效的语法规则。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.FilterActionException">筛选器语句无效或可能足够复杂，在评估语句时会消耗过多的计算能力。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.FilterException">
      <summary>信令筛选器操作错误引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String)">
      <summary>初始化一个新的使用指定消息的<see cref="T:Microsoft.ServiceBus.Messaging.FilterException" />实例。</summary>
      <param name="message">异常消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.FilterException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的使用指定消息和内部异常的<see cref="T:Microsoft.ServiceBus.Messaging.FilterException" />实例。</summary>
      <param name="message">异常消息。</param>
      <param name="innerException">内部异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler">
      <summary>表示消息会话的异步处理程序的接口。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发会话异步关闭时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">已关闭会议。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>引发消息代理时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="exception">发生导致丢失会话的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory">
      <summary>表示与消息会话关联的处理程序工厂的接口。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>创建处理程序工厂的实例。</summary>
      <returns>已创建的实例。</returns>
      <param name="session">消息会话。</param>
      <param name="message">消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandler)">
      <summary>释放与处理程序工厂实例关联的资源。</summary>
      <param name="handler">处理程序实例。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandler">
      <summary>表示与消息会话关联的处理程序的接口。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发活动会话关闭时发生的事件。</summary>
      <param name="session">正在关闭的会话。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>引发消息代理时发生的事件。</summary>
      <param name="session">当前的消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <param name="exception">导致会话丢失的错误。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory">
      <summary>表示与消息会话关联的处理程序工厂的接口。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.CreateInstance(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>创建处理程序工厂的实例。</summary>
      <returns>已创建的实例。</returns>
      <param name="session">消息会话。</param>
      <param name="message">消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory.DisposeInstance(Microsoft.ServiceBus.Messaging.IMessageSessionHandler)">
      <summary>释放与处理程序工厂实例关联的资源。</summary>
      <param name="handler">处理程序实例。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ManagementStrings">
      <summary>提供 Windows Azure Service Bus Messaging 中使用的字符串常量。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessedAt">
      <summary>指定 AccessedAt 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AccessRights">
      <summary>指定 AccessRights 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AcsManagementEndpoint">
      <summary>指定 AcsManagementEndpoint 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Action">
      <summary>指定 Action 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmCredential">
      <summary>指定 AdmCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminApiUserName">
      <summary>指定 AdminApiUserName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdminGroup">
      <summary>指定 AdminGroup 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationDescription">
      <summary>指定 AdmRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationId">
      <summary>指定 AdmRegistrationId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmRegistrationsCount">
      <summary>指定 AdmRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AdmTemplateRegistrationDescription">
      <summary>指定 AdmTemplateRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllowRule">
      <summary>指定 AllowRule 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AllRegistrationsCount">
      <summary>指定 AllRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpPort">
      <summary>指定 AmqpPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AmqpsPort">
      <summary>指定 AmqpsPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersion">
      <summary>指定 ApiVersion 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApiVersionName">
      <summary>指定 ApiVersionName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApnsCredential">
      <summary>指定 ApnsCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationDescription">
      <summary>指定 AppleRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleRegistrationsCount">
      <summary>指定 AppleRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AppleTemplateRegistrationDescription">
      <summary>指定 AppleTemplateRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ApplicationPlatform">
      <summary>指定 ApplicationPlatform 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AtomEntryContentType">
      <summary>指定 AtomEntryContentType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationRules">
      <summary>指定 AuthorizationRules 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AuthorizationType">
      <summary>指定 AuthorizationType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.AutoDeleteOnIdle">
      <summary>指定 AutoDeleteOnIdle 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BodyTemplate">
      <summary>指定 BodyTemplate 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.BrokerExternalUrls">
      <summary>指定 BrokerExternalUrls 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CancelScheduledNotification">
      <summary>指定 CancelScheduledNotification 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CertificateInfo">
      <summary>指定 CertificateInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channel">
      <summary>指定 Channel 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Channels">
      <summary>指定 Channels 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ChannelUri">
      <summary>指定 ChannelUri 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimType">
      <summary>指定 ClaimType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClaimValue">
      <summary>指定 ClaimValue 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClientConnectionEndpointPort">
      <summary>指定 ClientConnectionEndpointPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ClusterConnectionEndpointPort">
      <summary>指定 ClusterConnectionEndpointPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Code">
      <summary>指定 Code 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionDetail">
      <summary>指定 ConnectionDetail 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionInformationDescription">
      <summary>指定 ConnectionInformationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ConnectionString">
      <summary>指定 ConnectionString 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CorrelationFilter">
      <summary>指定 CorrelationFilter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CountDetails">
      <summary>指定 CountDetails 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CreatedAt">
      <summary>指定 CreatedAt 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Critical">
      <summary>指定 Critical 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentAbsoluteSKUUnits">
      <summary>指定 CurrentAbsoluteSKUUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentDatabaseCount">
      <summary>指定 CurrentDatabaseCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.CurrentSKUUnits">
      <summary>指定 CurrentSKUUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyApiCalls">
      <summary>指定 DailyApiCalls 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveDevices">
      <summary>指定 DailyMaxActiveDevices 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyMaxActiveRegistrations">
      <summary>指定 DailyMaxActiveRegistrations 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyOperations">
      <summary>指定 DailyOperations 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DailyPushes">
      <summary>指定 DailyPushes 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Data">
      <summary>指定 Data 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseName">
      <summary>指定 DatabaseName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseServer">
      <summary>指定 DatabaseServer 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DatabaseSizeInMB">
      <summary>指定 DatabaseSizeInMB 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DataCenter">
      <summary>指定 DataCenter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnFilterEvaluationExceptions">
      <summary>指定 DeadLetteringOnFilterEvaluationExceptions 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeadLetteringOnMessageExpiration">
      <summary>指定 DeadLetteringOnMessageExpiration 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultKey">
      <summary>指定 DefaultKey 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultMessageTimeToLive">
      <summary>指定 DefaultMessageTimeToLive 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DefaultRuleDescription">
      <summary>指定 DefaultRuleDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeleteMethod">
      <summary>指定 DeleteMethod 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DesiredDatabaseCount">
      <summary>指定 DesiredDatabaseCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceChallenge">
      <summary>指定 DeviceChallenge 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DeviceToken">
      <summary>指定 DeviceToken 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.DuplicateDetectionHistoryTimeWindow">
      <summary>指定 DuplicateDetectionHistoryTimeWindow 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailAddress">
      <summary>指定 EmailAddress 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmailRegistrationDescription">
      <summary>指定 EmailRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyFilterAction">
      <summary>指定 EmptyFilterAction 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EmptyRuleAction">
      <summary>指定 EmptyRuleAction 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableBatchedOperations">
      <summary>指定 EnableBatchedOperations 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Enabled">
      <summary>指定 Enabled string 的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableExpress">
      <summary>指定 EnableExpress 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnablePartitioning">
      <summary>指定 EnablePartitioning 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableRuleAction">
      <summary>指定 EnableRuleAction 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnableSubscriptionPartitioning">
      <summary>指定 EnableSubscriptionPartitioning 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EncryptionCertificate">
      <summary>指定 EncryptionCertificate 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntitiesCount">
      <summary>指定 EntitiesCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityAvailabilityStatus">
      <summary>指定 EntityAvailabilityStatus 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EntityStatus">
      <summary>指定 EntityStatus 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EnumerationResourceName">
      <summary>指定 EnumerationResourceName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ETag">
      <summary>指定 ETag 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueName">
      <summary>指定 EventFeedbackQueueName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventFeedbackQueueSharedAccessSignature">
      <summary>指定 EventFeedbackQueueSharedAccessSignature 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubCollection">
      <summary>指定 EventHubCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventHubDescription">
      <summary>指定 EventHubDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueName">
      <summary>指定 EventInputQueueName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputQueueSharedAccessSignature">
      <summary>指定 EventInputQueueSharedAccessSignature 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableName">
      <summary>指定 EventInputTableName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventInputTableSharedAccessSignature">
      <summary>指定 EventInputTableSharedAccessSignature 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventQueueEndpoint">
      <summary>指定 EventQueueEndpoint 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceInfo">
      <summary>指定 EventSourceInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventSourceName">
      <summary>指定 EventSourceName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.EventTableEndpoint">
      <summary>指定 EventTableEndpoint 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ExpirationTime">
      <summary>指定 ExpirationTime 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Expiry">
      <summary>指定 Expiry 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FailedFilePath">
      <summary>指定 FailedFilePath 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Failure">
      <summary>指定 Failure 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FalseFilter">
      <summary>指定 FalseFilter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmCertificate">
      <summary>指定 FarmCertificate 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmDNS">
      <summary>指定 FarmDNS 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FarmType">
      <summary>指定 FarmType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Filter">
      <summary>指定 Filter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FilteringMessagesBeforePublishing">
      <summary>指定 FilteringMessagesBeforePublishing 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardDeadLetteredMessagesTo">
      <summary>指定 ForwardDeadLetteredMessagesTo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ForwardTo">
      <summary>指定 ForwardTo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.FullName">
      <summary>指定 FullName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GatewayDBConnectionString">
      <summary>指定 GatewayDBConnectionString 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmCredential">
      <summary>指定 GcmCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationDescription">
      <summary>指定 GcmRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationId">
      <summary>指定 GcmRegistrationId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmRegistrationsCount">
      <summary>指定 GcmRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GcmTemplateRegistrationDescription">
      <summary>指定 GcmTemplateRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetMethod">
      <summary>指定 GetMethod 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfo">
      <summary>指定 GetVersionInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.GetVersionInfoHeaderName">
      <summary>指定 GetVersionInfoHeaderName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Host">
      <summary>指定 Host 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostId">
      <summary>指定 HostId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostName">
      <summary>指定 HostName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Hosts">
      <summary>指定 Hosts 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HostStatus">
      <summary>指定 HostStatus 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.HttpsPort">
      <summary>指定 HttpsPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Id">
      <summary>指定 Id 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Identifier">
      <summary>指定 Identifier 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IfMatch">
      <summary>指定 IfMatch 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ImportFileUri">
      <summary>指定 ImportFileUri 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.InputProperties">
      <summary>指定 InputProperties 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsAnonymousAccessible">
      <summary>指定 IsAnonymousAccessible 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsDynamic">
      <summary>指定 IsDynamic 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsExpress">
      <summary>指定 IsExpress 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IsPremium">
      <summary>指定 IsPremium 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssueRegistrationSecretPayload">
      <summary>指定 IssueRegistrationSecretPayload 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.IssuerName">
      <summary>指定 IssuerName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.JobType">
      <summary>指定 JobType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.KeyName">
      <summary>指定 KeyName字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LeaseDriverEndpointPort">
      <summary>指定 LeaseDriverEndpointPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerCount">
      <summary>指定 ListenerCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ListenerType">
      <summary>指定 ListenerType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.LockDuration">
      <summary>指定 LockDuration 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ManagementSuffix">
      <summary>指定 ManagementSuffix 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedApiCallsPerDayPerUnit">
      <summary>指定 MaxAllowedApiCallsPerDayPerUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedDevicesPerUnit">
      <summary>指定 MaxAllowedDevicesPerUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedOperationsPerDayPerUnit">
      <summary>指定 MaxAllowedOperationsPerDayPerUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedPushesPerDayPerUnit">
      <summary>指定 MaxAllowedPushesPerDayPerUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedRegistrationsPerUnit">
      <summary>指定 MaxAllowedRegistrationsPerUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxAllowedUnits">
      <summary>指定 MaxAllowedUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxCorrelationFiltersPerTopic">
      <summary>指定 MaxCorrelationFiltersPerTopic 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxDeliveryCount">
      <summary>指定 MaxDeliveryCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxMessageSizeInBytes">
      <summary>指定 MaxMessageSizeInBytes 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSizeInMegabytes">
      <summary>指定 MaxSizeInMegabytes 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSqlFiltersPerTopic">
      <summary>指定 MaxSqlFiltersPerTopic 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MaxSubscriptionsPerTopic">
      <summary>指定 MaxSubscriptionsPerTopic 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageBrokerPort">
      <summary>指定 MessageBrokerPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageContainerInfo">
      <summary>指定 MessageContainerInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCount">
      <summary>指定 MessageCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MessageCountDetails">
      <summary>指定 MessageCountDetails 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MinAllowedUnits">
      <summary>指定 MinAllowedUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsCredential">
      <summary>指定 MpnsCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeader">
      <summary>指定 MpnsHeader 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsHeaders">
      <summary>指定 MpnsHeaders 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationDescription">
      <summary>指定 MpnsRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsRegistrationsCount">
      <summary>指定 MpnsRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.MpnsTemplateRegistrationDescription">
      <summary>指定 MpnsTemplateRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Name">
      <summary>指定 Name 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Namespace">
      <summary>指定 Namespace 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceAvailability">
      <summary>指定 NamespaceAvailability 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceDescription">
      <summary>指定 NamespaceDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceEntityStats">
      <summary>指定 NamespaceEntityStats 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NamespaceMessagingPlan">
      <summary>指定 NamespaceMessagingPlan 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NewPnsHandle">
      <summary>指定 NewPnsHandle 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHBasicUnit">
      <summary>指定 NHBasicUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NHStandardUnit">
      <summary>指定 NHStandardUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCollection">
      <summary>指定 NotificationHubCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubCount">
      <summary>指定 NotificationHubCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubDescription">
      <summary>指定 NotificationHubDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJob">
      <summary>指定 NotificationHubJob 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubJobId">
      <summary>指定 NotificationHubJobId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPlan">
      <summary>指定 NotificationHubPlan 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubPnsCredentials">
      <summary>指定 NotificationHubPnsCredentials 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationHubSKU">
      <summary>指定 NotificationHubSKU 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.NotificationOutcome">
      <summary>指定 NotificationOutcome 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OriginalPnsHandle">
      <summary>指定 OriginalPnsHandle 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Outcome">
      <summary>指定 Outcome 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputContainerUri">
      <summary>指定 OutputContainerUri 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputFilePath">
      <summary>指定 OutputFilePath 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.OutputProperties">
      <summary>指定 OutputProperties 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PartitionCount">
      <summary>指定 PartitionCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Path">
      <summary>指定 Path 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredential">
      <summary>指定 PnsCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentialName">
      <summary>指定 PnsCredentialName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsCredentials">
      <summary>指定 PnsCredentials 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PnsHandle">
      <summary>指定 PnsHandle 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PostMethod">
      <summary>指定 PostMethod 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PrimaryKey">
      <summary>指定 PrimaryKey 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Progress">
      <summary>指定 Progress 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PublishToRegistry">
      <summary>指定 PublishToRegistry 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.PutMethod">
      <summary>指定 PutMethod 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCollection">
      <summary>指定 QueueCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueCount">
      <summary>指定 QueueCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.QueueDescription">
      <summary>指定 QueueDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ReasonDetail">
      <summary>指定 ReasonDetail 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Region">
      <summary>指定 Region 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegionCodeDescription">
      <summary>指定 RegionCodeDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationBoundVariable">
      <summary>指定 RegistrationBoundVariable 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCollection">
      <summary>指定 RegistrationCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationCounts">
      <summary>指定 RegistrationCounts 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationId">
      <summary>指定 RegistrationId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationIds">
      <summary>指定 RegistrationIds 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationResult">
      <summary>指定 RegistrationResult 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Registrations">
      <summary>指定 Registrations 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretGcmPayload">
      <summary>指定 RegistrationSecretGcmPayload 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationSecretPayload">
      <summary>指定 RegistrationSecretPayload 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RegistrationTtl">
      <summary>指定 RegistrationTtl 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCollection">
      <summary>指定 RelayCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayCount">
      <summary>指定 RelayCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayDescription">
      <summary>指定 RelayDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RelayType">
      <summary>指定 RelayType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequestorService">
      <summary>指定 RequestorService 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresClientAuthorization">
      <summary>指定 RequiresClientAuthorization 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresDuplicateDetection">
      <summary>指定 RequiresDuplicateDetection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresSession">
      <summary>指定 RequiresSession 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RequiresTransportSecurity">
      <summary>指定 RequiresTransportSecurity 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Result">
      <summary>指定 Result 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Results">
      <summary>指定 Results 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Revision">
      <summary>指定 Revision 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Rights">
      <summary>指定 Rights 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsPort">
      <summary>指定 RPHttpsPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RPHttpsUrl">
      <summary>指定 RPHttpsUrl 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleAction">
      <summary>指定 RuleAction 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleCollection">
      <summary>指定 RuleCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RuleDescription">
      <summary>指定 RuleDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.RunAsAccount">
      <summary>指定 RunAsAccount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmDBConnectionString">
      <summary>指定 SBFarmDBConnectionString 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SBFarmInfo">
      <summary>指定 SBFarmInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnit">
      <summary>指定 ScaleUnit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScaleUnitKey">
      <summary>指定 ScaleUnitKey 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotification">
      <summary>指定 ScheduledNotification 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationId">
      <summary>指定 ScheduledNotificationId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationPayload">
      <summary>指定 ScheduledNotificationPayload 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTags">
      <summary>指定 ScheduledNotificationTags 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ScheduledNotificationTime">
      <summary>指定 ScheduledNotificationTime 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryConnectionString">
      <summary>指定 SecondaryConnectionString 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SecondaryKey">
      <summary>指定 SecondaryKey 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMaxUnits">
      <summary>指定 SelectedSKUMaxUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SelectedSKUMinUnits">
      <summary>指定 SelectedSKUMinUnits 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Service">
      <summary>指定 Service 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusEndpoint">
      <summary>指定 ServiceBusEndpoint 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceBusFarmStatusInfo">
      <summary>指定 ServiceBusFarmStatusInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceConnectionEndpointPort">
      <summary>指定 ServiceConnectionEndpointPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceInfo">
      <summary>指定 ServiceInfo 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.ServiceName">
      <summary>指定 ServiceName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SharedAccessAuthorizationRule">
      <summary>指定 SharedAccessAuthorizationRule 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SizeInBytes">
      <summary>指定 SizeInBytes 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SKU">
      <summary>指定 SKU 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SmtpCredential">
      <summary>指定 SmtpCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlFilter">
      <summary>指定 SqlFilter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SqlRuleAction">
      <summary>指定 SqlRuleAction 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Status">
      <summary>指定 Status 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCollection">
      <summary>指定 SubscriptionCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionCount">
      <summary>指定 SubscriptionCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionDescription">
      <summary>指定 SubscriptionDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SubscriptionId">
      <summary>指定 SubscriptionId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Success">
      <summary>指定 Success 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.SupportOrdering">
      <summary>指定 SupportOrdering 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tag">
      <summary>指定 Tag 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.Tags">
      <summary>指定 Tags 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TcpPort">
      <summary>指定 TcpPort 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TemplateName">
      <summary>指定 TemplateName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TenantApiUserName">
      <summary>指定 TenantApiUserName 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TextContentType">
      <summary>指定 TextContentType 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCollection">
      <summary>指定 TopicCollection 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicCount">
      <summary>指定 TopicCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TopicDescription">
      <summary>指定 TopicDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrackingId">
      <summary>指定 TrackingId 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.TrueFilter">
      <summary>指定 TrueFilter 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatedAt">
      <summary>指定 UpdatedAt 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UpdatePnsHandlePayload">
      <summary>指定 UpdatePnsHandlePayload 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UsageCredit">
      <summary>指定 UsageCredit 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserMetadata">
      <summary>指定 UserMetadata 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.UserValidationResult">
      <summary>指定 UserValidationResult 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHDeviceChallenge">
      <summary>指定 WANHDeviceChallenge 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHExpirationTime">
      <summary>指定 WANHExpirationTime 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WANHRegistrationSecret">
      <summary>指定 WANHRegistrationSecret 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationDescription">
      <summary>指定 WindowsRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsRegistrationsCount">
      <summary>指定 WindowsRegistrationsCount 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WindowsTemplateRegistrationDescription">
      <summary>指定 WindowsTemplateRegistrationDescription 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsCredential">
      <summary>指定 WnsCredential 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.WnsHeaders">
      <summary>指定 WnsHeaders 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeader">
      <summary>指定 XProcessAtHttpHeader 字符串的值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ManagementStrings.XProcessAtHttpHeaderAttributeValue">
      <summary>指定 XProcessAtHttpHeaderAttributeValue 字符串的值。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageClientEntity">
      <summary>表示消息客户端实体。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Abort">
      <summary>中止消息客户端实体并将其状态置于关闭状态。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.BeginClose(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以关闭消息客户端实体。</summary>
      <returns>应用异步操作以关闭消息客户端实体的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Close">
      <summary>关闭消息客户端实体并将其状态置于关闭状态。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.CloseAsync">
      <summary>异步关闭消息客户端实体并将其状态置于关闭状态。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.EndClose(System.IAsyncResult)">
      <summary>完成异步操作以关闭消息客户端实体。</summary>
      <param name="result">应用异步操作以关闭消息客户端实体的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.Fault">
      <summary>将消息客户端实体置于故障状态。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.IsClosed">
      <summary>获取或设置一个值，该值指示消息客户端实体是否已关闭。</summary>
      <returns>如果消息客户端实体已关闭，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnAbort">
      <summary>在调用 Abort 操作时执行。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginClose 操作时执行。</summary>
      <returns>应用异步操作以关闭消息客户端实体的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用操作时执行以开始打开消息客户端实体。</summary>
      <returns>应用异步操作以开始打开消息客户端实体的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnClose(System.TimeSpan)">
      <summary>调用 Close 操作时执行。</summary>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnClosed">
      <summary>消息客户端实体转换为关闭状态时发生。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnEndClose(System.IAsyncResult)">
      <summary>在调用 EndClose 操作时执行。</summary>
      <param name="result">应用异步操作以关闭消息客户端实体的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnEndOpen(System.IAsyncResult)">
      <summary>在调用操作结束时执行以打开消息客户端实体。</summary>
      <param name="result">应用异步操作以打开消息客户端实体的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnFaulted">
      <summary>在调用 Fault 操作时执行。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnOpen(System.TimeSpan)">
      <summary>在调用操作时执行以打开消息客户端实体。</summary>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.OnOpened">
      <summary>在打开消息客户端实体时执行。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.RetryPolicy">
      <summary>获取或设置与此实例关联的重试策略，该策略确定是否应重试该请求。</summary>
      <returns>与此实例关联的重试策略，该策略确定是否应重试该请求。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThisLock">
      <summary>获取用于锁定<see cref="T:Microsoft.ServiceBus.Messaging.MessageClientEntity" />实例的对象。</summary>
      <returns>用于锁定<see cref="T:Microsoft.ServiceBus.Messaging.MessageClientEntity" />实例的对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfClosed">
      <summary>如果消息客户端实体已关闭，则引发异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposed">
      <summary>如果消息客户端实体已处理，则引发异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposedOrImmutable">
      <summary>如果客户端已处理或不可变，则引发异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfDisposedOrNotOpen">
      <summary>如果客户端已处理或未打开，则引发异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageClientEntity.ThrowIfFaulted">
      <summary>如果客户端出现故障，则引发异常。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageCountDetails">
      <summary>此类包含的属性使您可以从主消息传递实体（队列、主题、订阅）的子队列中检索消息的详细信息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageCountDetails.#ctor(System.Int64,System.Int64,System.Int64,System.Int64,System.Int64)">
      <summary>初始化一个新的<see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />类实例，其中包含活动消息数、死信、预定消息、传输到其他队列的消息、订阅或主题以及传输到死信队列的消息数。</summary>
      <param name="activeMessageCount">活动消息的数量。</param>
      <param name="deadletterMessageCount">死信的数量。</param>
      <param name="scheduledMessageCount">预定消息的数量。</param>
      <param name="transferMessageCount">传输到其他队列、订阅或主题的消息数。</param>
      <param name="transferDlqMessageCount">传输到死信队列的消息数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ActiveMessageCount">
      <summary>获取或设置队列、主题或订阅中的活动消息数。</summary>
      <returns>返回指定活动消息数的<see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.DeadLetterMessageCount">
      <summary>获取或设置死信的消息数。</summary>
      <returns>返回指定死信消息数的<see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.ScheduledMessageCount">
      <summary>获取或设置预定消息的数量。</summary>
      <returns>返回预定消息数的<see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferDeadLetterMessageCount">
      <summary>获取或设置传入死信的数字消息。</summary>
      <returns>返回指定转移到死信中的数字消息的<see cref="T:System.Int64" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageCountDetails.TransferMessageCount">
      <summary>获取或设置传输到另一个队列、主题或订阅的消息数。</summary>
      <returns>返回指定传输到另一个队列、主题或订阅的消息数的<see cref="T:System.Int64" /></returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">
      <summary>引发信号消息锁定丢失错误的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化新的 MessageLockLostException 类实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageLockLostException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和导致此异常原因的内部异常的引用初始化新的 MessageLockLostException 类实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException">
      <summary>引出信号消息未找到错误的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String)">
      <summary>初始化 <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> 类的新实例，其具有指定的错误消息。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageNotFoundException.#ctor(System.String,System.Exception)">
      <summary>初始化 <see cref="T:Microsoft.ServiceBus.Messaging.MessageNotFoundException" /> 类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageReceiver">
      <summary>从消息容器接收消息并确认它们。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid)">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid)">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchFlushInterval">
      <summary>获取批次刷新间隔。</summary>
      <returns>批量刷新间隔。默认值为 20 毫秒。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.BatchingEnabled">
      <summary>获取一个值，该值指示是否已启用批处理。</summary>
      <returns>如果启用了批处理，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的锁定令牌 。这仅在以 peek-lock 模式接收消息时可用。锁定令牌在内部用于完成或放弃消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息的接收。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的锁定令牌 。这仅在以 peek-lock 模式接收消息时可用。锁定令牌在内部用于完成或放弃消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息批处理。</summary>
      <returns>引用操作的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockTokens">锁定令牌。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停接收消息。</summary>
      <returns>引用异步操作来暂停接收消息的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的锁定令牌 。这仅在以 peek-lock 模式接收消息时可用。锁定令牌在内部用于完成或放弃消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停接收消息。</summary>
      <returns>引用异步操作来暂停接收消息的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>开始查看消息的操作。</summary>
      <returns>查看消息的结果。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始查看消息的操作。</summary>
      <returns>查看消息的结果。</returns>
      <param name="fromSequenceNumber">从哪里查看消息的序列号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始查看批消息的操作。</summary>
      <returns>查看消息的结果。</returns>
      <param name="messageCount">消息量。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始查看批消息的操作。</summary>
      <returns>查看消息的结果。</returns>
      <param name="fromSequenceNumber">从哪里查看批消息的序列号。</param>
      <param name="messageCount">消息量。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">服务总线分配给消息的唯一编号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">操作超时前的服务器等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批消息。</summary>
      <returns>引用异步操作以接收批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">序列号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批消息。</summary>
      <returns>引用异步操作以接收批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">消息量。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批消息。</summary>
      <returns>引用异步操作以接收批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">消息量。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Complete(System.Guid)">
      <summary>完成对消息的接收操作。</summary>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的锁定令牌 。这仅在以 peek-lock 模式接收消息时可用。锁定令牌在内部用于完成或放弃消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteAsync(System.Guid)">
      <summary>异步完成对消息的接收操作。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>完成批消息的接收操作。</summary>
      <param name="lockTokens">锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>异步完成批消息的接收操作。</summary>
      <returns>异步操作。</returns>
      <param name="lockTokens">锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetter(System.Guid,System.String,System.String)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid)">
      <summary>表示接收方想要推迟消息的处理。</summary>
      <param name="lockToken"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />的锁定令牌 。这仅在以 peek-lock 模式接收消息时可用。锁定令牌在内部用于完成或放弃消息。</param>
      <exception cref="P:Microsoft.ServiceBus.Common.Fx.Exception">接收上下文为空。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>表示接收方想要推迟消息的处理。</summary>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid)">
      <summary>异步延迟消息的处理。</summary>
      <returns>返回<see cref="T:System.Threading.Tasks.Task" />。</returns>
      <param name="lockToken">锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步延迟消息的处理。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndAbandon(System.IAsyncResult)">
      <summary>结束异步操作以放弃消息并放弃其锁定。</summary>
      <param name="result">引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndComplete(System.IAsyncResult)">
      <summary>结束异步操作以完成消息的接收。</summary>
      <param name="result">引用异步操作来完成接收消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndCompleteBatch(System.IAsyncResult)">
      <summary>结束异步操作以完成批消息的接收。</summary>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDeadLetter(System.IAsyncResult)">
      <summary>结束异步操作以将消息移动到死信队列。</summary>
      <param name="result">引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.TimeoutException">操作超时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndDefer(System.IAsyncResult)">
      <summary>结束异步操作以推迟接收消息。</summary>
      <param name="result">引用异步操作来推迟接收消息的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeek(System.IAsyncResult)">
      <summary>结束异步操作以查看消息。</summary>
      <returns>表示消息已被查看的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">引用异步操作来查看消息的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndPeekBatch(System.IAsyncResult)">
      <summary>结束异步操作以查看批消息。</summary>
      <returns>批消息。</returns>
      <param name="result">引用异步操作来查看消息的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceive(System.IAsyncResult)">
      <summary>结束异步操作以接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">引用异步操作来接收消息的<see cref="T:System.IAsyncResult" />对象。</param>
      <exception cref="T:System.TimeoutException">操作超时。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.EndReceiveBatch(System.IAsyncResult)">
      <summary>结束异步操作以接收批消息。</summary>
      <returns>表示批消息的<see cref="T:System.Collections.Generic.IEnumerable`1" />对象。</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockToken(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>获取绑定到消息的锁定令牌。</summary>
      <returns>消息的锁定令牌。</returns>
      <param name="message">获取锁定令牌的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.GetLockTokens(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>从指定的消息集合中获取锁定令牌的集合。</summary>
      <returns>来自指定消息的锁定令牌集合。</returns>
      <param name="messages">从中获取锁定令牌的消息集合。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.LastPeekedSequenceNumber">
      <summary>获取或设置上次查看的消息的序列号。</summary>
      <returns>上次查看的消息的序列号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Mode">
      <summary>获取消息接收模式。</summary>
      <returns>消息接收模式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>在调用 Abandon 操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnAbandon 或 BeginAbandon 操作时执行。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnComplete 或 BeginComplete 操作时执行。</summary>
      <returns>引用异步操作来完成接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnDeadLetter 或 BeginDeadLetter 操作时执行。</summary>
      <returns>引用异步操作以将未发送消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="deadLetterReason">消息成为死信的原因。</param>
      <param name="deadLetterErrorDescription">消息成为死信的错误描述。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnDefer 或 BeginDefer 操作时执行。</summary>
      <returns>引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginPeek 操作时执行。</summary>
      <returns>操作的结果。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="fromSequenceNumber">从哪里开始操作的序列号。</param>
      <param name="messageCount">消息量。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnBegin 操作以锁定消息时执行。</summary>
      <returns>引用异步操作来更新锁定消息处理的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="sequenceNumbers">服务总线分配给消息的唯一编号集。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>调用“完成”操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>调用“死信”操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>调用“推迟”操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndAbandon(System.IAsyncResult)">
      <summary>执行最终放弃操作。</summary>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndComplete(System.IAsyncResult)">
      <summary>执行“结束完成”操作。</summary>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDeadLetter(System.IAsyncResult)">
      <summary>执行“结束移动到死信队列”操作。</summary>
      <param name="result">引用异步已完成操作的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndDefer(System.IAsyncResult)">
      <summary>执行“结束延迟”动作。</summary>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndPeek(System.IAsyncResult)">
      <summary>执行 EndPeek 操作。</summary>
      <returns>消息列表。</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>执行消息锁定的 EndRenew 操作。</summary>
      <returns>锁定消息的<see cref="T:System.Collections.Generic.IEnumerable`1" />。</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>执行“结束尝试接收”操作。</summary>
      <returns>如果成功，则为 true；如果失败，则为 false。</returns>
      <param name="result">结果。</param>
      <param name="messages">收到的邮件集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>执行“结束尝试接收”操作。</summary>
      <returns>如果成功，则为 true；如果失败，则为 false。</returns>
      <param name="result">结果。</param>
      <param name="messages">收到的邮件集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>在事件驱动的消息泵中处理消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
      <param name="options">指定用于实例化消息泵的<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>异步处理事件驱动的消息泵中的消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
      <param name="options">指定用于实例化消息泵的<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan)">
      <summary>在调用“查看”操作时执行。</summary>
      <returns>消息已被查看。</returns>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="fromSequenceNumber">查看序列号。</param>
      <param name="messageCount">消息量。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>执行锁定消息的更新操作。</summary>
      <returns>更新的锁定消息。</returns>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="lockTokens">锁定令牌。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>调用 TryReceive 操作时执行。</summary>
      <returns>true 表示此方法操作成功；否则为 false。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="sequenceNumbers">服务总线分配给消息的唯一编号集。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="messages">此方法返回时，包含收到的消息集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>调用 TryReceive 操作时执行。</summary>
      <returns>true 表示此方法操作成功；否则为 false。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间跨度。</param>
      <param name="messages">此方法返回时，包含收到的消息集。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.Path">
      <summary>获取相对于<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />基址的队列或主题的路径。</summary>
      <returns>表示队列或主题路径的字符串。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek">
      <summary>在不改变接收器或消息源状态的情况下读取下一条消息。</summary>
      <returns>表示要读取的下一条消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Peek(System.Int64)">
      <summary>在不改变接收器或消息源状态的情况下读取下一条消息。</summary>
      <returns>表示要读取的下一条消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="fromSequenceNumber">读取消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync">
      <summary>异步读取下一条消息，而不更改接收方或消息源的状态。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekAsync(System.Int64)">
      <summary>异步读取下一条消息，而不更改接收方或消息源的状态。</summary>
      <returns>异步操作。</returns>
      <param name="fromSequenceNumber">读取消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int32)">
      <summary>在不改变接收器或消息源状态的情况下读取下一批消息。</summary>
      <returns>要读取的批处理消息。</returns>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatch(System.Int64,System.Int32)">
      <summary>在不改变接收器或消息源状态的情况下读取下一批消息。</summary>
      <returns>要读取的批处理消息。</returns>
      <param name="fromSequenceNumber">读取批处理消息的序列号。</param>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int32)">
      <summary>异步读取下一批消息而不更改接收器或消息源的状态。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>异步读取下一批消息而不更改接收器或消息源的状态。</summary>
      <returns>异步操作。</returns>
      <param name="fromSequenceNumber">读取批处理消息的序列号。</param>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageReceiver.PrefetchCount">
      <summary>获取或设置消息接收者可以同时请求的消息数。</summary>
      <returns>消息接收者可以同时请求的消息数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive">
      <summary>从当前队列或主题接收<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.Int64)">
      <summary>从当前队列或主题接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="sequenceNumber">要接收的消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.Receive(System.TimeSpan)">
      <summary>从当前队列或主题接收<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="serverWaitTime">服务器在操作超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync">
      <summary>异步接收来自当前队列或主题的消息。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.Int64)">
      <summary>异步接收来自当前队列或主题的消息。</summary>
      <returns>异步操作。</returns>
      <param name="sequenceNumber">要接收的消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveAsync(System.TimeSpan)">
      <summary>异步接收来自当前队列或主题的消息。</summary>
      <returns>异步操作。</returns>
      <param name="serverWaitTime">服务器在操作超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>收到批消息。</summary>
      <returns>批消息。</returns>
      <param name="sequenceNumbers">序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32)">
      <summary>收到批消息。</summary>
      <returns>批消息。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。由于这是近似值，即使消息数高于<paramref name="messageCount" />，返回的消息可能更少。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>收到批消息。</summary>
      <returns>批消息。</returns>
      <param name="messageCount">要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>异步接收批消息。</summary>
      <returns>异步操作。</returns>
      <param name="sequenceNumbers">序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32)">
      <summary>异步接收批消息。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。由于这是近似值，即使消息数高于<paramref name="messageCount" />，返回的消息可能更少。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageReceiver.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>异步接收批消息。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSender">
      <summary>该 <see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />类用于从服务总线发送消息。虽然你可以使用 该<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />类发送和接收消息而不创建<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />对象，你还可以使用<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />和<see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />在实体上创建发送方和接收方，而无需清楚它是主题还是队列。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchFlushInterval">
      <summary>获取批次刷新间隔。</summary>
      <returns>批量刷新间隔。默认值为 20 毫秒。</returns>
      <exception cref="T:System.OperationCanceledException"><see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />正在关闭、已关闭或故障时，引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.BatchingEnabled">
      <summary>获取一个值，该值指示是否已启用批处理。</summary>
      <returns>如果启用了批处理，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>开始发送代理消息的异步请求。</summary>
      <returns>引用异步操作来创建队列操作的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">待发送的代理消息。</param>
      <param name="callback">引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ArgumentException">代理消息为空时，引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>开始异步请求以批量发送代理消息。</summary>
      <returns>操作的同步结果。</returns>
      <param name="messages">待发送的代理消息。</param>
      <param name="callback">引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSend(System.IAsyncResult)">
      <summary>结束异步请求以发送消息。</summary>
      <param name="result">引用 <see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)" />方法的 <see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.EndSendBatch(System.IAsyncResult)">
      <summary>结束异步请求以批量发送消息。</summary>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginCancelScheduledMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>引发一个开始取消预定消息的事件。</summary>
      <returns>操作的异步结果。</returns>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="sequenceNumbers">序列号。</param>
      <param name="timeout">操作的客户端超时值。如果持续时间超过此超时，则应中止或取消操作。</param>
      <param name="callback">操作完成时要调用的用户回调。</param>
      <param name="state">操作完成时要传递给回调的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginScheduleMessage(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调度消息时引发事件。</summary>
      <returns>操作的异步结果。</returns>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="messages">要调度的消息。</param>
      <param name="timeout">操作的客户端超时值。如果持续时间超过此超时，则应中止或取消操作。</param>
      <param name="callback">操作完成时要调用的用户回调。</param>
      <param name="state">操作完成时要传递给回调的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>允许具体实现定义发送消息时应该执行的操作。该方法不能由用户在具体类中实现。</summary>
      <returns>操作的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="messages">待发<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />对象的列表。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作的客户端超时值。如果持续时间超过此超时，则应中止或取消操作。</param>
      <param name="callback">操作完成时要调用的用户回调。</param>
      <param name="state">操作完成时要传递给回调的状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndCancelScheduledMessage(System.IAsyncResult)">
      <summary>结束取消预定消息时引发事件。</summary>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndScheduleMessage(System.IAsyncResult)">
      <summary>结束消息计划时引发事件。</summary>
      <returns>操作的结果。</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnEndSend(System.IAsyncResult)">
      <summary>执行“结束发送”操作。该方法不能由用户在具体类中实现。</summary>
      <param name="result">对<see cref="M:Microsoft.ServiceBus.Messaging.MessageSender.OnBeginSend(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan,System.AsyncCallback,System.Object)" />方法的调用创建了<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.OnSend(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.TimeSpan)">
      <summary>允许具体实现覆盖（如果需要）以同步方式发送消息时应执行的操作。</summary>
      <param name="trackingContext">跟踪上下文。</param>
      <param name="messages">待发<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />对象的列表。</param>
      <param name="timeout">操作的客户端超时值。如果持续时间超过此超时，则应中止或取消操作。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSender.Path">
      <summary>获取相对于<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />基址的队列或主题的路径。</summary>
      <returns>相对于<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />基址的队列或主题的路径。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>发送指定的代理消息。</summary>
      <param name="message">待发送的代理消息。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="message" />为空时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>异步发送指定的代理消息。</summary>
      <returns>操作的异步结果。</returns>
      <param name="message">待发送的代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>发送一组代理消息（用于批处理）。</summary>
      <param name="messages">要发送的代理消息的集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSender.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>异步发送一组代理消息（用于批处理）。</summary>
      <returns>操作的异步结果。</returns>
      <param name="messages">要发送的代理消息的集合。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSession">
      <summary>表示允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginGetState(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以设置消息会话的状态。</summary>
      <returns>引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginRenewLock(System.AsyncCallback,System.Object)">
      <summary>开始更新消息会话的锁定。</summary>
      <returns>引用异步操作以获取操作状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.BeginSetState(System.IO.Stream,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以设置消息会话的状态。</summary>
      <returns>引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="stream">获取操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndGetState(System.IAsyncResult)">
      <summary>结束异步操作以获取消息会话的状态。</summary>
      <returns>保存状态信息的流。</returns>
      <param name="result">引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndRenewLock(System.IAsyncResult)">
      <summary>开始更新消息会话的锁定。</summary>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.EndSetState(System.IAsyncResult)">
      <summary>结束异步操作以设置消息会话的状态。</summary>
      <param name="result">引用异步操作以设置消息会话状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetState">
      <summary>获取消息会话的状态。</summary>
      <returns>保存状态信息的流。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.GetStateAsync">
      <summary>异步获取消息会话的状态。</summary>
      <returns>保存状态信息的流。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LastPeekedSequenceNumber">
      <summary>获取或设置会话中最后一个查看的序列号。</summary>
      <returns>会话中最后查看的序列号。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.LockedUntilUtc">
      <summary>获取或设置解锁消息会话的日期和时间。</summary>
      <returns>要锁定消息会话的日期和时间。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>在调用 Abandon 操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnAbort">
      <summary>中止消息会话。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginAbandon(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnAbandon 或 BeginAbandon 操作时执行。</summary>
      <returns>引用异步操作以获取操作结果的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以关闭消息会话的通信对象。</summary>
      <returns>引用异步操作以关闭消息会话通信对象的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnComplete 或 BeginComplete 操作时执行。</summary>
      <returns>引用异步操作以关闭消息会话通信对象的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnDeadLetter 或 BeginDeadLetter 操作时执行。</summary>
      <returns>引用异步操作以获取操作状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="deadLetterReason">消息成为死信的原因。</param>
      <param name="deadLetterErrorDescription">消息成为死信的错误描述。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnDefer 或 BeginDefer 操作时执行。</summary>
      <returns>引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnGetState 或 BeginGetState 操作时执行。</summary>
      <returns>引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用消息接收器的 OnOpen 操作时执行。</summary>
      <returns>引用异步操作以打开消息会话通信对象的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginPeek(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int64,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnPeek 或 BeginPeek 操作时执行。</summary>
      <returns>引用异步操作以查看消息会话通信的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="fromSequenceNumber">从会话中查看的序列号。</param>
      <param name="messageCount">操作中的消息数。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 RenewLock 或 BeginRenewLock 操作时执行。</summary>
      <returns>引用异步操作以获取操作状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginRenewMessageLocks(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Boolean,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnBegin 操作以锁定消息时执行。</summary>
      <returns>引用异步操作来更新锁定消息处理的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="fromSync">开始同步。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 OnSetState 或 BeginSetState 操作时执行。</summary>
      <returns>引用异步操作以设置消息会话状态的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="stream">状态信息持久化的流。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用消息接收器的 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="receipts">服务总线分配给消息的唯一编号集。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用消息接收器的 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnBeginTryReceive2(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用消息接收器的 OnTryReceive 或 BeginTryReceive 操作时执行。</summary>
      <returns>引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间间隔。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnComplete(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.TimeSpan)">
      <summary>完成消息接收操作。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDeadLetter(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.String,System.String,System.TimeSpan)">
      <summary>调用“死信”操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnDefer(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Guid},System.Collections.Generic.IDictionary{System.String,System.Object},System.TimeSpan)">
      <summary>调用“推迟”操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="lockTokens">锁定令牌的集合绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
      <param name="timeout">操作在超时之前等待的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndAbandon(System.IAsyncResult)">
      <summary>结束异步操作以放弃消息并放弃其锁定。</summary>
      <param name="result">引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndClose(System.IAsyncResult)">
      <summary>结束异步操作以关闭消息会话的通信对象。</summary>
      <param name="result">引用异步操作以关闭消息会话通信对象的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndComplete(System.IAsyncResult)">
      <summary>执行消息接收器的“结束完成”操作。</summary>
      <param name="result">引用异步操作来完成接收消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDeadLetter(System.IAsyncResult)">
      <summary>执行消息接收方的”结束死信“操作。</summary>
      <param name="result">引用异步操作以将未发送消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndDefer(System.IAsyncResult)">
      <summary>执行消息接收方的“结束延迟”操作。</summary>
      <param name="result">引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndGetState(System.IAsyncResult)">
      <summary>在调用 OnGetState 或 EndGetState 操作时执行。</summary>
      <returns>保存状态信息的流。</returns>
      <param name="result">引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndOpen(System.IAsyncResult)">
      <summary>结束异步操作以打开消息会话的通信对象。</summary>
      <param name="result">引用异步操作以打开消息会话通信对象的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndPeek(System.IAsyncResult)">
      <summary>在调用 EndPeek 操作时执行。</summary>
      <returns>会话中的消息列表。</returns>
      <param name="result">引用异步操作以查看消息会话通信的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewLock(System.IAsyncResult)">
      <summary>执行消息接收方的 EndRenewLock 操作。</summary>
      <returns>更新锁定结束的日期和时间。</returns>
      <param name="result">引用异步操作以获取消息会话状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndRenewMessageLocks(System.IAsyncResult)">
      <summary>执行消息锁定的 EndRenew 操作。</summary>
      <returns>已锁定消息的<see cref="T:System.Collections.Generic.IEnumerable`1" />..</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndSetState(System.IAsyncResult)">
      <summary>结束异步操作以设置消息会话的状态。</summary>
      <param name="result">引用异步操作以设置消息会话状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>执行消息接收方的“结束尝试接收”操作。</summary>
      <returns>如果成功，则为 true；如果失败，则为 false。</returns>
      <param name="result">引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</param>
      <param name="messages">此方法返回时，包含已接收的消息集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnEndTryReceive2(System.IAsyncResult,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>执行消息接收方的“结束尝试接收”操作。</summary>
      <returns>如果成功，则为 true；如果失败，则为 false。</returns>
      <param name="result">引用异步操作来尝试接收消息的<see cref="T:System.IAsyncResult" />。</param>
      <param name="messages">此方法返回时，包含已接收的消息集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnGetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>在调用 GetState 操作时执行。</summary>
      <returns>保存状态信息的流。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="timeout">获取操作在超时之前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnRenewLock(Microsoft.ServiceBus.Tracing.TrackingContext,System.TimeSpan)">
      <summary>执行消息锁定的 RenewLock 操作。</summary>
      <returns>操作在超时之前等待的时间跨度。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnSetState(Microsoft.ServiceBus.Tracing.TrackingContext,System.IO.Stream,System.TimeSpan)">
      <summary>在调用 SetState 操作时执行。</summary>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="stream">状态信息持久化的流。</param>
      <param name="timeout">设置操作超时前等待的时间间隔。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Collections.Generic.IEnumerable{System.Int64},System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>尝试消息接收操作。</summary>
      <returns>如果接收操作成功，则为 true；否则为 false。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="receipts">服务总线分配给消息的唯一编号集。</param>
      <param name="timeout">操作在超时之前等待的时间间隔。</param>
      <param name="messages"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />对象的集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.OnTryReceive(Microsoft.ServiceBus.Tracing.TrackingContext,System.Int32,System.TimeSpan,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage}@)">
      <summary>尝试消息接收操作。</summary>
      <returns>如果接收操作成功，则为 true；否则为 false。</returns>
      <param name="trackingContext">跟踪此操作的事务关联的上下文信息。</param>
      <param name="messageCount">尝试接收的消息数。</param>
      <param name="serverWaitTime">操作在超时之前等待的时间间隔。</param>
      <param name="messages"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" /> 对象的集合。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.Path">
      <summary>获取相对于<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />基址的队列或主题的路径。</summary>
      <returns>表示队列或主题路径的字符串。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.PrefetchCount">
      <summary>获取或设置消息接收者可以同时请求的消息数。</summary>
      <returns>消息接收者可以同时请求的消息数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLock">
      <summary>指定主机更新其对消息的锁定的时间段。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果 <see cref="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient" /> 为 true，您可以立即重试操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">您可以立即重试该操作。</exception>
      <exception cref="T:System.TimeoutException">您可以立即重试该操作。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">如果消息来自<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />，引发异常而不是 <see cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException" />。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.RenewLockAsync">
      <summary>指定主机更新其对消息的锁定的时间段。</summary>
      <returns>被锁定的主机。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessageSession.SessionId">
      <summary>获取或设置消息会话标识符。</summary>
      <returns>消息会话标识符。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetState(System.IO.Stream)">
      <summary>设置消息会话的状态。</summary>
      <param name="stream">状态信息持久化的流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSession.SetStateAsync(System.IO.Stream)">
      <summary>异步设置消息会话的状态。</summary>
      <returns>消息会话的状态。</returns>
      <param name="stream">状态信息持久化的流。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler">
      <summary>表示与消息会话关联的异步处理程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发会话异步关闭时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">已关闭会议。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>表示会话具有代理消息时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.Microsoft#ServiceBus#Messaging#IMessageSessionAsyncHandler#OnSessionLostAsync(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="exception">发生了导致丢失会话的异常。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnCloseSessionAsync(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发会话异步关闭时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">已关闭会议。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnMessageAsync(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>表示会话具有代理消息时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="session">消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionAsyncHandler.OnSessionLostAsync(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="exception">发生了导致丢失会话的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler">
      <summary>表示与消息会话关联的处理程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessageSessionHandler" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发会话关闭时发生的事件。</summary>
      <param name="session">已关闭会议。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>表示会话具有代理消息时发生的事件。</summary>
      <param name="session">消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.Microsoft#ServiceBus#Messaging#IMessageSessionHandler#OnSessionLost(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <param name="exception">发生了导致丢失会话的异常。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnCloseSession(Microsoft.ServiceBus.Messaging.MessageSession)">
      <summary>引发会话关闭时发生的事件。</summary>
      <param name="session">已关闭会议。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnMessage(Microsoft.ServiceBus.Messaging.MessageSession,Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>表示会话具有代理消息时发生的事件。</summary>
      <param name="session">消息会话。</param>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSessionHandler.OnSessionLost(System.Exception)">
      <summary>引发会话丢失时发生的事件。</summary>
      <param name="exception">发生了导致丢失会话的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException">
      <summary>表示当邮件大小超过允许的最大容量时发生的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String)">
      <summary>初始化一个新的具有指定异常消息的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" />实例。</summary>
      <param name="message">与异常关联的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageSizeExceededException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的具有指定异常消息以及导致异常的错误的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSizeExceededException" />实例。</summary>
      <param name="message">与异常关联的消息。</param>
      <param name="innerException">导致当前异常的错误。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageState">
      <summary>枚举消息状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Active">
      <summary>指定活动消息状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Deferred">
      <summary>指定延迟消息状态。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessageState.Scheduled">
      <summary>指定计划的消息状态。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException">
      <summary>信令消息存储锁丢失错误而引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessageStoreLockLostException" />类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException">
      <summary>引发异常以指示消息传递通信错误。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" />类的新实例。</summary>
      <param name="communicationPath">通信路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingCommunicationException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingCommunicationException" />类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">
      <summary>信令消息存储实体已存在错误而引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String)">
      <summary>初始化一个新的具有实体名称的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" />实例。</summary>
      <param name="entityName">实体的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException" />类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关异常的数据填充序列化信息。</summary>
      <param name="info">有关引发异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException">
      <summary>信令消息传递实体禁用错误的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" />类的新实例。</summary>
      <param name="entityName">引发异常的实体名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityDisabledException" />类的新实例。</summary>
      <param name="message">有关异常的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">
      <summary>信令消息存储实体未发现错误而引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String)">
      <summary>初始化一个新的具有实体名称的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" />实例。</summary>
      <param name="entityName">实体的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException" />类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException.ToString">
      <summary>返回当前异常的字符串表示形式。</summary>
      <returns>当前异常的字符串表示形式。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingException">
      <summary>表示为发送消息传递错误而引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化一个新的具有序列化信息和流上下文的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" />实例。</summary>
      <param name="info">序列化信息。</param>
      <param name="context">流式上下文。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Boolean,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" />类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="isTransientError">如果异常是暂时的，则为 true；否则为 false。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingException" />类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Data">
      <summary>获取与异常关联的数据。</summary>
      <returns>与异常关联的数据。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Detail">
      <summary>获取或设置消息传递异常的详细信息。</summary>
      <returns>消息传递异常的详细信息。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>使用有关异常的数据填充序列化信息。</summary>
      <param name="info">有关引发异常的序列化对象数据。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.IsTransient">
      <summary>获取或设置一个值，该值指示异常是否是瞬态的。检查此属性以确定是否应重试该操作。</summary>
      <returns>如果异常是暂时的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingException.Timestamp">
      <summary>获取或设置发生消息传递异常的时间。</summary>
      <returns>消息传递异常发生的时间。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail">
      <summary>提供消息传递异常的详细信息。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.CorrelationFiltersExceeded(System.String)">
      <summary>返回超出相关筛选器错误的异常详细信息。</summary>
      <returns>相关筛选器的异常详细信息超出了错误。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityConflict(System.String)">
      <summary>返回实体冲突错误的异常详细信息。</summary>
      <returns>实体冲突错误的异常详细信息。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityGone(System.String)">
      <summary>返回实体消失的异常详细信息。</summary>
      <returns>实体出现错误的异常详细信息。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityNotFound(System.String)">
      <summary>返回实体未找到错误的异常详细信息。</summary>
      <returns>未找到实体的异常详细信息错误。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.EntityUpdateConflict(System.String)">
      <summary>返回实体更新冲突错误的异常详细信息。</summary>
      <returns>实体更新冲突错误的异常详细信息。</returns>
      <param name="entityName">实体的名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorCode">
      <summary>获取错误代码。</summary>
      <returns>错误代码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevel">
      <summary>获取错误级别。</summary>
      <returns>其中一个<see cref="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType" />枚举值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.Message">
      <summary>获取有关异常的描述性消息。</summary>
      <returns>关于异常的描述性消息。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ServerBusy(System.String)">
      <summary>返回服务器繁忙错误的异常详细信息。</summary>
      <returns>服务器繁忙错误的异常详细信息。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SqlFiltersExceeded(System.String)">
      <summary>返回超出 SQL 筛选器错误的异常详细信息。</summary>
      <returns>SQL 筛选器的异常详细信息超出了错误。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.StoreLockLost(System.String)">
      <summary>返回存储锁定丢失错误的异常详细信息。</summary>
      <returns>存储锁定的异常详细信息丢失了错误。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.SubscriptionsExceeded(System.String)">
      <summary>返回订阅超出错误的异常详细信息。</summary>
      <returns>订阅的异常详细信息超出了错误。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnknownDetail(System.String)">
      <summary>返回未知详细信息错误的异常详细信息。</summary>
      <returns>未知详细信息错误的异常详细信息。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.UnspecifiedInternalError(System.String)">
      <summary>返回未指定的内部错误的异常详细信息。</summary>
      <returns>未指定内部错误的异常详细信息。</returns>
      <param name="message">关于异常的描述性消息。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType">
      <summary>枚举消息传递通信的错误级别类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.ServerError">
      <summary>指定服务器错误。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.MessagingExceptionDetail.ErrorLevelType.UserError">
      <summary>指定用户错误。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactory">
      <summary>表示消息传递工厂。这是用于在队列、主题或订阅之间发送和接收的运行时操作的定位标记。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession">
      <summary>返回服务命名空间中所有启用会话的订阅和队列中的可用会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSession(System.TimeSpan)">
      <summary>返回服务命名空间中所有启用会话的订阅和队列中的可用会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">处理时间超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync">
      <summary>异步返回服务命名空间中所有启用会话的订阅和队列中的可用会话。</summary>
      <returns>表示接受消息会话的异步操作的任务实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>异步返回服务命名空间中所有启用会话的订阅和队列中的可用会话。</summary>
      <returns>表示接受消息会话的异步操作的任务实例。</returns>
      <param name="timeout">处理时间超时。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.Address">
      <summary>获取消息传递工厂的基址。</summary>
      <returns>一个表示消息传递工厂基址的 URI。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">操作超时。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.String},System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="addresses">命名空间基址的枚举。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> 为空或无效。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> 为空。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.String,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" /> 为空或无效。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="credential" /> 为空。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,Microsoft.ServiceBus.TokenProvider,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)" />委托。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreate(System.Uri,System.AsyncCallback,System.Object)">
      <summary>开始创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>引用异步创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" /> 操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户提供的对象，其中包含有关“创建”操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.AsyncCallback,System.Object)">
      <summary>开始创建消息接收方。</summary>
      <returns>引用异步创建消息接收方的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityPath">实体的路径。</param>
      <param name="receiveMode">接收模式。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageReceiver(System.String,System.AsyncCallback,System.Object)">
      <summary>开始创建消息接收方。</summary>
      <returns>引用异步创建消息接收方的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityPath">实体的路径。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.AsyncCallback,System.Object)">
      <summary>开始创建消息发送方。</summary>
      <returns>引用异步创建消息接收器的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityPath">实体的路径。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginCreateMessageSender(System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>开始创建消息发送方。</summary>
      <returns>引用异步创建消息接收器的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="transferDestinationEntityPath">传输目标实体路径。</param>
      <param name="viaEntityPath">via-entity 路径。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.BeginPairNamespace(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始命名空间配对。</summary>
      <returns>操作的异步结果。</returns>
      <param name="options">配对选项。</param>
      <param name="timeout">配对超时。</param>
      <param name="callback">异步配对回调。</param>
      <param name="state">配对状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create">
      <summary>创建新的消息传递工厂对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String})">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">基址的枚举。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">基址的枚举。</param>
      <param name="factorySettings">出厂设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">基址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">地址的枚举。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">地址的枚举。</param>
      <param name="factorySettings">出厂设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="addresses">地址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">服务命名空间的基址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">服务命名空间的基址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <exception cref="T:System.UriFormatException"><paramref name="address" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="factorySettings" />或<paramref name="address" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">命名空间的基址。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.UriFormatException"><paramref name="address" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="tokenProvider" />或<paramref name="address" />为空时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">命名空间基地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="address" />或<paramref name="factorySettings" />完整时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.Create(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>创建新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="address">命名空间的基址。</param>
      <param name="tokenProvider">令牌提供者。</param>
      <exception cref="T:System.ArgumentException"><paramref name="address" /> 包含附加到服务命名空间的完整地址的路径。</exception>
      <exception cref="T:System.ArgumentNullException"><paramref name="tokenProvider" />或<paramref name="address" />为空时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">基址的枚举。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">基址的枚举。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.String},Microsoft.ServiceBus.TokenProvider)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">基址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri})">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">地址的枚举。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">地址的枚举。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Collections.Generic.IEnumerable{System.Uri},Microsoft.ServiceBus.TokenProvider)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="addresses">地址的枚举。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">服务命名空间的基址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">服务命名空间的基址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.String,Microsoft.ServiceBus.TokenProvider)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">服务命名空间的基址。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">命名空间基地址。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="factorySettings"><see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />设置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateAsync(System.Uri,Microsoft.ServiceBus.TokenProvider)">
      <summary>异步创建新的消息传递工厂对象。</summary>
      <returns>表示异步创建操作的任务实例。</returns>
      <param name="address">命名空间基地址。</param>
      <param name="tokenProvider">令牌提供者。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateFromConnectionString(System.String)">
      <summary>创建一个来自连接字符串的新的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="connectionString">连接字符串。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String)">
      <summary>创建一个消息接收方。</summary>
      <returns>新创建的消息接收方。</returns>
      <param name="entityPath">实体的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建一个消息接收方。</summary>
      <returns>新创建的消息接收方。</returns>
      <param name="entityPath">实体的路径。</param>
      <param name="receiveMode">接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String)">
      <summary>异步创建消息接收方。</summary>
      <returns>表示异步创建消息接收方操作的任务实例。</returns>
      <param name="entityPath">实体的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageReceiverAsync(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>异步创建消息接收方。</summary>
      <returns>表示异步创建消息接收方操作的任务实例。</returns>
      <param name="entityPath">实体的路径。</param>
      <param name="receiveMode">接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String)">
      <summary>创建消息发件方。</summary>
      <returns>新创建的消息发件方。</returns>
      <param name="entityPath">实体的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSender(System.String,System.String)">
      <summary>创建消息发件方。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />对象。</returns>
      <param name="transferDestinationEntityPath">传输目标实体路径。</param>
      <param name="viaEntityPath">via-entity 路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String)">
      <summary>异步创建邮件发件方。</summary>
      <returns>表示异步创建消息发送方操作的任务实例。</returns>
      <param name="entityPath">实体的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateMessageSenderAsync(System.String,System.String)">
      <summary>异步创建邮件发件方。</summary>
      <returns>表示异步创建消息发送方操作的任务实例。</returns>
      <param name="transferDestinationEntityPath">传输目标实体路径。</param>
      <param name="viaEntityPath">via-entity 路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String)">
      <summary>创建一个新的队列客户端。</summary>
      <returns>新创建的队列客户端。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> 长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />对象初始化超时时间。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:System.OperationCanceledException">工厂已经关闭或中止。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建一个新的队列客户端。</summary>
      <returns>新创建的队列客户端。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="receiveMode">接收模式。</param>
      <exception cref="T:System.ArgumentException"><paramref name="path" /> 为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="path" /> 长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />对象初始化超时时间。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:System.OperationCanceledException">工厂已经关闭或中止。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String)">
      <summary>创建订阅客户端。</summary>
      <returns>新建的订阅客户端。</returns>
      <param name="topicPath">相对于服务命名空间的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <exception cref="T:System.ArgumentException">已提供的<paramref name="topicPath" />为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="topicPath" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />对象初始化超时时间。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:System.OperationCanceledException">工厂已经关闭或中止。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建一个新的订阅客户端。</summary>
      <returns>新建的订阅客户端。</returns>
      <param name="topicPath">相对于服务命名空间的主题路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="receiveMode">接收模式。</param>
      <exception cref="T:System.ArgumentException">已提供的<paramref name="topicPath" />为无效或为空。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="topicPath" />的长度大于 <see cref="F:Microsoft.ServiceBus.Messaging.Constants.TopicNameMaximumLength" />。</exception>
      <exception cref="T:System.TimeoutException">操作超时。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />对象初始化超时时间。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:System.OperationCanceledException">工厂已经关闭或中止。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.CreateTopicClient(System.String)">
      <summary>创建一个新的主题客户端。</summary>
      <returns>新建的主题客户端。</returns>
      <param name="path">相对于服务命名空间基址的主题路径。</param>
      <exception cref="T:System.ArgumentNullException">已提供的<paramref name="path" />为空。</exception>
      <exception cref="T:System.TimeoutException">操作超时。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />对象初始化超时时间。如果超时值相对较小，您可能需要增加<see cref="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">发生内部错误或意外异常。</exception>
      <exception cref="T:System.OperationCanceledException">工厂已经关闭或中止。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>结束接受<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>已结束的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreate(System.IAsyncResult)">
      <summary>结束创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的异步请求。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象。</returns>
      <param name="result">引用创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />对象的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageReceiver(System.IAsyncResult)">
      <summary>结束创建消息接收方。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />对象。</returns>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndCreateMessageSender(System.IAsyncResult)">
      <summary>结束创建邮件发件方。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />对象。</returns>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.EndPairNamespace(System.IAsyncResult)">
      <summary>结束命名空间配对。</summary>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.GetSettings">
      <summary>检索消息传递工厂的设置副本。</summary>
      <returns>消息传递工厂设置的副本。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAbort">
      <summary>执行中止操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan)">
      <summary>执行接受消息会话。</summary>
      <returns>执行的消息会话。</returns>
      <param name="receiveMode">消息接收模式。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
      <param name="timeout">操作超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>执行接受会话接收方操作。</summary>
      <returns>引用异步接受消息接收方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="sessionId">会话标识符。</param>
      <param name="receiveMode">消息接收模式。</param>
      <param name="timeout">操作超时前的等待时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptMessageSession(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行开始接受消息会话操作。</summary>
      <returns>操作的异步结果。</returns>
      <param name="receiveMode">接收模式。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
      <param name="timeout">操作超时。</param>
      <param name="callback">异步回调。</param>
      <param name="state">会话状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginAcceptSessionReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行开始接受会话接收方操作。</summary>
      <returns>引用异步接受消息接收方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="sessionId">会话标识符。</param>
      <param name="receiveMode">消息接收模式。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行开始关闭操作。</summary>
      <returns>引用异步关闭操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="timeout">超时。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建消息接收方”操作。</summary>
      <returns>引用异步创建消息接收方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="receiveMode">消息接收模式。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建消息发送方”操作。</summary>
      <returns>引用异步创建消息发送方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="transferDestinationEntityName">传输目标实体的名称。</param>
      <param name="viaEntityName">via-entity 名称。</param>
      <param name="timeout">超时。</param>
      <param name="callback">回调消息。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnBeginCreateMessageSender(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建消息发送方”操作。</summary>
      <returns>引用异步创建消息发送方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="timeout">超时。</param>
      <param name="callback">回调。</param>
      <param name="state">状态。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnClose(System.TimeSpan)">
      <summary>执行关闭操作。</summary>
      <param name="timeout">超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan)">
      <summary>执行创建消息接收方操作。</summary>
      <returns>引用异步创建消息接收方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="receiveMode">消息接收模式。</param>
      <param name="timeout">超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.String,System.TimeSpan)">
      <summary>执行创建消息发送方操作。</summary>
      <returns>已执行的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />操作。</returns>
      <param name="transferDestinationEntityName">传输目标实体的名称。</param>
      <param name="viaEntityName">via-entity 名称。</param>
      <param name="timeout">消息超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateMessageSender(System.String,System.TimeSpan)">
      <summary>执行创建消息发送方操作。</summary>
      <returns>引用异步创建消息发送方操作的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="entityName">实体的名称。</param>
      <param name="timeout">超时。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateQueueClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>执行“创建队列客户端”操作。</summary>
      <returns>新创建的队列客户端。</returns>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
      <param name="receiveMode">接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>执行“创建订阅客户端”操作。</summary>
      <returns>新创建的订阅客户端。</returns>
      <param name="subscriptionPath">订阅路径。</param>
      <param name="receiveMode">接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateSubscriptionClient(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>执行“创建订阅客户端”操作。</summary>
      <returns>新创建的订阅客户端。</returns>
      <param name="topicPath">订阅相对于服务命名空间基址的路径。</param>
      <param name="name">订阅的名称。</param>
      <param name="receiveMode">接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnCreateTopicClient(System.String)">
      <summary>执行“创建主题客户端”操作。</summary>
      <returns>新建的主题客户端。</returns>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>执行“结束接受消息会话”操作。</summary>
      <returns>已执行的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />操作。</returns>
      <param name="result">操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndAcceptSessionReceiver(System.IAsyncResult)">
      <summary>执行“结束接受消息接收方”操作。</summary>
      <returns>已执行的<see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />对象。</returns>
      <param name="result">存储状态信息以及此异步操作的任何用户定义数据的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndClose(System.IAsyncResult)">
      <summary>执行“结束关闭”操作。</summary>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageReceiver(System.IAsyncResult)">
      <summary>执行“结束创建消息接收方”操作。</summary>
      <returns>已执行的<see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />操作。</returns>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.OnEndCreateMessageSender(System.IAsyncResult)">
      <summary>执行“结束创建消息发收方”操作。</summary>
      <returns>已执行的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />操作。</returns>
      <param name="result">结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactory.PairNamespaceAsync(Microsoft.ServiceBus.Messaging.PairedNamespaceOptions)">
      <summary>异步配对命名空间。</summary>
      <returns>操作的结果。</returns>
      <param name="options">配对选项。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactory.PrefetchCount">
      <summary>获取或设置消息接收者可以同时请求的消息数。</summary>
      <returns>消息接收者可以同时请求的消息数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings">
      <summary>表示消息传递工厂设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.#ctor(Microsoft.ServiceBus.Messaging.MessagingFactorySettings)">
      <summary>初始化一个新的包含克隆用指定消息工厂的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />实例。</summary>
      <param name="other">指定的消息传递工厂设置。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.AmqpTransportSettings">
      <summary>获取或设置高级消息队列协议 (AMQP) 的传输设置。</summary>
      <returns>高级消息队列协议 (AMQP) 的传输设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.Clone">
      <summary>创建<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />的副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.EnableAdditionalClientTimeout">
      <summary>获取或设置一个值，该值指示消息传递操作是否启用其他客户端超时。</summary>
      <returns>如果消息传递操作启用了额外的客户端超，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.NetMessagingTransportSettings">
      <summary>获取或设置网络消息传递所需的传输设置。</summary>
      <returns>网络消息传递所需的传输设置。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Collections.Generic.IEnumerable{System.Uri},System.AsyncCallback,System.Object)">
      <summary>执行异步开始创建工厂操作。</summary>
      <returns>引用创建工厂的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="uriAddresses">统一资源标识符的集合。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnBeginCreateFactory(System.Uri,System.AsyncCallback,System.Object)">
      <summary>执行异步开始创建工厂操作。</summary>
      <returns>引用创建工厂的异步请求的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="uri">统一资源标识符。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OnEndCreateFactory(System.IAsyncResult)">
      <summary>结束创建工厂的异步请求。</summary>
      <returns>新创建的消息工厂。</returns>
      <param name="result">引用创建工厂的异步请求的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout">
      <summary>获取或设置指定在超时之前完成消息传递时间的 <see cref="T:System.TimeSpan" />。</summary>
      <returns>该 <see cref="T:System.TimeSpan" /> 指定在超时之前消息传递操作必须完成的时间。默认值为一分钟。</returns>
      <exception cref="T:System.ArgumentNullException">设置为空；例如，可空<see cref="T:System.TimeSpan" />。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">已设定为零或负 <see cref="T:System.TimeSpan" />。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TokenProvider">
      <summary>获取或设置出厂设置的令牌提供程序。</summary>
      <returns>出厂设置的令牌提供程序。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.TransportType">
      <summary>获取或设置消息传输类型。</summary>
      <returns>消息传输类型。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding">
      <summary>表示用于网络消息传递的绑定。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />类的新实例。</summary>
      <param name="configurationName">用于初始化的配置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingBinding.CreateBindingElements">
      <summary>返回当前绑定中包含的有序绑定元素集合。</summary>
      <returns>包含<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />描述的绑定元素的有序堆栈的<see cref="T:System.ServiceModel.Channels.BindingElementCollection" />。绑定元素从下到上的顺序是传输、编码和安全性。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.MaxBufferPoolSize">
      <summary>获取或设置存储绑定处理的 TCP 消息的缓冲池的最大允许尺寸。</summary>
      <returns>存储绑定处理的 TCP 消息的缓冲池的最大允许尺寸。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.PrefetchCount">
      <summary>获取或设置消息接收方可以提前获取的消息数。</summary>
      <returns>消息接收方可以提前获取的消息数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.Scheme">
      <summary>获取使用此绑定配置的通道和侦听器的 URI 传输方案。</summary>
      <returns>使用此绑定配置的通道和侦听器的 URI 传输方案。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.SessionIdleTimeout">
      <summary>获取或设置时间跨度值，该值指定会话在超时之前等待的休止时间。</summary>
      <returns>时间跨度值指定会话在超时之前等待的休止时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingBinding.TransportSettings">
      <summary>获取或设置网络消息的传输设置。</summary>
      <returns>网络消息的传输设置。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement">
      <summary>表示用于指定用于服务总线上传输消息的网络消息传输的绑定元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>建立一个通道工厂。</summary>
      <returns>通道工厂实现的接口。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="TChannel">通道的类型。</typeparam>
      <exception cref="T:System.ArgumentException">当 Tchannel 不是受支持的通道类型时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.BuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>构建一个通道监听器。</summary>
      <returns>已实施 <see cref="T:System.ServiceModel.Channels.IChannelListener`1" /> 接口。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="TChannel">通道的类型。</typeparam>
      <exception cref="T:System.ArgumentException">当 Tchannel 不是受支持的通道类型时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelFactory``1(System.ServiceModel.Channels.BindingContext)">
      <summary>查询绑定元素是否可以构建通道工厂。</summary>
      <returns>如果绑定元素可以为特定类型的通道构建通道工厂，则为 true；否则为 false。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">通道的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">上下文为空时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.CanBuildChannelListener``1(System.ServiceModel.Channels.BindingContext)">
      <summary>查询绑定元素是否可以构建通道侦听器。</summary>
      <returns>如果绑定元素可以为特定类型的通道构建通道侦听器，则返回 true；否则返回 false。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">通道的类型。</typeparam>
      <exception cref="T:System.ArgumentNullException">上下文为空时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Clone">
      <summary>制作此绑定元素的深度副本。</summary>
      <returns>此绑定元素的副本。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.GetProperty``1(System.ServiceModel.Channels.BindingContext)">
      <summary>获取特定的绑定元素属性。</summary>
      <returns>绑定元素属性。</returns>
      <param name="context">绑定上下文。</param>
      <typeparam name="T">通过类参数。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.PrefetchCount">
      <summary>获取或设置预取的数量。</summary>
      <returns>预取的数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.Scheme">
      <summary>获取传输的 URI 方案。</summary>
      <returns>传输的 URI 方案。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.SessionIdleTimeout">
      <summary>获取或设置时间跨度值，该值指定会话在超时之前等待的休止时间。</summary>
      <returns>时间跨度值。默认值为 1 分钟。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IPolicyExportExtension#ExportPolicy(System.ServiceModel.Description.MetadataExporter,System.ServiceModel.Description.PolicyConversionContext)">
      <summary>导出自定义策略断言。</summary>
      <param name="exporter">可用于修改导出过程的 MetadataExporter 对象。</param>
      <param name="context">可用于插入自定义策略断言的 PolicyConversionContext 对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportContract(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlContractConversionContext)">
      <summary>将自定义 Web 服务描述语言 (WSDL) 元素写入生成的合同 WSDL。</summary>
      <param name="exporter">导出合同信息的 WsdlExporter 对象。</param>
      <param name="context">提供从导出的 WSDL 元素到合同描述的映射。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.System#ServiceModel#Description#IWsdlExportExtension#ExportEndpoint(System.ServiceModel.Description.WsdlExporter,System.ServiceModel.Description.WsdlEndpointConversionContext)">
      <summary>将自定义 Web 服务描述语言 (WSDL) 元素写入生成的端点 WSDL。</summary>
      <param name="exporter">导出端点信息的 WsdlExporter 对象。</param>
      <param name="context">提供从导出的 WSDL 元素到端点描述的映射。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportBindingElement.TransportSettings">
      <summary>获取或设置网络消息的传输设置。</summary>
      <returns>网络消息的传输设置。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings">
      <summary>表示.NET 消息传输设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.BatchFlushInterval">
      <summary>获取或设置批刷新间隔。</summary>
      <returns>批量刷新间隔。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.Clone">
      <summary>制作此对象的深度副本。</summary>
      <returns>此对象的副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.NetMessagingTransportSettings.EnableRedirect">
      <summary>获取一个值，该值指示是否启用了消息重定向。</summary>
      <returns>如果启用了消息重定向，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">
      <summary>订阅匹配导致不匹配时引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String)">
      <summary>初始化一个新的包含错误消息的<see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />实例。</summary>
      <param name="message">有关异常的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的包含错误消息和内部异常的<see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />实例。</summary>
      <param name="message">有关异常的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException.ToString">
      <summary>返回<see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />的字符串表示形式。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException" />的字符串表示形式。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.OnMessageOptions">
      <summary>提供使用<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" /> 和 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})" />处理的消息崩相关的选项。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.OnMessageOptions.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoComplete">
      <summary>获取或设置一个值，该值指示消息泵是否应该在回调已完成处理后在消息上调用<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)" />或<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)" />。</summary>
      <returns>true 表示成功执行操作后自动完成消息处理；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.AutoRenewTimeout">
      <summary>获取或设置会话自动续订所需的时间。</summary>
      <returns>会话自动续订所需的时间。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.OnMessageOptions.ExceptionReceived">
      <summary>收到异常时发生。使您能够收到消息泵遇到的任何错误的通知。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.OnMessageOptions.MaxConcurrentCalls">
      <summary>获取或设置消息泵应启动的回调的最大并发调用数。</summary>
      <returns>回调的最大并发调用数。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException">
      <summary>表示已配对的消息传递工厂发生的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.PairedMessagingFactoryException" />类的新实例。</summary>
      <param name="message">异常消息。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs">
      <summary>表示与服务总线消息传递的配对命名空间关联的事件参数。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceEventArgs.Options">
      <summary>获取或设置与配对命名空间关联的选项。</summary>
      <returns>与配对命名空间关联的选项。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions">
      <summary>表示服务总线消息传递的配对命名空间的选项。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" />类的新实例。</summary>
      <param name="secondaryNamespaceManager">辅助命名空间管理器。</param>
      <param name="secondaryMessagingFactory">与配对命名空间关联的辅助消息传递工厂。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.TimeSpan)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions" />类的新实例。</summary>
      <param name="secondaryNamespaceManager">辅助命名空间管理器。</param>
      <param name="secondaryMessagingFactory">与配对命名空间关联的辅助消息传递工厂。</param>
      <param name="failoverInterval">消息 <see cref="T:System.TimeSpan" /> 间隔故障转移。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.ClearPairing">
      <summary>解散配对命名空间的配对。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.FailoverInterval">
      <summary>获取消息 <see cref="T:System.TimeSpan" /> 间隔故障转移。</summary>
      <returns>消息 <see cref="T:System.TimeSpan" /> 间隔故障转移。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.OnNotifyPrimarySendResult(System.String,System.Boolean)">
      <summary>在发送结果时通知主消息。</summary>
      <param name="path">路径的字符串。</param>
      <param name="success">如果结果成功发送，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryMessagingFactory">
      <summary>获取与配对命名空间关联的辅助消息传递工厂。</summary>
      <returns>与配对命名空间关联的辅助消息传递工厂。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.PairedNamespaceOptions.SecondaryNamespaceManager">
      <summary>获取管理实体的对象，例如配对命名空间中的队列、主题、订阅和规则。</summary>
      <returns>管理实体的对象，例如配对命名空间中的队列、主题、订阅和规则。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException">
      <summary>为信令分区而不是拥有错误而抛出的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">描述异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的具有指定错误消息的类和内部异常引用的<see cref="T:Microsoft.ServiceBus.Messaging.PartitionNotOwnedException" />实例。</summary>
      <param name="message">描述异常原因的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties">
      <summary>表示推送通知服务的凭证属性。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.PnsCredentialProperties.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.PnsCredentialProperties" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueClient">
      <summary>表示队列客户端对象。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid)">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid)">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>丢弃的消息。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>丢弃的消息。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession">
      <summary>接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String)">
      <summary>接受允许使用给定会话标识符对相关消息进行分组以在单个事务中进行处理的消息会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>接受一个消息会话，该会话允许使用给定的会话标识符和等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" /> 不是一个 TimeSpan 正值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSession(System.TimeSpan)">
      <summary>接受一个消息会话，该会话允许使用指定的服务器等待时间对相关消息进行分组以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" /> 不是一个 TimeSpan 正值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<paramref name="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync">
      <summary>异步接受允许在单个事务中对相关消息进行分组以进行处理的消息会话。</summary>
      <returns>异步操作的结果。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String)">
      <summary>异步接受一个消息会话，该消息会话允许使用给定的会话标识符对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>异步操作的结果。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>异步接受一个消息会话，该消息会话允许使用给定的会话标识符和等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>异步操作的结果。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>异步接受一个消息会话，该消息会话允许使用指定的服务器等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>异步操作的结果。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="timeout">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" /> 不是一个 TimeSpan 正值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" /> 不是一个 TimeSpan 正值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<paramref name="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息的处理。</summary>
      <returns>引用异步操作来完成处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息批处理。</summary>
      <returns>引用异步操作来完成处理批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockTokens">与批处理中的锁定消息关联的锁定令牌。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停处理消息。</summary>
      <returns>引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.ServiceBusMessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停处理消息。</summary>
      <returns>引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取消息会话。</summary>
      <returns>引用异步操作以获取消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取消息会话。</summary>
      <returns>引用异步操作以获取消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">上次更新的日期和时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看消息。</summary>
      <returns>引用异步操作来查看消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看消息。</summary>
      <returns>引用异步操作来查看消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="fromSequenceNumber">查看消息的序列号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看批消息。</summary>
      <returns>引用异步操作以查看批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">要查看的消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看批消息。</summary>
      <returns>引用异步操作以查看批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="fromSequenceNumber">查看批消息的序列号。</param>
      <param name="messageCount">要查看的消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">服务总线分配给消息的唯一编号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" />是负值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理消息。</summary>
      <returns>引用异步操作以检索批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">与批处理中的消息关联的序列号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理消息。</summary>
      <returns>引用异步操作以检索批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理消息。</summary>
      <returns>引用异步操作以检索批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器在超时之前等待批消息到达的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以发送消息。</summary>
      <returns>引用异步操作来发送消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">待发送的消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化超时时间。如果超时值相对较小，可能需要增加<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="BrokeredMessage" />为空时引发异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 QueueClient 已发送<paramref name="message" />或<see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" />已发送一次，则引发异常。</exception>
      <exception cref="T:System.NotSupportedException">如果我们指向的主题/订阅不支持发送操作，则引发异常。也就是说，Deadletter 队列不支持发送操作。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以发送消息批处理。</summary>
      <returns>引用异步操作来发送批消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messages">待发送的消息批处理。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Complete(System.Guid)">
      <summary>完成消息的处理。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过设置的超时值，则引发异常 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteAsync(System.Guid)">
      <summary>异步完成消息的处理。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>完成消息批处理。</summary>
      <param name="lockTokens">与批处理中的锁定消息关联的锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>异步完成消息批处理。</summary>
      <returns>异步操作。</returns>
      <param name="lockTokens">与批处理中的锁定消息关联的锁定令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String)">
      <summary>使用指定路径创建新的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="path">路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Create(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建具有指定路径和模式的新的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="path">路径。</param>
      <param name="mode">模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String)">
      <summary>使用指定路径从连接字符串创建新的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="connectionString">使用的连接字符串。</param>
      <param name="path">路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateFromConnectionString(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>使用指定路径和模式从连接字符串创建新的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />副本。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.QueueClient" />。</returns>
      <param name="connectionString">连接字符串。</param>
      <param name="path">路径。</param>
      <param name="mode">模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过设置的超时值，则引发异常 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过设置的超时值，则引发异常 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid)">
      <summary>暂停处理消息。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过设置的超时值，则引发异常 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>暂停处理消息。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid)">
      <summary>异步挂起消息的处理。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步挂起消息的处理。</summary>
      <returns>异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改消息的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAbandon(System.IAsyncResult)">
      <summary>完成异步操作以放弃消息并放弃锁定。</summary>
      <param name="result">表示异步放弃消息操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>完成异步操作以接受消息会话，该消息会话允许对相关消息进行分组以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">表示异步接受消息会话操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndComplete(System.IAsyncResult)">
      <summary>完成异步操作以完成消息的处理。</summary>
      <param name="result">引用异步操作来完成处理消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>完成异步操作以完成消息批处理。</summary>
      <param name="result">引用异步操作来完成处理批消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDeadLetter(System.IAsyncResult)">
      <summary>完成异步操作以将消息移动到死信队列。</summary>
      <param name="result">表示异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndDefer(System.IAsyncResult)">
      <summary>完成异步操作以暂停处理消息。</summary>
      <param name="result">表示异步操作以暂停处理消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>结束异步操作以获取消息会话。</summary>
      <returns>消息会话。</returns>
      <param name="result">引用异步操作以获取消息会话的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeek(System.IAsyncResult)">
      <summary>结束异步操作以查看消息。</summary>
      <returns>代理消息。</returns>
      <param name="result">表示异步操作以查看消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndPeekBatch(System.IAsyncResult)">
      <summary>结束异步操作以查看批消息。</summary>
      <returns>批消息。</returns>
      <param name="result">表示异步操作以查看批消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceive(System.IAsyncResult)">
      <summary>完成异步操作以接收消息。</summary>
      <returns>返回<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">表示异步操作以接受消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>完成异步操作以接收消息批处理。</summary>
      <returns>消息批处理。</returns>
      <param name="result">引用异步操作以检索批消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSend(System.IAsyncResult)">
      <summary>完成异步操作以发送消息。</summary>
      <param name="result">表示异步操作以发送消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.EndSendBatch(System.IAsyncResult)">
      <summary>完成异步操作以发送消息批处理。</summary>
      <param name="result">引用异步操作来发送批消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.FormatDeadLetterPath(System.String)">
      <summary>从指定的死信队列路径构建格式名称。</summary>
      <returns>为构建指定死信队列路径的格式名称而生成的<see cref="T:System.String" />。</returns>
      <param name="queuePath">死信队列的路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions">
      <summary>获取消息会话，使您可以浏览队列上的会话。</summary>
      <returns>消息会话。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessions(System.DateTime)">
      <summary>自<paramref name="lastUpdatedTime" />会话状态更新结束后检索所有消息会话。</summary>
      <returns>消息会话。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync">
      <summary>异步获取消息会话，使您可以浏览队列上的会话。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>自<paramref name="lastUpdatedTime" />会话状态更新结束后异步检索所有消息会话。</summary>
      <returns>异步操作。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.MessagingFactory">
      <summary>获取或设置消息传递工厂。</summary>
      <returns>消息工厂。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Mode">
      <summary>处理收到的消息时获取消息接收模式。</summary>
      <returns>处理已收到的消息时的消息<see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnAbort">
      <summary>在调用 Abort 事件时执行。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginAcceptMessageSession 操作时执行。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="receiveMode">使用接收消息处理时的接收模式。</param>
      <param name="serverWaitTime">服务器等待时间。</param>
      <param name="timeout">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>调用 Close 操作时执行。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="timeout">关闭操作超时前的最长时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndClose 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建接收方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="receiveMode">消息 <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> 接收模式。</param>
      <param name="timeout">此操作超时前的最长时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建接收方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateReceiver" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="subQueueName">子队列的名称。</param>
      <param name="receiveMode">消息 <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" /> 接收模式。</param>
      <param name="timeout">此操作超时前的最长时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建发送方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="timeout">此操作超时前的最长时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateSender(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>执行 BeginGetMessageSessions 操作。</summary>
      <returns>引用异步操作以获取消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">上次更新的日期和时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnClose(System.TimeSpan)">
      <summary>在调用 Close 操作时执行。</summary>
      <param name="timeout">关闭操作超时前的最长时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>在调用 EndAcceptMessageSession 操作时执行。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">表示异步接受消息会话操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndClose(System.IAsyncResult)">
      <summary>执行“结束关闭”操作。</summary>
      <param name="result">异步<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.AcceptSessionReceiver" />操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>执行“结束创建接收方”操作。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />对象。</returns>
      <param name="result">异步<see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.EndCreateReceiver(System.IAsyncResult)" />操作的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>执行“结束创建发送方”操作。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />对象。</returns>
      <param name="result">引用 <see cref="M:Microsoft.ServiceBus.Messaging.QueueClient.CreateSender" /> 的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>执行“结束获取消息”操作。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">会话的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>在事件驱动的消息泵中处理消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>使用给定的一组<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项处理事件驱动的消息泵中的消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
      <param name="onMessageOptions">指定用于实例化消息泵的<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>异步处理消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>异步处理消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
      <param name="onMessageOptions">调用消息选项。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.Path">
      <summary>获取或设置队列的完整路径名。</summary>
      <returns>相对于<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactory" />基址的队列路径。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek">
      <summary>返回而不删除队列中的第一条消息。</summary>
      <returns>代理消息。返回所有属性和消息正文。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Peek(System.Int64)">
      <summary>返回而不删除队列中的第一条消息。</summary>
      <returns>代理消息。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync">
      <summary>异步返回而不删除队列中的第一条消息。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekAsync(System.Int64)">
      <summary>异步返回而不删除队列中的第一条消息。</summary>
      <returns>异步操作。</returns>
      <param name="fromSequenceNumber">从哪里查看消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int32)">
      <summary>查看批消息。</summary>
      <returns>批消息已查看。返回所有属性和消息正文。</returns>
      <param name="messageCount">消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatch(System.Int64,System.Int32)">
      <summary>查看批消息。</summary>
      <returns>批消息已查看。</returns>
      <param name="fromSequenceNumber">浏览批消息的起点。</param>
      <param name="messageCount">消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int32)">
      <summary>异步查看批消息。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>异步查看批消息。</summary>
      <returns>异步操作。</returns>
      <param name="fromSequenceNumber">从哪里查看批消息的序列号。</param>
      <param name="messageCount">消息量。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueClient.PrefetchCount">
      <summary>获取或设置队列接收方可以同时请求的消息数。</summary>
      <returns>队列接收方可以同时请求的消息数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。如果没有可用的消息，则该方法返回空，您可以稍后重试该操作。</returns>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果消息接收操作超时，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果发生 I/O 或安全性错误，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">如果与该操作关联的消息传递实体不存在或已被删除，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果用户代码执行了一些意外操作，或者服务总线网关关闭，则引发异常。检查异常消息以了解实际错误。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.Int64)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。如果没有可用的消息，则该方法返回空，您可以稍后重试该操作。</returns>
      <param name="sequenceNumber">要接收的延迟消息的序列号。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Receive(System.TimeSpan)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。如果没有可用的消息，则该方法返回空，您可以稍后重试该操作。</returns>
      <param name="serverWaitTime">服务器在超时之前等待接收消息的时间跨度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" />是负值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果消息接收操作超时，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果发生 I/O 或安全性错误，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">如果与该操作关联的消息传递实体不存在或已被删除，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果用户代码执行了一些意外操作，或者服务总线网关关闭，则引发异常。检查异常消息以了解实际错误。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>异步操作。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.Int64)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>异步操作。</returns>
      <param name="sequenceNumber">要接收的延迟消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveAsync(System.TimeSpan)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>异步操作。</returns>
      <param name="serverWaitTime">服务器在超时之前等待接收消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>收到批处理消息。</summary>
      <returns>消息批处理。</returns>
      <param name="sequenceNumbers">与批处理中的消息关联的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32)">
      <summary>收到批处理消息。</summary>
      <returns>消息批处理。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。由于这是近似值，即使消息数高于<paramref name="messageCount" />，返回的消息可能更少。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>收到批处理消息。</summary>
      <returns>消息批处理。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器在超时之前等待批消息到达的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>异步接收批处理消息。</summary>
      <returns>异步操作。</returns>
      <param name="sequenceNumbers">与批处理中的消息关联的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32)">
      <summary>异步接收批处理消息。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。由于这是近似值，即使消息数高于<paramref name="messageCount" />，返回的消息可能更少。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>异步接收批处理消息。</summary>
      <returns>异步操作。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器在超时之前等待批消息到达的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type)">
      <summary>使用特定类型注册会话处理程序。</summary>
      <param name="handlerType">处理程序类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>使用特定类型和处理程序选项注册会话处理程序。</summary>
      <param name="handlerType">处理程序类型。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>异步注册具有特定类型的会话处理程序。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="handlerType">处理程序类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>使用特定类型和处理程序选项异步注册会话处理程序。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="handlerType">处理程序类型。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>使用指定的选项注册消息会话处理程序工厂。</summary>
      <param name="factory">待注册的处理程序工厂。</param>
      <param name="options">处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>使用指定的选项注册消息会话处理程序工厂。</summary>
      <param name="factory">待注册的处理程序工厂。</param>
      <param name="options">处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>异步注册消息会话处理程序工厂。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="factory">待注册的处理程序工厂。</param>
      <param name="options">处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>异步注册消息会话处理程序工厂。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="factory">待注册的处理程序工厂。</param>
      <param name="options">处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />发送消息。</summary>
      <param name="message">待发送的消息。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化超时时间。如果超时值相对较小，可能需要增加<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="BrokeredMessage" />为空时引发异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 QueueClient 已发送<paramref name="message" />或<see cref="T:Microsoft.ConnectedServices.Sdk.Client.MessageSender" />已发送一次，则引发异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果指向的主题/订阅不支持发送操作，则引发异常。也就是说，Deadletter 队列不支持发送操作。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果发生 I/O 或安全性错误，则引发异常。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">序列化或反序列化期间发生错误时引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">如果队列不存在，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果发生消息传递错误，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />异步发送消息。</summary>
      <returns>异步操作。</returns>
      <param name="message">待发送的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>发送一组代理消息（用于批处理）。</summary>
      <param name="messages">要发送的代理消息的集合。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>异步发送一组代理消息（用于批处理）。</summary>
      <returns>异步操作。</returns>
      <param name="messages">要发送的代理消息的集合。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QueueDescription">
      <summary>表示队列的元数据描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QueueDescription.#ctor(System.String)">
      <summary>初始化一个新的具有指定相对路径的<see cref="T:Microsoft.ServiceBus.Messaging.QueueDescription" />实例。</summary>
      <param name="path">队列相对于服务命名空间基址的路径。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AccessedAt">
      <summary>获取上次发送消息的时间，或上次出现此队列接收请求的时间。</summary>
      <returns>上次发送消息的时间，或上次出现此队列接收请求的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Authorization">
      <summary>获取 <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AutoDeleteOnIdle">
      <summary>获取或设置 <see cref="T:System.TimeSpan" /> 空闲间隔，在此之后自动删除队列。最短持续时间为 5 分钟。</summary>
      <returns>队列空闲时间跨度上的自动删除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.AvailabilityStatus">
      <summary>获取队列的实体可用性状态。</summary>
      <returns>队列的实体可用性状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.CreatedAt">
      <summary>获取消息的创建时间。</summary>
      <returns>消息创建的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DefaultMessageTimeToLive">
      <summary>获取或设置实时值的默认消息时间。这是消息到期的持续时间，从消息发送到服务总线开始。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> 未在消息本身上发送时使用该默认值。超过 TimeToLive 值的消息将到期，不再保留在消息存储中。订阅者将无法接收到期消息。消息的 TimeToLive 值可能低于此处指定的值，但默认情况下，TimeToLive 设置为 <see cref="T:System.TimeSpan.MaxValue" />。因此，此属性将成为应用于邮件的默认使用时间值。</summary>
      <returns>默认消息使用时间值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>获取或设置定义重复检测历史的持续时间的<see cref="T:System.TimeSpan" />结构。默认值为 10 分钟。</summary>
      <returns>表示复制检测历史记录的时间窗口的<see cref="T:System.TimeSpan" />结构。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableBatchedOperations">
      <summary>获取或设置一个值，该值指示是否启用了服务器端批处理操作。</summary>
      <returns>如果已启用批处理操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>获取或设置一个值，该值指示当消息过期时此队列是否具有死信支持。</summary>
      <returns>如果队列在消息到期时具有死信支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnableExpress">
      <summary>获取或设置是否允许跨多个消息代理对队列进行分区。快速队列在将消息写入持久存储之前暂时将消息保存在内存中。</summary>
      <returns>如果允许队列能够跨多个消息代理进行分区，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.EnablePartitioning">
      <summary>获取或设置一个值，该值指示是否启用了跨多个消息代理分区的队列。</summary>
      <returns>如果要启用跨多个消息代理分区的队列，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardDeadLetteredMessagesTo">
      <summary>获取或设置转发死信消息的收件方的路径。</summary>
      <returns>转发死信消息的收件方的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.ForwardTo">
      <summary>获取或设置转发消息的收件方的路径。</summary>
      <returns>转发消息的收件方的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.IsAnonymousAccessible">
      <summary>获取或设置一个值，该值指示消息是否可匿名访问。</summary>
      <returns>如果消息可匿名访问，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration">
      <summary>获取或设置查看锁定的持续时间;也就是说，为其他接收方锁定消息的时间量。<see cref="P:Microsoft.ServiceBus.Messaging.QueueDescription.LockDuration" />最大值是 5 分钟；默认值为 1 分钟。</summary>
      <returns>锁定的持续时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxDeliveryCount">
      <summary>获取或设置最大传递计数。在此次传递后，消息将自动解冻。</summary>
      <returns>最大传递数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MaxSizeInMegabytes">
      <summary>获取或设置队列的最大大小（以兆字节为单位），即为队列分配的内存大小。</summary>
      <returns>队列的最大大小（以兆字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCount">
      <summary>获取队列中的消息数。</summary>
      <returns>消息数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.MessageCountDetails">
      <summary>获取队列的消息详细信息。</summary>
      <returns>返回<see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />，其中包含活动消息数、死信、预定消息、传输到其他队列的消息、订阅或主题以及传输到死信队列的消息数。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.QueueDescription.MessageTimeToLiveDefaultValue">
      <summary>指定实时默认值的消息时间。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Path">
      <summary>获取或设置队列的名称。</summary>
      <returns>队列的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresDuplicateDetection">
      <summary>获取或设置指示此队列是否需要重复检测的值。</summary>
      <returns>如果此队列需要重复检测，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.RequiresSession">
      <summary>获取或设置一个值，该值指示队列是否支持会话的概念。</summary>
      <returns>如果接收方应用程序只能通过<see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />从队列接收，则为 true；如果队列无法使用<see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />，则返回 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SizeInBytes">
      <summary>获取队列的大小（以字节为单位）。</summary>
      <returns>队列的大小。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.Status">
      <summary>获取或设置队列的当前状态（启用或禁用）。禁用实体时，该实体无法发送或接收消息。</summary>
      <returns>队列的当前状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.SupportOrdering">
      <summary>获取或设置一个值，该值指示队列是否支持排序。</summary>
      <returns>如果队列支持排序，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UpdatedAt">
      <summary>获取消息更新的确切时间。</summary>
      <returns>消息更新的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.QueueDescription.UserMetadata">
      <summary>获取或设置用户元数据。</summary>
      <returns>用户元数据。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.QuotaExceededException">
      <summary>信令配额超额错误异常异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>初始化一个新的具有序列化数据的<see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" />实例。</summary>
      <param name="info">包含有关异常的序列化信息的对象。</param>
      <param name="context">有关源或目标的上下文信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.QuotaExceededException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.QuotaExceededException" />类的新实例，其具有指定的错误消息以及对作为此异常原因的内部异常的引用。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ReceiveMode">
      <summary>枚举接收模式的值。默认为 <see cref="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock" />。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.PeekLock">
      <summary>指定 PeekLock 接收模式。这是<see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />的默认值。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ReceiveMode.ReceiveAndDelete">
      <summary>指定 ReceiveAndDelete 接收模式。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RelayDescription">
      <summary>表示中继描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RelayDescription.#ctor(System.String,Microsoft.ServiceBus.RelayType)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.RelayDescription" />类的新实例。</summary>
      <param name="relayPath">中继路径。</param>
      <param name="type">中继类型。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Authorization">
      <summary>获取 <see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.AuthorizationRules" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CollectionName">
      <summary>获取或设置与中继关联的集合名称。</summary>
      <returns>与中继关联的集合名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.CreatedAt">
      <summary>获取或设置创建中继的确切时间。</summary>
      <returns>创建中继的确切时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.IsDynamic">
      <summary>获取或设置中继是否为动态。</summary>
      <returns>如果中继是动态的，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.ListenerCount">
      <summary>获取或设置此中继的侦听器数。</summary>
      <returns>此中继的侦听器数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.Path">
      <summary>获取或设置中继路径。</summary>
      <returns>中继路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RelayType">
      <summary>获取或设置中继类型。</summary>
      <returns>中继类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresClientAuthorization">
      <summary>获取或设置此中继是否需要客户端授权。</summary>
      <returns>如果此中继需要客户端授权，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.RequiresTransportSecurity">
      <summary>获取或设置此中继是否需要传输安全性。</summary>
      <returns>如果此中继需要传输安全性，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UpdatedAt">
      <summary>获取或设置中继更新的日期。</summary>
      <returns>中继更新的日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RelayDescription.UserMetadata">
      <summary>获取或设置与此实例关联的用户元数据。</summary>
      <returns>与此实例关联的用户元数据。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleAction">
      <summary>表示转换已由筛选器表达式匹配的消息所允许的过滤器操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>在提供的 BrokeredMessage 上执行筛选器操作。</summary>
      <returns>执行规则操作后修改的 BrokeredMessage。</returns>
      <param name="message">输入 BrokeredMessage。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Preprocess">
      <summary>预处理 <see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />对象。</summary>
      <returns>预处理的<see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />对象。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.RequiresPreprocessing">
      <summary>获取一个值，该值指示规则操作是否需要预处理。</summary>
      <returns>如果规则操作需要预处理，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleAction.System#Runtime#Serialization#IExtensibleDataObject#ExtensionData">
      <summary>获取或设置包含额外数据的对象。</summary>
      <returns>包含额外数据的对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleAction.Validate">
      <summary>验证针对语法的规则操作。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleActionException">
      <summary>信令筛选器操作出错引发异常，筛选器相关操作失败时引发异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String)">
      <summary>初始化一个新的包含指定缓冲区大小的<see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" />实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleActionException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和导致此异常原因的内部异常的引用初始化新的<see cref="T:Microsoft.ServiceBus.Messaging.RuleActionException" />类实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.RuleDescription">
      <summary>表示规则的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor">
      <summary>初始化一个新的具有默认值的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(Microsoft.ServiceBus.Messaging.Filter)">
      <summary>初始化一个新的具有指定筛选器表达式的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />实例。</summary>
      <param name="filter">用于匹配消息的筛选器表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />类的新实例，其具有指定名称。</summary>
      <param name="name">规则的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.RuleDescription.#ctor(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>初始化一个新的具有指定名称和筛选器表达式的<see cref="T:Microsoft.ServiceBus.Messaging.RuleDescription" />实例。</summary>
      <param name="name">规则的名称。</param>
      <param name="filter">用于匹配消息的筛选器表达式。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Action">
      <summary>获取或设置在消息满足筛选表达式时要执行的操作。</summary>
      <returns>如果消息满足筛选表达式，则执行的操作。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.CreatedAt">
      <summary>获取规则的创建时间。</summary>
      <returns>规则的创建时间。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.RuleDescription.DefaultRuleName">
      <summary>指定默认规则的名称。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Filter">
      <summary>获取或设置用于匹配消息的筛选器表达式。</summary>
      <returns>用于匹配消息的筛选器表达式。</returns>
      <exception cref="T:System.ArgumentNullException">分配空（在 Visual Basic 中没有任何内容）。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.RuleDescription.Name">
      <summary>获取或设置规则名称。</summary>
      <returns>返回一个表示规则名称的<see cref="T:System.String" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException">
      <summary>表示在发送可用性积压工作期间发生的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityBacklogException" />类的新实例。</summary>
      <param name="message">与异常关联的消息。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException">
      <summary>表示在发送消息传递的可用性期间发生的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException.#ctor(System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityMessagingException" />类的新实例。</summary>
      <param name="innerException">导致异常的错误。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions">
      <summary>表示发送配对命名空间的可用性的选项。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" />类的新实例。</summary>
      <param name="secondaryNamespaceManager">辅助命名空间管理器。</param>
      <param name="messagingFactory">消息工厂。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" />类的新实例。</summary>
      <param name="secondaryNamespaceManager">辅助命名空间管理器。</param>
      <param name="messagingFactory">消息工厂。</param>
      <param name="backlogQueueCount">积压队列的数量。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.#ctor(Microsoft.ServiceBus.NamespaceManager,Microsoft.ServiceBus.Messaging.MessagingFactory,System.Int32,System.TimeSpan,System.Boolean)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions" />类的新实例。</summary>
      <param name="secondaryNamespaceManager">辅助命名空间管理器。</param>
      <param name="messagingFactory">消息工厂。</param>
      <param name="backlogQueueCount">积压队列的数量。</param>
      <param name="failoverInterval">故障转移间隔。</param>
      <param name="enableSyphon">true 表示启用虹吸；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.BacklogQueueCount">
      <summary>获取或设置积压队列的数量。</summary>
      <returns>积压队列的数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.EnableSyphon">
      <summary>获取或设置是否为此实例启用了虹吸。</summary>
      <returns>如果为此实例启用了虹吸，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.MarkPathHealthy(System.String)">
      <summary>将路径标记为正常。</summary>
      <param name="path">要标记的路径。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SendAvailabilityPairedNamespaceOptions.PingPrimaryInterval">
      <summary>获取或设置 ping 的间隔。</summary>
      <returns>ping 的间隔。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ServerBusyException">
      <summary>使用逻辑操作重载服务器时引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.ServerBusyException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的具有指定错误消息的类和内部异常引用的<see cref="T:Microsoft.ServiceBus.Messaging.ServerBusyException" />实例。</summary>
      <param name="message">描述异常原因的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException">
      <summary>消息无法获取会话锁定时引发的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" />类的新实例，其具有指定的错误消息。</summary>
      <param name="message">描述异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException.#ctor(System.String,System.Exception)">
      <summary>初始化一个新的具有指定错误消息的类和内部引用的<see cref="T:Microsoft.ServiceBus.Messaging.SessionCannotBeLockedException" />实例。</summary>
      <param name="message">描述异常原因的错误消息。</param>
      <param name="innerException">内部异常是当前异常的原因。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions">
      <summary>表示会话处理程序的选项。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SessionHandlerOptions" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoComplete">
      <summary>获取或设置是否启用会话处理程序的自动完成选项。</summary>
      <returns>如果启用了会话处理程序的自动完成选项，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.AutoRenewTimeout">
      <summary>获取或设置会话更新其状态之前所需的时间。</summary>
      <returns>会话更新之前所需的时间。</returns>
    </member>
    <member name="E:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.ExceptionReceived">
      <summary>在会话处理期间发生异常时出现。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MaxConcurrentSessions">
      <summary>获取或设置现有会话的最大数量。</summary>
      <returns>现有会话的最大数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SessionHandlerOptions.MessageWaitTimeout">
      <summary>获取或设置消息等待到期之前所需的时间。</summary>
      <returns>消息等待到期之前所需的时间。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SessionLockLostException">
      <summary>引发信号会话锁定丢失错误的异常。在分区消息传递实体的情况下，分区有时会移动以实现跨服务总线节点的负载平衡；例如，当节点重新启动或添加新节点以共享负载时。发生这种情况时，会话锁定可能会丢失，但消息永远不会丢失。如果在会话锁定后分区移动，则确认/完成消息处理调用将失败，因为锁定已丢失。但是，该消息仍然存在，您可以尝试再次读取。因此，您可能会收到一个<see cref="T:Microsoft.ServiceBus.Messaging.SessionLockLostException" />异常，即使消息本身没有丢失。在这种情况下，您可以重试消息处理操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String)">
      <summary>使用指定的错误消息初始化 SessionLockLostException 类的新实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SessionLockLostException.#ctor(System.String,System.Exception)">
      <summary>使用指定的错误消息和导致此异常原因的内部异常的引用初始化新的 SessionLockLostException 类实例。</summary>
      <param name="message">解释异常原因的错误消息。</param>
      <param name="innerException">导致当前异常的异常。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule">
      <summary>定义共享访问操作的授权规则。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" />类的新实例。</summary>
      <param name="keyName">授权规则密钥名称。</param>
      <param name="rights">权限列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" />类的新实例。</summary>
      <param name="keyName">授权规则密钥名称。</param>
      <param name="primaryKey">授权规则的主密钥。</param>
      <param name="rights">权限列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.#ctor(System.String,System.String,System.String,System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule" />类的新实例。</summary>
      <param name="keyName">授权规则密钥名称。</param>
      <param name="primaryKey">授权规则的主密钥。</param>
      <param name="secondaryKey">授权规则的辅助密钥。</param>
      <param name="rights">权限列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Equals(System.Object)">
      <summary>确定指定的对象是否等于当前对象。</summary>
      <returns>如果指定的对象等于当前对象，则为 true；否则为 false。</returns>
      <param name="obj">要与当前对象进行比较的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GenerateRandomKey">
      <summary>生成授权规则的随机密钥。</summary>
      <returns>授权规则的随机密钥。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.GetHashCode">
      <summary>返回此实例的哈希代码。</summary>
      <returns>此实例的散列码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.KeyName">
      <summary>获取或设置授权规则密钥名称。</summary>
      <returns>授权规则密钥名称。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.OnValidate">
      <summary>检查授权规则的有效性。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.PrimaryKey">
      <summary>获取或设置授权规则的主密钥。</summary>
      <returns>授权规则的主密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.SecondaryKey">
      <summary>获取或设置授权规则的辅助密钥。</summary>
      <returns>授权规则的辅助密钥。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.Serializer">
      <summary>与授权规则关联的序列化程序。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SharedAccessAuthorizationRule.ValidateRights(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.AccessRights})">
      <summary>检查指定访问权限的有效性。</summary>
      <param name="value">要检查的访问权限。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlFilter">
      <summary>表示筛选器，该筛选器是表达式的组成，以及在 pub/sub 管道中执行的操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.#ctor(System.String)">
      <summary>初始化一个新的使用指定 SQL 表达式的<see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />实例。</summary>
      <param name="sqlExpression">SQL 表达式。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.CompatibilityLevel">
      <summary>此属性保留供将来使用。显示兼容级的整数值，当前硬编码为 20。</summary>
      <returns>兼容级别。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>指定消息是否与当前 SQL 表达式匹配。</summary>
      <returns>true 表示消息与当前 SQL 表达式匹配；否则为 false。</returns>
      <param name="message">BrokeredMessage。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.Parameters">
      <summary>设置筛选器表达式的值。</summary>
      <returns>筛选器表达式的值。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Preprocess">
      <summary>获取预处理的筛选器表达式。</summary>
      <returns>预处理的筛选器表达式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.RequiresPreprocessing">
      <summary>获取一个值，该值指示 SQL 筛选器表达式是否需要预处理。</summary>
      <returns>如果 SQL 筛选器表达式需要预处理，则为 true；否则为 false。目前始终返回 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlFilter.SqlExpression">
      <summary>获取 SQL 表达式。</summary>
      <returns>SQL 表达式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.ToString">
      <summary>返回<see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />字符串表示形式。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SqlFilter" />字符串表示形式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlFilter.Validate">
      <summary>验证 SQL 表达式。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SqlRuleAction">
      <summary>表示针对<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />基于 SQL 语言的语法写入的一组操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String)">
      <summary>初始化一个新的包含指定 SQL 表达式的<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />实例。</summary>
      <param name="sqlExpression">SQL 表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.#ctor(System.String,System.Int32)">
      <summary>初始化一个新的包含指定 SQL 表达式和兼容级的<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />实例。</summary>
      <param name="sqlExpression">SQL 表达式。</param>
      <param name="compatibilityLevel">保留供将来使用。显示兼容级别的整数值。目前硬编码为 20。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.CompatibilityLevel">
      <summary>此属性保留供将来使用。显示兼容级的整数值，当前硬编码为 20。</summary>
      <returns>显示兼容级别的整数值</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Execute(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>执行<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />对象。</summary>
      <returns>经过处理的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />对象。</returns>
      <param name="message">将应用<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</param>
      <exception cref="T:System.InvalidOperationException">当操作对当前状态无效时引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.Parameters">
      <summary>设置规则操作的值。</summary>
      <returns>规则操作的值。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Preprocess">
      <summary>获取预处理的<see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />表达式。</summary>
      <returns>预处理的<see cref="T:Microsoft.ServiceBus.Messaging.RuleAction" />表达式。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">当规则操作语句无效或超过允许的最大操作数时，引发该异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.RequiresPreprocessing">
      <summary>获取一个指示<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />是否需要预处理的值。</summary>
      <returns>如果 SQL 规则操作需要预处理，则为 true；否则为 false。目前始终返回 true。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SqlRuleAction.SqlExpression">
      <summary>获取 SQL 表达式。</summary>
      <returns>SQL 表达式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.ToString">
      <summary>返回<see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />字符串表示形式。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SqlRuleAction" />字符串表示形式。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SqlRuleAction.Validate">
      <summary>对照 SQL 92 语法和规则验证 SQL 表达式。</summary>
      <exception cref="T:Microsoft.ServiceBus.Messaging.RuleActionException">当规则操作语句无效或超过允许的最大操作数时，引发该异常。</exception>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionClient">
      <summary>表示与主题订阅相关的运行时操作中使用的定位标记。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid)">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Abandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>丢弃消息并放弃消息锁定所有权。</summary>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改的属性对象集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid)">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>表示异步放弃操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AbandonAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步丢弃消息并放弃消息锁定所有权。</summary>
      <returns>表示异步放弃操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改的属性对象集。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession">
      <summary>接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String)">
      <summary>接受允许使用给定会话标识符对相关消息进行分组以在单个事务中进行处理的消息会话。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.String,System.TimeSpan)">
      <summary>接受一个消息会话，该会话允许使用给定的会话标识符和等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 serverWaitTime 不是正 TimeSpan 值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSession(System.TimeSpan)">
      <summary>接受一个消息会话，该会话允许使用指定的服务器等待时间对相关消息进行分组以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 serverWaitTime 不是正 TimeSpan 值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync">
      <summary>异步接受一个消息会话，该消息会话允许使用指定的服务器等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>表示异步接受消息会话操作的任务实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String)">
      <summary>异步接受一个消息会话，该消息会话允许使用指定的服务器等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>表示异步接受消息会话操作的任务实例。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.String,System.TimeSpan)">
      <summary>异步接受一个消息会话，该消息会话允许使用指定的服务器等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>表示异步接受消息会话操作的任务实例。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AcceptMessageSessionAsync(System.TimeSpan)">
      <summary>异步接受一个消息会话，该消息会话允许使用指定的服务器等待时间对相关消息进行分组，以便在单个事务中进行处理。</summary>
      <returns>表示异步接受消息会话操作的任务实例。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的规则说明添加新规则到<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" />。</summary>
      <param name="description">提供要添加的规则的元数据的规则说明。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="description" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="description.Name" />超过 50 个字符限制时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">如果规则名称与该订阅已存在的<paramref name="description.Name" />相同，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">尝试添加另一个与已添加的规则同名的规则时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的名称和筛选器表达式向当前订阅添加规则。</summary>
      <param name="ruleName">要添加的规则名称。</param>
      <param name="filter">与消息匹配的筛选器表达式。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="filter" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="ruleName" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ruleName" />超过 50 个字符限制时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">如果规则名称与该订阅已存在的<paramref name="ruleName" />相同，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">尝试添加另一个与已添加的规则同名的规则时引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(Microsoft.ServiceBus.Messaging.RuleDescription)">
      <summary>使用指定的规则说明异步添加新规则至<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" />。</summary>
      <returns>表示异步添加规则操作的任务实例。</returns>
      <param name="description">提供要添加的规则的元数据的规则说明。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRuleAsync(System.String,Microsoft.ServiceBus.Messaging.Filter)">
      <summary>使用指定的名称和筛选器表达式向当前订阅异步添加规则。</summary>
      <returns>表示异步添加规则操作的任务实例。</returns>
      <param name="ruleName">要添加的规则名称。</param>
      <param name="filter">与消息匹配的筛选器表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>引用异步操作以放弃消息并放弃锁定的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAbandon(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以放弃消息并放弃锁定。</summary>
      <returns>放弃消息并放弃锁定的异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到要放弃的锁定消息实例。</param>
      <param name="propertiesToModify">待修改的属性对象集。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过设置的超时值，则引发异常 <see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" /></exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="timeout">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentException">如果 sessionId 为无效、空或空格，则引发该异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 serverWaitTime 不是正 TimeSpan 值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<paramref name="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAcceptMessageSession(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接受消息会话。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 serverWaitTime 不是正 TimeSpan 值，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="serverWaitTime" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端已经关闭、中止或处理，则引发该异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以向订阅添加新规则。</summary>
      <returns>引用异步操作以向订阅添加新规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="description">提供要添加的规则的元数据的规则说明。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="description" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="description.Name" />超过 50 个字符限制时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">如果规则名称与该订阅已存在的<paramref name="description.Name" />相同，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginAddRule(System.String,Microsoft.ServiceBus.Messaging.Filter,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以向订阅添加新规则。</summary>
      <returns>引用异步操作以向订阅添加新规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="ruleName">要添加的规则名称。</param>
      <param name="filter">与消息匹配的筛选器表达式。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentNullException"><paramref name="filter" />为空时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="ruleName" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="ruleName" />超过 50 个字符限制时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityAlreadyExistsException">如果规则名称与该订阅已存在的<paramref name="ruleName" />相同，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginComplete(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息的处理。</summary>
      <returns>引用异步操作来完成处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginCompleteBatch(System.Collections.Generic.IEnumerable{System.Guid},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以完成消息的处理。</summary>
      <returns>完成消息处理的异步操作。</returns>
      <param name="lockTokens">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>将消息移动到死信队列的异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改的属性对象集。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDeadLetter(System.Guid,System.String,System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以将消息移动到死信队列。</summary>
      <returns>引用异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停处理消息。</summary>
      <returns>引用异步操作来暂停处理消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginDefer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以暂停处理消息。</summary>
      <returns>用于暂停处理消息的异步操作。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">待修改的属性对象集。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取消息会话。</summary>
      <returns>获取消息会话的异步操作。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以获取消息会话。</summary>
      <returns>获取消息会话的异步操作。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以返回而不删除队列中的第一条消息。</summary>
      <returns>用于查看队列中消息的异步操作。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeek(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以返回而不删除队列中的第一条消息。</summary>
      <returns>用于查看队列中消息的异步操作。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看批处理。</summary>
      <returns>查看批处理的异步操作。</returns>
      <param name="messageCount">批处理中的消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginPeekBatch(System.Int64,System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以查看批处理。</summary>
      <returns>查看批处理的异步操作。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
      <param name="messageCount">批处理中的消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.Int64,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumber">服务总线分配给消息的唯一编号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceive(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收消息。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" />是负值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sequenceNumbers">服务总线分配给消息的唯一编号。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginReceiveBatch(System.Int32,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以接收批处理。</summary>
      <returns>引用异步操作以接收消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="serverWaitTime">等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.BeginRemoveRule(System.String,System.AsyncCallback,System.Object)">
      <summary>开始异步删除规则操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> 的<see cref="T:System.IAsyncResult" />对象。</returns>
      <param name="ruleName">规则的名称。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)" />委托。</param>
      <exception cref="MessagingEntityNotFoundException">当规则不存在时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Complete(System.Guid)">
      <summary>完成消息的处理。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteAsync(System.Guid)">
      <summary>异步完成消息的处理。</summary>
      <returns>表示异步完成操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatch(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>完成批处理。</summary>
      <param name="lockTokens">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CompleteBatchAsync(System.Collections.Generic.IEnumerable{System.Guid})">
      <summary>异步完成批处理。</summary>
      <returns>表示异步完成批处理操作的任务实例。</returns>
      <param name="lockTokens">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String)">
      <summary>创建一个新的具有指定名称和主题路径的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />副本。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />的新副本。</returns>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Create(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建一个新的具有指定名称、主题路径和模式的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />副本。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />的新副本。</returns>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="name">订阅的名称。</param>
      <param name="mode">消息接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String)">
      <summary>创建一个新的来自连接字符串且具有指定主题路径和模式的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />副本。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />的新副本。</returns>
      <param name="connectionString">连接字符串。</param>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="name">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateFromConnectionString(System.String,System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)">
      <summary>创建一个新的来自连接字符串且具有指定主题路径、名称和模式的<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />副本。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionClient" />的新副本。</returns>
      <param name="connectionString">连接字符串。</param>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="name">订阅的名称。</param>
      <param name="mode">消息接收模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetter(System.Guid,System.String,System.String)">
      <summary>将未传递的消息移动到死信队列。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>表示异步死信操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>表示异步死信操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeadLetterAsync(System.Guid,System.String,System.String)">
      <summary>异步将未传递的消息移动到死信队列。</summary>
      <returns>表示异步死信操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="deadLetterReason">破坏成为死信的原因。</param>
      <param name="deadLetterErrorDescription">使消息成为死信的错误信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid)">
      <summary>暂停处理消息。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <exception cref="T:System.TimeoutException">如果操作超过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessageLockLostException">如果<paramref name="lockToken" />表示的消息丢失了消息锁定，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Defer(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>暂停处理消息。</summary>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid)">
      <summary>异步挂起消息的处理。</summary>
      <returns>表示异步延迟操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.DeferAsync(System.Guid,System.Collections.Generic.IDictionary{System.String,System.Object})">
      <summary>异步挂起消息的处理。</summary>
      <returns>表示异步延迟操作的任务实例。</returns>
      <param name="lockToken">锁定令牌绑定到锁定的消息实例。</param>
      <param name="propertiesToModify">要修改的属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAbandon(System.IAsyncResult)">
      <summary>完成异步操作以放弃消息并放弃锁定。</summary>
      <param name="result">表示异步放弃消息操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAcceptMessageSession(System.IAsyncResult)">
      <summary>完成异步操作以接受消息会话，该消息会话允许对相关消息进行分组以便在单个事务中进行处理。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">表示异步接受消息会话操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndAddRule(System.IAsyncResult)">
      <summary>结束异步添加规则操作。</summary>
      <param name="result">引用 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.AddRule(Microsoft.ServiceBus.Messaging.RuleDescription)" /> 的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndComplete(System.IAsyncResult)">
      <summary>完成异步操作以完成消息的处理。</summary>
      <param name="result">表示异步完成消息处理操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCompleteBatch(System.IAsyncResult)">
      <summary>完成异步操作以完成批处理。</summary>
      <param name="result">表示异步完成消息处理操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDeadLetter(System.IAsyncResult)">
      <summary>完成异步操作以将消息移动到死信队列。</summary>
      <param name="result">表示异步操作以将消息移动到死信队列的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndDefer(System.IAsyncResult)">
      <summary>完成异步操作以暂停处理消息。</summary>
      <param name="result">表示异步操作以暂停处理消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndGetMessageSessions(System.IAsyncResult)">
      <summary>完成异步操作以获取消息的处理。</summary>
      <returns>获取消息处理的异步操作。</returns>
      <param name="result">表示异步操作以暂停处理消息的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeek(System.IAsyncResult)">
      <summary>完成异步查看操作。</summary>
      <returns>队列中的第一条消息。</returns>
      <param name="result">表示异步查看操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndPeekBatch(System.IAsyncResult)">
      <summary>完成对批消息的异步查看操作。</summary>
      <returns>批处理中第一条消息的集合。</returns>
      <param name="result">表示异步查看批操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceive(System.IAsyncResult)">
      <summary>完成异步操作以接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="result">表示异步操作以接受消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndReceiveBatch(System.IAsyncResult)">
      <summary>完成异步操作以接收批处理。</summary>
      <returns>接收批处理的异步操作。</returns>
      <param name="result">表示异步操作以接受消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndRemoveRule(System.IAsyncResult)">
      <summary>结束异步删除规则操作。</summary>
      <param name="result">引用 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> 的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatDeadLetterPath(System.String,System.String)">
      <summary>使用指定的主题路径和订阅名称构建格式名称死信路径。</summary>
      <returns>使用指定主题路径和订阅名称构建格式名称死信路径生成的<see cref="T:System.String" />。</returns>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="subscriptionName">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.FormatSubscriptionPath(System.String,System.String)">
      <summary>使用指定的主题路径和订阅名称构建格式名称订阅路径。</summary>
      <returns>使用指定主题路径和订阅名称构建格式名称订阅路径生成的<see cref="T:System.String" />。</returns>
      <param name="topicPath">主题的完整路径名。</param>
      <param name="subscriptionName">订阅的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions">
      <summary>获取一个接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
      <returns>接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessions(System.DateTime)">
      <summary>自<paramref name="lastUpdatedTime" />会话状态更新结束后检索所有消息会话。</summary>
      <returns>接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync">
      <summary>异步获取一个接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
      <returns>表示异步获取消息会话操作的任务实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.GetMessageSessionsAsync(System.DateTime)">
      <summary>异步获取一个接受允许对相关消息进行分组以便在单个事务中进行处理的消息会话。</summary>
      <returns>表示异步获取消息会话操作的任务实例。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.MessagingFactory">
      <summary>获取用于创建此订阅客户端的消息传递工厂。</summary>
      <returns>用于创建此订阅客户端的消息传递工厂。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Mode">
      <summary>处理收到的消息时获取消息接收模式。</summary>
      <returns>处理已收到的消息时的消息<see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.Name">
      <summary>获取订阅的名称。</summary>
      <returns>订阅的名称。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnAbort">
      <summary>执行中止操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAcceptMessageSession(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginAcceptMessageSession 操作时执行。</summary>
      <returns>引用异步操作以接受消息会话的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="sessionId">消息会话的会话标识符。</param>
      <param name="receiveMode">使用接收消息处理时的接收模式。</param>
      <param name="serverWaitTime">服务器在超时之前等待处理消息的时间跨度</param>
      <param name="timeout">服务器在超时之前等待处理消息的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginAddRule 操作时执行。</summary>
      <returns>引用异步操作以向订阅添加新规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="description">提供要添加的规则的元数据的规则说明。</param>
      <param name="timeout">此操作在超时之前等待的时间跨度。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行开始关闭操作。</summary>
      <returns>引用异步 BeginClose 的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 BeginClose 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建接收方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(Microsoft.ServiceBus.Messaging.ReceiveMode)" /> 的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="receiveMode">消息 <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginCreateReceiver(System.String,System.String,Microsoft.ServiceBus.Messaging.ReceiveMode,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建接收方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.CreateReceiver(System.String,Microsoft.ServiceBus.Messaging.ReceiveMode)" /> 的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="subQueuePath">子队列的路径。</param>
      <param name="subQueueName">子队列的名称。</param>
      <param name="receiveMode">消息 <see cref="T:Microsoft.ServiceBus.Messaging.ReceiveMode" />。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginGetMessageSessions(System.DateTime,System.AsyncCallback,System.Object)">
      <summary>在调用 BeginGetMessageSessions 操作时执行。</summary>
      <returns>引用异步操作以向订阅添加新规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="lastUpdatedTime">会话上次更新的时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>开始通过运行时客户端协议删除一个来自<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" />的<see cref="T:Microsoft.ServiceBus.Messaging.Rule" />。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" /> 的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="ruleName">要删除的规则名。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRulesByTag(System.String,System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>使用标记开始通过运行时客户端协议删除一个来自<see cref="T:Microsoft.ServiceBus.Messaging.Subscription" />的<see cref="T:Microsoft.ServiceBus.Messaging.Rule" />。</summary>
      <returns>引用异步操作以向订阅添加新规则的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="tag">要使用的标记。</param>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)" />委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnClose(System.TimeSpan)">
      <summary>执行关闭操作。</summary>
      <param name="timeout">操作超时前的等待时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAcceptMessageSession(System.IAsyncResult)">
      <summary>在调用 EndAcceptMessageSession 操作时执行。</summary>
      <returns>允许对相关消息进行分组以便在单个事务中进行处理的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSession" />。</returns>
      <param name="result">表示异步接受消息会话操作状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndAddRule(System.IAsyncResult)">
      <summary>结束<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />的异步调用。</summary>
      <param name="result">来自<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginAddRule(Microsoft.ServiceBus.Messaging.RuleDescription,System.TimeSpan,System.AsyncCallback,System.Object)" />的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndClose(System.IAsyncResult)">
      <summary>执行“结束关闭”操作。</summary>
      <param name="result">引用异步 BeginClose 的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndCreateReceiver(System.IAsyncResult)">
      <summary>执行“结束创建接收方”操作。</summary>
      <returns>一个新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessageReceiver" />对象。</returns>
      <param name="result">引用 <see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.EndCreateReceiver(System.IAsyncResult)" /> 的<see cref="T:System.IAsyncResult" />对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndGetMessageSessions(System.IAsyncResult)">
      <summary>执行“结束获取消息”操作。</summary>
      <returns>结束获取消息操作。</returns>
      <param name="result">消息的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRule(System.IAsyncResult)">
      <summary>结束<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />的异步调用。</summary>
      <param name="result">来自<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnEndRemoveRules(System.IAsyncResult)">
      <summary>结束<see cref="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnBeginRemoveRule(System.String,System.TimeSpan,System.AsyncCallback,System.Object)" />的异步调用。</summary>
      <param name="result">异步的结果。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>在事件驱动的消息泵中处理消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessage(System.Action{Microsoft.ServiceBus.Messaging.BrokeredMessage},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>使用给定的一组<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项处理事件驱动的消息泵中的消息。</summary>
      <param name="callback">操作完成时调用的方法。</param>
      <param name="onMessageOptions">指定用于实例化消息泵的<see cref="T:Microsoft.ServiceBus.Messaging.OnMessageOptions" />选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task})">
      <summary>异步处理消息。</summary>
      <param name="callback">操作完成时调用的异步方法。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.OnMessageAsync(System.Func{Microsoft.ServiceBus.Messaging.BrokeredMessage,System.Threading.Tasks.Task},Microsoft.ServiceBus.Messaging.OnMessageOptions)">
      <summary>异步处理消息。</summary>
      <param name="callback">操作完成时调用的异步方法。</param>
      <param name="onMessageOptions">与消息关联的选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek">
      <summary>返回而不删除队列中的第一条消息。</summary>
      <returns>返回的消息。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Peek(System.Int64)">
      <summary>返回而不删除队列中的第一条消息。</summary>
      <returns>返回的消息。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync">
      <summary>异步返回而不删除队列中的第一条消息。</summary>
      <returns>表示异步查看操作的任务实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekAsync(System.Int64)">
      <summary>异步返回而不删除队列中的第一条消息。</summary>
      <returns>表示异步查看操作的任务实例。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int32)">
      <summary>返回时不删除批处理中的第一条消息。</summary>
      <returns>批处理中的第一条消息的集合。</returns>
      <param name="messageCount">批处理中的消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatch(System.Int64,System.Int32)">
      <summary>返回时不删除批处理中的第一条消息。</summary>
      <returns>批处理中的第一条消息的集合。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
      <param name="messageCount">批处理中的消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int32)">
      <summary>异步返回而不删除批处理中的第一条消息。</summary>
      <returns>表示异步查看批处理操作的任务实例。</returns>
      <param name="messageCount">批处理中的消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.PeekBatchAsync(System.Int64,System.Int32)">
      <summary>异步返回而不删除批处理中的第一条消息。</summary>
      <returns>表示异步查看批处理操作的任务实例。</returns>
      <param name="fromSequenceNumber">浏览消息的起点。</param>
      <param name="messageCount">批处理中的消息数。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.PrefetchCount">
      <summary>获取或设置消息接收者可以同时请求的消息数。</summary>
      <returns>消息接收者可以同时请求的消息数。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">订阅不存在时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果存在认证错误，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.Int64)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="sequenceNumber">要接收的延迟消息的序列号。</param>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.Receive(System.TimeSpan)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />接收消息。</summary>
      <returns>表示已接收消息的<see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />。</returns>
      <param name="serverWaitTime">服务器在超时之前等待接收消息的时间跨度。</param>
      <exception cref="T:System.ArgumentOutOfRangeException">如果 <paramref name="serverWaitTime" />是负值，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">订阅不存在时引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果存在认证错误，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>表示异步接收操作的任务实例。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.Int64)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>表示异步接收操作的任务实例。</returns>
      <param name="sequenceNumber">要接收的延迟消息的序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveAsync(System.TimeSpan)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalReceiver" />异步接收消息。</summary>
      <returns>表示异步接收操作的任务实例。</returns>
      <param name="serverWaitTime">服务器在超时之前等待接收消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>异步操作后接收批处理。</summary>
      <returns>异步操作后的批处理。</returns>
      <param name="sequenceNumbers">序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32)">
      <summary>异步操作后接收批处理。</summary>
      <returns>异步操作后的批处理。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。由于这是近似值，即使消息数高于<paramref name="messageCount" />，返回的消息可能更少。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatch(System.Int32,System.TimeSpan)">
      <summary>异步操作后接收批处理。</summary>
      <returns>异步操作后的批处理。</returns>
      <param name="messageCount">批处理中要接收的最大消息数。</param>
      <param name="serverWaitTime">服务器等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Collections.Generic.IEnumerable{System.Int64})">
      <summary>异步接收一组消息（用于批处理）。</summary>
      <returns>表示异步接收批处理操作的任务实例。</returns>
      <param name="sequenceNumbers">序列号。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32)">
      <summary>异步接收一组消息（用于批处理）。</summary>
      <returns>表示异步接收批处理操作的任务实例。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.ReceiveBatchAsync(System.Int32,System.TimeSpan)">
      <summary>异步接收一组消息（用于批处理）。</summary>
      <returns>表示异步接收批处理操作的任务实例。</returns>
      <param name="messageCount">批处理中要返回的最大消息数。</param>
      <param name="serverWaitTime">服务器等待处理消息的时间跨度。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type)">
      <summary>注册客户端会话的处理程序。</summary>
      <param name="handlerType">处理程序的类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandler(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>注册客户端会话的处理程序。</summary>
      <param name="handlerType">处理程序的类型。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type)">
      <summary>异步注册客户端会话的处理程序。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="handlerType">处理程序的类型。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerAsync(System.Type,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>异步注册客户端会话的处理程序。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="handlerType">处理程序的类型。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>注册客户端会话的处理程序工厂。</summary>
      <param name="factory">与消息会话关联的处理程序工厂的接口。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactory(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>注册客户端会话的处理程序工厂。</summary>
      <param name="factory">与消息会话关联的处理程序工厂的接口。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionAsyncHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>异步注册客户端会话的处理程序工厂。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="factory">与消息会话关联的处理程序工厂的接口。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RegisterSessionHandlerFactoryAsync(Microsoft.ServiceBus.Messaging.IMessageSessionHandlerFactory,Microsoft.ServiceBus.Messaging.SessionHandlerOptions)">
      <summary>异步注册客户端会话的处理程序工厂。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="factory">与消息会话关联的处理程序工厂的接口。</param>
      <param name="options">会话处理程序选项。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRule(System.String)">
      <summary>删除<paramref name="ruleName" />描述的规则。</summary>
      <param name="ruleName">规则的名称。</param>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">当规则不存在时引发异常。</exception>
      <exception cref="T:System.ArgumentException"><paramref name="description.Name" />为空，空格为空或格式有误时引发异常。</exception>
      <exception cref="T:System.TimeoutException">如果操作超过通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />设置的超时值，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionClient.RemoveRuleAsync(System.String)">
      <summary>异步删除<paramref name="ruleName" />描述的规则。</summary>
      <returns>表示异步删除规则操作的任务实例。</returns>
      <param name="ruleName">规则的名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionClient.TopicPath">
      <summary>获取主题的完整路径名。</summary>
      <returns>主题的完整路径名。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription">
      <summary>表示订阅的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.SubscriptionDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.SubscriptionDescription" />类的新实例。</summary>
      <param name="topicPath">主题路径。</param>
      <param name="subscriptionName">订阅名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AccessedAt">
      <summary>获取上次接收此订阅请求的时间。</summary>
      <returns>上次接收此订阅请求的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AutoDeleteOnIdle">
      <summary>获取或设置 <see cref="T:System.TimeSpan" /> 空闲间隔，在此之后自动删除订阅。最短持续时间为 5 分钟。</summary>
      <returns>订阅空闲时间跨度上的自动删除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.AvailabilityStatus">
      <summary>获取消息传递的实体可用性状态。</summary>
      <returns>消息传递的实体可用性状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.CreatedAt">
      <summary>获取消息的创建时间。</summary>
      <returns>消息创建的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.DefaultMessageTimeToLive">
      <summary>获取或设置实时值的默认消息时间。这是消息到期的持续时间，从消息发送到服务总线开始。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> 未在消息本身上发送时使用该默认值。超过 TimeToLive 值的消息将到期，不再保留在消息存储中。订阅者将无法接收到期消息。消息的 TimeToLive 值可能低于此处指定的值，但默认情况下，TimeToLive 设置为 <see cref="T:System.TimeSpan.MaxValue" />。因此，此属性将成为应用于邮件的默认使用时间值。</summary>
      <returns>订阅的默认消息使用时间值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableBatchedOperations">
      <summary>获取或设置一个值，该值指示是否已启用批处理操作。</summary>
      <returns>如果已启用批处理操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnFilterEvaluationExceptions">
      <summary>获取或设置一个值，该值指示订阅是否对筛选器评估异常具有死信支持。</summary>
      <returns>如果订阅对筛选器评估异常有死信支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.EnableDeadLetteringOnMessageExpiration">
      <summary>获取或设置一个值，该值指示消息到期时订阅是否具有死信支持。</summary>
      <returns>如果订阅在消息到期时具有死信支持，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardDeadLetteredMessagesTo">
      <summary>获取或设置转发死信函消息的收件方的路径。</summary>
      <returns>转发死信函消息的收件方的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.ForwardTo">
      <summary>获取或设置转发消息的收件方的路径。</summary>
      <returns>转发消息的收件方的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.LockDuration">
      <summary>获取或设置订阅的锁定持续时间跨度。</summary>
      <returns>订阅的锁定持续时间跨度。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MaxDeliveryCount">
      <summary>获取或设置最大交付数。</summary>
      <returns>最大传递数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCount">
      <summary>获取消息数。</summary>
      <returns>消息数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageCountDetails">
      <summary>获取有关订阅的消息详细信息。</summary>
      <returns>返回<see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />，其中包含活动消息数、死信、预定消息、传输到其他队列的消息、订阅或主题以及传输到死信队列的消息数。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.SubscriptionDescription.MessageTimeToLiveDefaultValue">
      <summary>指定实时默认值的消息时间。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Name">
      <summary>获取订阅描述的名称。</summary>
      <returns>订阅说明的名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.RequiresSession">
      <summary>获取或设置指示订阅是否支持会话概念的值。</summary>
      <returns>如果接收方应用程序只能通过<see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />从队列接收，则为 true；如果队列无法使用<see cref="T:Microsoft.ServiceBus.Messaging.SessionReceiver" />，则返回 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.Status">
      <summary>获取或设置订阅的当前状态（启用或禁用）。禁用实体时，该实体无法发送或接收消息。</summary>
      <returns>订阅的当前状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.TopicPath">
      <summary>获取此订阅描述所属主题的路径。</summary>
      <returns>此订阅说明所属主题的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UpdatedAt">
      <summary>获取消息更新的确切时间。</summary>
      <returns>消息更新的时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.SubscriptionDescription.UserMetadata">
      <summary>获取或设置用户元数据。</summary>
      <returns>用户元数据。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TileType">
      <summary>枚举消息传递磁贴的类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileSquareImage">
      <summary>TileSquareImage 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideBlockAndText01">
      <summary>TileWideBlockAndText01 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImage">
      <summary>TileWideImage 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageAndText">
      <summary>TileWideImageAndText 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideImageCollection">
      <summary>TileWideImageCollection 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage01">
      <summary>TileWidePeekImage01 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage02">
      <summary>TileWidePeekImage02 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage03">
      <summary>TileWidePeekImage03 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage04">
      <summary>TileWidePeekImage04 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage05">
      <summary>TileWidePeekImage05 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImage06">
      <summary>TileWidePeekImage06 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageAndText">
      <summary>TileWidePeekImageAndText 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection01">
      <summary>TileWidePeekImageCollection01 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection02">
      <summary>TileWidePeekImageCollection02 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection03">
      <summary>TileWidePeekImageCollection03 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection04">
      <summary>TileWidePeekImageCollection04 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection05">
      <summary>TileWidePeekImageCollection05 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWidePeekImageCollection06">
      <summary>TileWidePeekImageCollection06 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText01">
      <summary>TileWideSmallImageAndText01 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText02">
      <summary>TileWideSmallImageAndText02 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText03">
      <summary>TileWideSmallImageAndText03 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideSmallImageAndText04">
      <summary>TileWideSmallImageAndText04 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText01">
      <summary>TileWideText01 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText02">
      <summary>TileWideText02 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText03">
      <summary>TileWideText03 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText04">
      <summary>TileWideText04 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText05">
      <summary>TileWideText05 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText06">
      <summary>TileWideText06 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText07">
      <summary>TileWideText07 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText08">
      <summary>TileWideText08 类。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TileType.TileWideText09">
      <summary>TileWideText09 类。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.ToastType">
      <summary>枚举 Toast 通知的图像和文本类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText01">
      <summary>指定第一类图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText02">
      <summary>指定第二类图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText03">
      <summary>指定第三类图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastImageAndText04">
      <summary>指定第四类图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText01">
      <summary>指定第一类小图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText02">
      <summary>指定第二类小图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText03">
      <summary>指定第三类小图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastSmallImageAndText04">
      <summary>指定第四类小图像和文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText01">
      <summary>指定第一类文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText02">
      <summary>指定第二类文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText03">
      <summary>指定第三类文本。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.ToastType.ToastText04">
      <summary>指定第四类文本。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicClient">
      <summary>访问<see cref="T:Microsoft.ServiceBus.Messaging.Topic" />以执行运行时操作的定位标记。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSend(Microsoft.ServiceBus.Messaging.BrokeredMessage,System.AsyncCallback,System.Object)">
      <summary>开始异步操作以发送消息。</summary>
      <returns>引用异步操作来发送消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="message">待发送的消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。超时期限通过<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings" />初始化。如果超时值相对较小，您可能需要增加<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />值以避免此异常。</exception>
      <exception cref="T:System.ArgumentException">BrokeredMessage 为空时引发异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> 已发送<paramref name="message" />或<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />已发送一次，则引发异常。</exception>
      <exception cref="T:System.NotSupportedException">如果指向的死信主题/订阅不支持发送操作，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.BeginSendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage},System.AsyncCallback,System.Object)">
      <summary>开始异步操作以批量发送消息。</summary>
      <returns>引用异步操作来发送消息的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="messages">待发送的消息。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关异步操作的状态信息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Create(System.String)">
      <summary>创建一个新的<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />实例。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />。</returns>
      <param name="path">路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateFromConnectionString(System.String,System.String)">
      <summary>创建一个新的使用指定连接字符串的<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />实例。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />。</returns>
      <param name="connectionString">使用的连接字符串。</param>
      <param name="path">路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSend(System.IAsyncResult)">
      <summary>完成异步操作以发送消息。</summary>
      <param name="result">表示异步操作以发送消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.EndSendBatch(System.IAsyncResult)">
      <summary>完成异步操作以发送消息。</summary>
      <param name="result">表示异步操作以发送消息状态的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.IsSubQueue">
      <summary>获取或设置一个值，该值指示是否从子队列创建消息接收方。</summary>
      <returns>如果从子队列创建消息接收方，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.MessagingFactory">
      <summary>获取或设置用于创建此<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />对象的消息传递工厂。</summary>
      <returns>用于创建此<see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" />对象的消息传递工厂。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnAbort">
      <summary>执行中止操作。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行开始关闭操作。</summary>
      <returns>引用异步关闭操作的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。操作完成后，此对象将传递给 EndClose 委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnBeginCreateSender(System.TimeSpan,System.AsyncCallback,System.Object)">
      <summary>执行“开始创建发送方”操作。</summary>
      <returns>引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" /> 的<see cref="T:System.IAsyncResult" />。</returns>
      <param name="timeout">操作超时前的等待时间。</param>
      <param name="callback">一个引用操作完成时调用的方法的<see cref="T:System.AsyncCallback" />委托。</param>
      <param name="state">用户定义的对象，其中包含有关接收操作的信息。这个对象在操作完成时传递给了<see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.EndCreateSender(System.IAsyncResult)" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnClose(System.TimeSpan)">
      <summary>执行关闭操作。</summary>
      <param name="timeout">操作超时前的等待时间。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndClose(System.IAsyncResult)">
      <summary>执行“结束关闭”操作。</summary>
      <param name="result">引用异步关闭操作的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.OnEndCreateSender(System.IAsyncResult)">
      <summary>执行“结束创建发送方”操作。</summary>
      <returns>新建的<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />对象。</returns>
      <param name="result">引用异步 <see cref="M:Microsoft.ServiceBus.Messaging.TopicClient.CreateSender" /> 的<see cref="T:System.IAsyncResult" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicClient.Path">
      <summary>获取或设置文件的完整路径名。</summary>
      <returns>文件的完整路径名。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.Send(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />发送消息。</summary>
      <param name="message">待发送的消息。</param>
      <exception cref="T:System.TimeoutException">操作超时时引发。通过初始化超时时间。如果超时值相对较小，<see cref="T:Microsoft.ServiceBus.Messaging.MessagingFactorySettings.OperationTimeout" />以避免此异常。</exception>
      <exception cref="T:System.ArgumentException"><see cref="T:Microsoft.ServiceBus.Messaging.BrokeredMessage" />为空时引发异常。</exception>
      <exception cref="T:System.InvalidOperationException">如果 <see cref="T:Microsoft.ServiceBus.Messaging.TopicClient" /> 已发送<paramref name="message" />或<see cref="T:Microsoft.ServiceBus.Messaging.MessageSender" />已发送一次，则引发异常。</exception>
      <exception cref="T:System.OperationCanceledException">如果客户端实体已关闭或中止，则引发异常。</exception>
      <exception cref="T:System.UnauthorizedAccessException">如果发生 I/O 或安全性错误，则引发异常。</exception>
      <exception cref="T:System.Runtime.Serialization.SerializationException">序列化或反序列化期间发生错误时引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingEntityNotFoundException">如果主题不存在，则引发异常。</exception>
      <exception cref="T:Microsoft.ServiceBus.Messaging.MessagingException">如果发生消息传递错误，则引发异常。</exception>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendAsync(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>使用<see cref="P:Microsoft.ServiceBus.Messaging.QueueClient.InternalSender" />异步发送消息。</summary>
      <returns>操作的异步结果。</returns>
      <param name="message">待发送的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatch(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>发送一组代理消息（用于批处理）。</summary>
      <param name="messages">待发送的消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicClient.SendBatchAsync(System.Collections.Generic.IEnumerable{Microsoft.ServiceBus.Messaging.BrokeredMessage})">
      <summary>异步发送一组代理消息（用于批处理）。</summary>
      <returns>操作的异步结果。</returns>
      <param name="messages">待发送的消息。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TopicDescription">
      <summary>表示主题的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TopicDescription.#ctor(System.String)">
      <summary>初始化一个新的具有指定相对路径的<see cref="T:Microsoft.ServiceBus.Messaging.TopicDescription" />实例。</summary>
      <param name="path">主题相对于服务命名空间基址的路径。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AccessedAt">
      <summary>获取上次将消息发送到主题的时间和日期。</summary>
      <returns>上次将消息发送到主题的时间和日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Authorization">
      <summary>获取描述的授权规则。</summary>
      <returns>描述的授权规则。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AutoDeleteOnIdle">
      <summary>获取或设置 <see cref="T:System.TimeSpan" /> 空闲间隔，在此之后自动删除话题。最短持续时间为 5 分钟。</summary>
      <returns>主题空闲时间跨度上的自动删除。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.AvailabilityStatus">
      <summary>获取此实例的可用性状态。</summary>
      <returns>此实例的可用性状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.CreatedAt">
      <summary>获取创建主题的时间和日期。</summary>
      <returns>创建主题的时间和日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DefaultMessageTimeToLive">
      <summary>为一个话题获取或设置实时值的默认消息时间。这是消息到期的持续时间，从消息发送到服务总线开始。<see cref="P:Microsoft.ServiceBus.Messaging.BrokeredMessage.TimeToLive" /> 未在消息本身上发送时使用该默认值。超过 TimeToLive 值的消息将到期，不再保留在消息存储中。订阅者将无法接收到期消息。</summary>
      <returns>主题的默认消息使用时间值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.DuplicateDetectionHistoryTimeWindow">
      <summary>获取或设置定义重复检测历史的持续时间的<see cref="T:System.TimeSpan" />结构。</summary>
      <returns>定义重复检测历史的持续时间的<see cref="T:System.TimeSpan" />结构。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableBatchedOperations">
      <summary>获取或设置一个值，该值指示是否启用了服务器端批处理操作。</summary>
      <returns>如果已启用批处理操作，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableExpress">
      <summary>获取或设置一个值，该值指示是否启用了 Express 实体。Express 主题在将其写入持久存储之前暂时在内存中保留消息。</summary>
      <returns>如果启用了 Express 实体，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnableFilteringMessagesBeforePublishing">
      <summary>获取或设置消息是否应在发布之前过滤。</summary>
      <returns>如果在发布前启用了消息过滤，则为 true；否则为 false。</returns>
      <exception cref="T:Microsoft.ServiceBus.Messaging.NoMatchingSubscriptionException">如果订阅不匹配则引发异常。</exception>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.EnablePartitioning">
      <summary>获取或设置是否允许跨多个消息代理对话题进行分区。Express 主题在将其写入持久存储之前暂时在内存中保留消息。</summary>
      <returns>如果允许主题能够跨多个消息代理进行分区，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.IsAnonymousAccessible">
      <summary>获取是否允许匿名访问。</summary>
      <returns>如果允许匿名访问，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MaxSizeInMegabytes">
      <summary>获取或设置主题的最大大小（以兆字节为单位），即为主题分配的内存大小。</summary>
      <returns>最大大小（以兆字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.MessageCountDetails">
      <summary>获取有关主题的消息详细信息。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Messaging.MessageCountDetails" />中包含活动消息数、失效信件、预定消息、传输到其他队列的消息、订阅或主题以及传输到死信队列的消息数。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TopicDescription.MessageTimeToLiveDefaultValue">
      <summary>指定实时默认值的消息时间。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Path">
      <summary>获取主题的路径。</summary>
      <returns>主题的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.RequiresDuplicateDetection">
      <summary>获取或设置指示主题是否需要重复检测的值。</summary>
      <returns>如果主题需要重复检测，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SizeInBytes">
      <summary>获取主题的大小（以字节为单位）。</summary>
      <returns>主题的大小（以字节为单位）。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.Status">
      <summary>获取或设置话题的当前状态（启用或禁用）。禁用实体时，该实体无法发送或接收消息。</summary>
      <returns>主题的状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SubscriptionCount">
      <summary>然后获取订阅数。</summary>
      <returns>表示订阅数的<see cref="T:System.Int32" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.SupportOrdering">
      <summary>获取或设置支持排序方法。</summary>
      <returns>支持排序方法。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UpdatedAt">
      <summary>获取主题更新的时间和日期。</summary>
      <returns>主题更新的时间和日期。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TopicDescription.UserMetadata">
      <summary>获取或设置与描述关联的用户元数据。</summary>
      <returns>与描述相关联的用户元数据。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException">
      <summary>表示事务大小超过时的异常。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" />类的新实例。</summary>
      <param name="message">异常消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException.#ctor(System.String,System.Exception)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.TransactionSizeExceededException" />类的新实例。</summary>
      <param name="message">异常消息。</param>
      <param name="innerException">导致异常的错误。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TransportType">
      <summary>枚举消息传递传输类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.Amqp">
      <summary>高级消息队列协议传输类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.TransportType.NetMessaging">
      <summary>网络消息传输类型。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.TrueFilter">
      <summary>匹配筛选器表达式。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.TrueFilter" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Match(Microsoft.ServiceBus.Messaging.BrokeredMessage)">
      <summary>匹配当前 SQL 表达式的消息。</summary>
      <returns>如果匹配，则为 true；否则为 false。</returns>
      <param name="message">代理消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Preprocess">
      <summary>获取预处理的筛选器表达式。</summary>
      <returns>预处理的筛选器表达式。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.TrueFilter.RequiresPreprocessing">
      <summary>获取一个值，该值指示 SQL 筛选器表达式是否需要预处理。</summary>
      <returns>如果 SQL 筛选器表达式需要预处理，则为 true；否则为 false。目前总是返回 true。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.TrueFilter.Validate">
      <summary>验证 SQL 表达式。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings">
      <summary>表示高级消息队列协议传输设置。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.BatchFlushInterval">
      <summary>获取或设置与传输关联的批刷新间隔。</summary>
      <returns>与传输相关联的批刷新间隔。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.Clone">
      <summary>创建一个新对象，该对象是当前实例的副本。</summary>
      <returns>一个新对象，它是此实例的副本。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.MaxFrameSize">
      <summary>获取或设置最大帧尺寸。</summary>
      <returns>最大帧尺寸。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Amqp.AmqpTransportSettings.UseSslStreamSecurity">
      <summary>获取一个值，该值指示 SSL 流是否使用自定义绑定元素。</summary>
      <returns>如果 SSL 流使用自定义绑定元素，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType">
      <summary>枚举与序列化关联的编码类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.List">
      <summary>List 编码类型。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Messaging.Amqp.Serialization.EncodingType.Map">
      <summary>Map 编码类型。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement">
      <summary>表示包含指定使用<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />绑定设置的设置的子元素的配置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingCollectionElement" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement">
      <summary>表示指定<see cref="T:Microsoft.ServiceBus.Messaging.NetMessagingBinding" />配置的 XML 元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.#ctor(System.String)">
      <summary>初始化一个新的使用指定名称的<see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement" /> 实例。</summary>
      <param name="name">名称。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.PrefetchCount">
      <summary>获取或设置预取的数量。</summary>
      <returns>预取的数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.SessionIdleTimeout">
      <summary>获取或设置 SessionIdleTimeout。</summary>
      <returns>如果 IInputSessionChannel.TryReceive 操作未在此 TimeSpan 中收到任何消息，则通道将指示会话结束。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingBindingExtensionElement.TransportSettings">
      <summary>获取或设置网络消息传递的传输设置元素。</summary>
      <returns>网络消息传递的传输设置元素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement">
      <summary>表示网络消息传输扩展元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.ApplyConfiguration(System.ServiceModel.Channels.BindingElement)">
      <summary>将指定的<see cref="T:System.ServiceModel.Channels.BindingElement" />设置应用到该配置元素。</summary>
      <param name="bindingElement">该配置元素的<see cref="T:System.ServiceModel.Channels.BindingElement" />。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.BindingElementType">
      <summary>获取正在使用的绑定元素的类型。</summary>
      <returns>正在使用的绑定元素的类型。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.CopyFrom(System.ServiceModel.Configuration.ServiceModelExtensionElement)">
      <summary>将指定配置元素中的设置复制到此配置元素。</summary>
      <param name="from">要将其设置复制到此配置元素的配置元素。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.PrefetchCount">
      <summary>获取或设置预取的数量。</summary>
      <returns>预取的数量。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.SessionIdleTimeout">
      <summary>获取或设置 SessionIdleTimeout。</summary>
      <returns>如果 IInputSessionChannel.TryReceive 操作未在此 TimeSpan 中收到任何消息，则通道将指示会话结束。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportExtensionElement.TransportSettings">
      <summary>获取或设置网络消息传递的传输设置元素。</summary>
      <returns>网络消息传递的传输设置元素。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement">
      <summary>表示网络消息传递的传输设置元素。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.BatchFlushInterval">
      <summary>获取或设置批刷新间隔。</summary>
      <returns>表示批刷新间隔的<see cref="T:System.TimeSpan" />。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Messaging.Configuration.NetMessagingTransportSettingsElement.EnableRedirect">
      <summary>获取或设置一个值，该值指示是否启用重定向。</summary>
      <returns>如果启用了重定向，则为 true；否则为 false。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmCredential">
      <summary>表示服务总线的管理凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmCredential" />类的新实例。</summary>
      <param name="clientId">客户端标识符。</param>
      <param name="clientSecret">凭证密钥访问密钥。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.AuthTokenUrl">
      <summary>获取或设置授权令牌的 URL。</summary>
      <returns>授权令牌的 URL。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientId">
      <summary>获取或设置客户端标识符。</summary>
      <returns>客户端标识符。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.ClientSecret">
      <summary>获取或设置凭证密钥访问密钥。</summary>
      <returns>凭证密钥访问密钥。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.Equals(System.Object)">
      <summary>指定此凭证是否与特定对象相同。</summary>
      <returns>如果此凭证与特定对象相同，则为 true；否则为 false。</returns>
      <param name="other">要比较的对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.GetHashCode">
      <summary>检索凭证的散列码。</summary>
      <returns>凭证的散列码。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmCredential.OnValidate(System.Boolean)">
      <summary>验证管理凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmCredential.SendUrlTemplate">
      <summary>获取或设置发送 URL 模板。</summary>
      <returns>发送 URL 模板。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmNotification">
      <summary>表示管理员通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmNotification.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription">
      <summary>表示管理员注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">资源注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" />类的新实例。</summary>
      <param name="admRegistrationId">管理注册标识符。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription" />类的新实例。</summary>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="tags">注册标签。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmRegistrationDescription.AdmRegistrationId">
      <summary>获取或设置管理注册标识符。</summary>
      <returns>管理注册标识符。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription">
      <summary>表示管理模板注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription)">
      <summary>初始化一个新的具有指定源注册的<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" />实例。</summary>
      <param name="sourceRegistration">资源注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String)">
      <summary>初始化一个新的具有指定管理注册标识符的<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" />实例。</summary>
      <param name="admRegistrationId">管理注册标识符。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.BodyTemplate">
      <summary>获取或设置 CDataMember 通知的正文。</summary>
      <returns>CDataMember 通知的正文。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AdmTemplateRegistrationDescription.TemplateName">
      <summary>获取或设置模板的名称。</summary>
      <returns>模板的名称。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ApnsCredential">
      <summary>表示 Apple 推送通知服务 (APNS) 凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.Byte[],System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" />类的新实例。</summary>
      <param name="certificateBuffer">证书缓冲区。</param>
      <param name="certificateKey">认证密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.ApnsCredential" />类的新实例。</summary>
      <param name="certificatePath">证书路径。</param>
      <param name="certificateKey">证书密钥。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.ApnsCertificate">
      <summary>获取或设置 APNS 证书。</summary>
      <returns>APNS 证书。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.CertificateKey">
      <summary>获取或设置证书密钥。</summary>
      <returns>证书密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.ApnsCredential.Endpoint">
      <summary>获取或设置此凭证的端点。</summary>
      <returns>此凭证的端点。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.Equals(System.Object)">
      <summary>指定凭证是否与特定对象相同。</summary>
      <returns>如果凭证与特定对象相同，则为 true；否则为 false。</returns>
      <param name="other">要比较的另一个对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.GetHashCode">
      <summary>检索凭证的散列码。</summary>
      <returns>凭证的散列码。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.ApnsCredential.OnValidate(System.Boolean)">
      <summary>验证 APNS 凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleNotification">
      <summary>表示 Apple 通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="expiry">通知到期。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.Nullable{System.DateTime},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="expiry">通知到期。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleNotification.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleNotification.Expiry">
      <summary>获取或设置通知的到期日期和时间。</summary>
      <returns>通知的到期日期和时间。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription">
      <summary>代表 apple 注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" />类的新实例。</summary>
      <param name="deviceToken">设备令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription" />类的新实例。</summary>
      <param name="deviceToken">设备令牌。</param>
      <param name="tags">描述标签列表。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleRegistrationDescription.DeviceToken">
      <summary>获取或设置设备令牌。</summary>
      <returns>设备令牌。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription">
      <summary>表示 Apple 模板注册的说明。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String)">
      <summary>初始化的新实例 <see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" /> 类。</summary>
      <param name="deviceToken">设备令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="deviceToken">设备令牌。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="deviceToken">设备令牌。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.BodyTemplate">
      <summary>获取或设置正文模板。</summary>
      <returns>正文模板。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.Expiry">
      <summary>获取或设置注册的到期日期和时间。</summary>
      <returns>注册的到期日期和时间。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.AppleTemplateRegistrationDescription.TemplateName">
      <summary>获取或设置模板的名称。</summary>
      <returns>模板的名称。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.CDataMember">
      <summary>表示<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />的通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.#ctor(System.String)">
      <summary>初始化一个新的具有指定值的<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />实例。</summary>
      <param name="value">指定值。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GenerateSchema(System.Xml.Schema.XmlSchemaSet)">
      <summary>生成 XML 模式转换的模式表示。</summary>
      <returns>XML 模式转换的模式表示。</returns>
      <param name="xs">XML 模式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.GetSchema">
      <summary>返回 XML 模式的模式表示。</summary>
      <returns>XML 模式的模式表示。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(Microsoft.ServiceBus.Notifications.CDataMember)~System.String">
      <summary>将指定值转换为<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />对象。</summary>
      <returns>转换<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />对象的值。</returns>
      <param name="value">要转换的值。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.op_Implicit(System.String)~Microsoft.ServiceBus.Notifications.CDataMember">
      <summary>将<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />对象转换为指定值。</summary>
      <returns>要转换为指定值得<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />对象。</returns>
      <param name="value">要转换的值。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ReadXml(System.Xml.XmlReader)">
      <summary>从 XML 表示中读取 XML 表示。</summary>
      <param name="reader">用于读取数据的 XML 读取器。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.ToString">
      <summary>返回表示当前对象的字符串。</summary>
      <returns>表示当前对象的字符串。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CDataMember.Value">
      <summary>获取或设置<see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />的值。</summary>
      <returns><see cref="T:Microsoft.ServiceBus.Notifications.CDataMember" />的值。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CDataMember.WriteXml(System.Xml.XmlWriter)">
      <summary>将 XML 数据写入 XML 表示。</summary>
      <param name="writer">要写入的 XML 编写器。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1">
      <summary>表示集合查询结果。</summary>
      <typeparam name="T">结果的类型。</typeparam>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.ContinuationToken">
      <summary>获取或设置用于检索下一组结果的延续令牌。</summary>
      <returns>延续令牌。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.GetEnumerator">
      <summary>返回循环访问集合的枚举器。</summary>
      <returns>循环访问集合的枚举器。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.CollectionQueryResult`1.System#Collections#IEnumerable#GetEnumerator">
      <summary>返回循环访问集合的枚举器。</summary>
      <returns>循环访问集合的枚举器。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmCredential">
      <summary>表示 Google Cloud Messaging 凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmCredential" />类的新实例。</summary>
      <param name="googleApiKey">Google API 密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.Equals(System.Object)">
      <summary>指定凭证是否与特定对象相同。</summary>
      <returns>如果凭证与特定对象相同，则为 true；否则为 false。</returns>
      <param name="other">要比较的另一个对象。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GcmEndpoint">
      <summary>获取或设置 GCM 端点。</summary>
      <returns>GCM 端点。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.GetHashCode">
      <summary>检索凭证的散列码。</summary>
      <returns>凭证的散列码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmCredential.GoogleApiKey">
      <summary>获取或设置 Google API 密钥。</summary>
      <returns>Google API 密钥。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmCredential.OnValidate(System.Boolean)">
      <summary>被调用以验证给定的凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmNotification">
      <summary>表示 Google Cloud Messaging 通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmNotification.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmNotification" />类的新实例。</summary>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription">
      <summary>表示 GCM 注册的说明。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" />类的新实例。</summary>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription" />类的新实例。</summary>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmRegistrationDescription.GcmRegistrationId">
      <summary>获取或设置 GCM 注册 ID。</summary>
      <returns>GCM 注册 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription">
      <summary>表示 GCM 模板注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.BodyTemplate">
      <summary>获取或设置正文模板。</summary>
      <returns>正文模板。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.GcmTemplateRegistrationDescription.TemplateName">
      <summary>获取或设置 GCM 模板的名称。</summary>
      <returns>GCM 模板的名称。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsCredential">
      <summary>提供 Microsoft 推送通知服务 (MPNS) 的凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Byte[],System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" />类的新实例。</summary>
      <param name="certificateBuffer">证书缓冲区。</param>
      <param name="certificateKey">证书密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" />类的新实例。</summary>
      <param name="mpnsCertificate">MPNS 证书。</param>
      <param name="certificateKey">证书密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" />类的新实例。</summary>
      <param name="certificatePath">证书路径。</param>
      <param name="certificateKey">证书密钥。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.CertificateKey">
      <summary>获取或设置此凭证的证书密钥。</summary>
      <returns>此凭证的证书密钥。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.Equals(System.Object)">
      <summary>指定凭证是否与特定对象相同。</summary>
      <returns>如果凭证与特定对象相同，则为 true；否则为 false。</returns>
      <param name="other">要比较的另一个对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.GetHashCode">
      <summary>检索凭证的散列码。</summary>
      <returns>凭证的散列码。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsCredential.MpnsCertificate">
      <summary>获取或设置 MPNS 证书。</summary>
      <returns>MPNS 证书。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsCredential.OnValidate(System.Boolean)">
      <summary>验证 MPNS 凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection">
      <summary>提供 MPNS 标头的集合。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsHeaderCollection" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsNotification">
      <summary>提供 Microsoft 推送通知服务 (MPNS) 的通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="mpnsHeaders">MPNS 标题。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="mpnsHeaders">MPNS 标题。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="mpnsHeaders">MPNS 标题。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="mpnsHeaders">MPNS 标题。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription">
      <summary>提供 MPNS 注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsRegistrationDescription.ChannelUri">
      <summary>获取或设置通道 URI。</summary>
      <returns>通道 URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription">
      <summary>提供 MPNS 模板注册的描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">注册源。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="mpnsHeaders">MPNS 标头列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="mpnsHeaders">MPNS 标头列表。</param>
      <param name="tags">描述标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="tags">描述标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="mpnsHeaders">WNS 标头列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="mpnsHeaders">WNS 标头列表。</param>
      <param name="tags">描述标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="tags">描述标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.BodyTemplate">
      <summary>获取或设置正文模板。</summary>
      <returns>正文模板。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.MpnsHeaders">
      <summary>获取或设置 MPNS 标头的集合。</summary>
      <returns>MPNS 标头的集合。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.MpnsTemplateRegistrationDescription.TemplateName">
      <summary>获取或设置 MPNS 模板的名称。</summary>
      <returns>返回<see cref="T:System.String" />。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.Notification">
      <summary>表示通用通知中心通知的抽象类，包括目标标记。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.Notification" />类的新实例。</summary>
      <param name="additionalHeaders">额外标头。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.AddOrUpdateHeader(System.String,System.String)">
      <summary>添加或更新具有给定键和值的标头。</summary>
      <param name="key">标头键。</param>
      <param name="value">标头值。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Body">
      <summary>获取或设置通知的正文。</summary>
      <returns>通知的正文。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.ContentType">
      <summary>获取或设置通知的内容类型。</summary>
      <returns>通知的内容类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Headers">
      <summary>获取或设置与通知关联的标头列表。</summary>
      <returns>与通知关联的标头列表。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.Notification.OnValidateAndPopulateHeaders">
      <summary>验证并填充标头。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.PlatformType">
      <summary>获取通知的平台类型。</summary>
      <returns>通知的平台类型。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.Notification.Tag">
      <summary>获取或设置通知标记。</summary>
      <returns>通知标记。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubClient">
      <summary>表示通知中心客户端。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String)">
      <summary>异步创建本机管理注册。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="admRegistrationId">管理注册标识符。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建本机管理注册。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="tags">注册标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String)">
      <summary>同步创建管理模板注册。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAdmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>同步创建管理模板注册。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="admRegistrationId">管理注册标识符。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String)">
      <summary>异步创建 Apple 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="deviceToken">设备令牌。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 Apple 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="deviceToken">设备令牌。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String)">
      <summary>异步创建 Apple 模板注册。要在创建时指定其他属性，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="deviceToken">设备令牌。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateAppleTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 Apple 模板注册。要在创建时指定其他属性，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="deviceToken">设备令牌。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String)">
      <summary>从连接字符串创建客户端。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />。</returns>
      <param name="connectionString">连接字符串。</param>
      <param name="notificationHubPath">通知中心路径。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateClientFromConnectionString(System.String,System.String,System.Boolean)">
      <summary>从连接字符串创建客户端。</summary>
      <returns>已创建的<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubClient" />。</returns>
      <param name="connectionString">连接字符串。</param>
      <param name="notificationHubPath">通知中心路径。</param>
      <param name="enableTestSend">true 表示启用测试发送；否则为 false。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String)">
      <summary>异步创建 GCM 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 GCM 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String)">
      <summary>异步创建 GCM 模板注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateGcmTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 GCM 模板注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="gcmRegistrationId">GCM 注册 ID。</param>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String)">
      <summary>异步创建 MPNS 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 MPNS 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String)">
      <summary>异步创建 MPNS 模板注册。要在创建时指定其他属性，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateMpnsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 MPNS 模板注册。要在创建时指定其他属性，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateOrUpdateRegistrationAsync``1(``0)">
      <summary>异步创建或更新客户端注册。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="registration">要创建或更新的注册。</param>
      <typeparam name="T">注册类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationAsync``1(``0)">
      <summary>异步创建注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registration">要创建的注册。</param>
      <typeparam name="T">注册类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateRegistrationIdAsync">
      <summary>异步创建注册标识符。</summary>
      <returns>表示异步操作的任务对象。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String)">
      <summary>异步创建 Windows 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsNativeRegistrationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 Windows 本机注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String)">
      <summary>异步创建 Windows 模板注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.CreateWindowsTemplateRegistrationAsync(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步创建 Windows 模板注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary>异步删除注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registration">要删除的注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String)">
      <summary>异步删除注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registrationId">注册 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationAsync(System.String,System.String)">
      <summary>异步删除注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registrationId">注册 ID。</param>
      <param name="etag">实体标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.DeleteRegistrationsByChannelAsync(System.String)">
      <summary>按通道异步删除注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="pnsHandle">PNS 句柄。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubClient.EnableTestSend">
      <summary>获取或设置一个值，该值指示客户端是否启用测试发送。</summary>
      <returns>如果客户端启用测试发送，则为 true；否则为 false。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.Int32)">
      <summary>异步检索此通知中心中的所有注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="top">注册地点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetAllRegistrationsAsync(System.String,System.Int32)">
      <summary>异步检索此通知中心中的所有注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="continuationToken">延续令牌。</param>
      <param name="top">注册地点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetBaseUri">
      <summary>获取 BaseUri 附加属性的值。</summary>
      <returns>给定元素的基本 URI。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationAsync``1(System.String)">
      <summary>异步检索具有给定 ID 的注册。注册的类型取决于指定的<paramref name="TRegistrationDescription" />参数。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registrationId">注册 ID。</param>
      <typeparam name="TRegistrationDescription">注册说明的类型。</typeparam>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.Int32)">
      <summary>异步按通道获取注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="pnsHandle">PNS 句柄。</param>
      <param name="top">注册地点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByChannelAsync(System.String,System.String,System.Int32)">
      <summary>异步按通道获取注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="pnsHandle">PNS 句柄。</param>
      <param name="continuationToken">延续令牌。</param>
      <param name="top">注册地点。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.Int32)">
      <summary>异步通过标记获取注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="tag">标签。</param>
      <param name="top">获得注册的位置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.GetRegistrationsByTagAsync(System.String,System.String,System.Int32)">
      <summary>异步通过标记获取注册。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="tag">标签。</param>
      <param name="continuationToken">延续令牌。</param>
      <param name="top">获得注册的位置。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.RegistrationExistsAsync(System.String)">
      <summary>异步表示注册已存在。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="registrationId">注册 ID。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String)">
      <summary>异步发送管理本机通知。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步发送管理本机通知。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">标签。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAdmNativeNotificationAsync(System.String,System.String)">
      <summary>异步发送管理本机通知。</summary>
      <returns>表示异步操作的任务对象。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tagExpression">标记表示。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String)">
      <summary>异步发送 Apple 本机通知。要指定到期日期，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步将 Apple 本机通知发送到非空标记集（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。要指定到期日期，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">非空标记集（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendAppleNativeNotificationAsync(System.String,System.String)">
      <summary>异步向标记表达式发送 Apple 本机通知（单个标记“tag”是有效的标记表达式）。要指定到期日期，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String)">
      <summary>异步发送 GCM 本机通知。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步将 GCM 本机通知发送到非空标记集（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tags">非空标记集（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendGcmNativeNotificationAsync(System.String,System.String)">
      <summary>异步将 GCM 本机通知发送到标记表达式（单个标记“tag”是有效的标记表达式）。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="jsonPayload">JSON 有效负载。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String)">
      <summary>异步发送 MPNS 本机通知。要为 MPNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="nativePayload">本机有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步将 MPNS 本机通知发送到非空标记集（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。要为 MPNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="nativePayload">通知有效负载。</param>
      <param name="tags">非空标记集（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendMpnsNativeNotificationAsync(System.String,System.String)">
      <summary>异步将 MPNS 本机通知发送到标记表达式（单个标记“tag”是有效的标记表达式）。要为 MPNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="nativePayload">本机有效负载。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)">
      <summary>异步向非空标记集发送通知（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="notification">要发送的通知。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步向非空标记集发送通知（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="notification">要发送的通知。</param>
      <param name="tags">一组非空标记（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification,System.String)">
      <summary>异步向标记表达式发送通知（单个标记“tag”是有效的标记表达式）。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="notification">要发送的通知。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>异步发送模板通知。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="properties">模板属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步将模板通知发送到非空标记集（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="properties">模板属性。</param>
      <param name="tags">非空标记集（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendTemplateNotificationAsync(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>异步向标记表达式发送模板通知（单个标记“tag”是有效的标记表达式）。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="properties">模板属性。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String)">
      <summary>异步发送 Windows 本机通知。要为 WNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="windowsNativePayload">Windows 本机有效负载。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>异步将 Windows 本机通知发送到非空标记集（最多 20 个）。这相当于带有布尔值 OR（“||”）的标记表达式。要为 WNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="windowsNativePayload">Windows 本机有效负载。</param>
      <param name="tags">一组非空标记（最多 20 个标记）。集合中的每个字符串都可以包含单个标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendWindowsNativeNotificationAsync(System.String,System.String)">
      <summary>异步将 Windows 本机通知发送到标记表达式（单个标记“tag”是有效的标记表达式）。要为 WNS 指定标头，请使用<see cref="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.SendNotificationAsync(Microsoft.ServiceBus.Notifications.Notification)" />方法。</summary>
      <returns>完成异步操作的任务。</returns>
      <param name="windowsNativePayload">Windows 本机有效负载。</param>
      <param name="tagExpression">标记表达式是使用逻辑运算符 AND（&amp;&amp;）、OR（||），NOT（！）和圆括号构造的任何布尔表达式。例如：(A || B) &amp;&amp; !C.如果表达式仅使用 Or，则最多可包含 20 个标记。其他表达式仅限于 6 个标记。请注意，单个标记“A”是有效表达式。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubClient.UpdateRegistrationAsync``1(``0)">
      <summary>异步更新注册。</summary>
      <returns>更新完成后将完成的任务。</returns>
      <param name="registration">待更新的注册。</param>
      <typeparam name="T">注册类型。</typeparam>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription">
      <summary>表示通知中心描述。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.NotificationHubDescription" />类的新实例。</summary>
      <param name="path">描述的路径。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.AdmCredential">
      <summary>获取或设置管理凭证。</summary>
      <returns>管理凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.ApnsCredential">
      <summary>获取或设置 APNS 凭证。</summary>
      <returns>APNS 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Authorization">
      <summary>获取此描述的授权规则。</summary>
      <returns>此描述的授权规则。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyApiCalls">
      <summary>获取通知的每日 API 调用。</summary>
      <returns>通知的每日 API 调用。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveDevices">
      <summary>获取通知的每日最大活动设备数。</summary>
      <returns>通知的每日最大活动设备数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyMaxActiveRegistrations">
      <summary>获取通知的每日最大有效注册数。</summary>
      <returns>通知的每日最大有效注册数。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyOperations">
      <summary>获取描述的每日操作。</summary>
      <returns>描述的每日操作。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DailyPushes">
      <summary>获取通知的每日推送。</summary>
      <returns>通知的每日推送。</returns>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultFullSasRuleName">
      <summary>指定默认的完整 SAS 规则名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationHubDescription.DefaultListenSasRuleName">
      <summary>指定默认侦听 SAS 规则名称。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.GcmCredential">
      <summary>获取或设置 GCM 凭证。</summary>
      <returns>GCM 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.IsAnonymousAccessible">
      <summary>获取一个值，该值指示描述是否可匿名访问。</summary>
      <returns>如果描述可匿名访问，则为 true；否则为 false。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.MpnsCredential">
      <summary>获取或设置 MPNS 凭证。一个没有定义证书的<see cref="T:Microsoft.ServiceBus.Notifications.MpnsCredential" />实例启用 MPNS 未经身份验证的 MPNS 支持。</summary>
      <returns>MPNS 凭证。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.Path">
      <summary>获取或设置此描述的路径。</summary>
      <returns>此描述的路径。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.RegistrationTtl">
      <summary>获取或设置此通知中心中所有注册的到期时间。</summary>
      <returns>注册 TTL。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetAccessPasswords(System.String,System.String,System.String,System.String)">
      <summary>设置访问密码。</summary>
      <param name="fullAccessRuleName">完整访问规则名称。</param>
      <param name="fullAccessPassword">完整的访问密码。</param>
      <param name="listenAccessRuleName">监听访问规则名称。</param>
      <param name="listenAccessPassword">监听访问密码。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationHubDescription.SetDefaultAccessPasswords(System.String,System.String)">
      <summary>设置默认访问密码。</summary>
      <param name="fullAccessPassword">完整的访问密码。</param>
      <param name="listenAccessPassword">监听访问密码。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.UserMetadata">
      <summary>获取或设置与描述关联的用户元数据。</summary>
      <returns>与描述相关联的用户元数据。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationHubDescription.WnsCredential">
      <summary>获取或设置 WNS 凭证。</summary>
      <returns>WNS 凭证。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcome">
      <summary>表示通知结果。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.NotificationOutcome.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.NotificationOutcome" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Failure">
      <summary>获取或设置结果的故障值。</summary>
      <returns>结果的故障值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Results">
      <summary>获取或设置通知结果列表。</summary>
      <returns>通知结果列表。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.State">
      <summary>获取或设置此通知结果的状态。</summary>
      <returns>此通知结果的状态。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.Success">
      <summary>获取或设置结果的成功值。</summary>
      <returns>结果的成功值。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.NotificationOutcome.TrackingId">
      <summary>获取或设置跟踪 ID。</summary>
      <returns>跟踪 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.NotificationOutcomeState">
      <summary>指定通知结果状态的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.DetailedStateAvailable">
      <summary>结果的详细状态是可用的。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Notifications.NotificationOutcomeState.Enqueued">
      <summary>通知结果排队。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.PnsCredential">
      <summary>表示 PNS 凭证。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.BlockedOn">
      <summary>获取或设置此凭证被阻止的时间和日期。</summary>
      <returns>此凭证被阻止的时间和日期。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.IsEqual(Microsoft.ServiceBus.Notifications.PnsCredential,Microsoft.ServiceBus.Notifications.PnsCredential)">
      <summary>指定两个凭证是否相等。</summary>
      <returns>如果两个凭证相等，则为 true；否则为 false。</returns>
      <param name="cred1">要比较的第已个凭证。</param>
      <param name="cred2">要比较的第二个凭证。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Item(System.String)">
      <summary>获取或设置与此凭证关联的值。</summary>
      <returns>与此凭证关联的值。</returns>
      <param name="name">凭证的名称。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.PnsCredential.OnValidate(System.Boolean)">
      <summary>验证凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.PnsCredential.Properties">
      <summary>获取或设置此凭证的属性。</summary>
      <returns>此凭据的属性。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationDescription">
      <summary>表示注册说明。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.RegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.RegistrationDescription" />类的新实例。</summary>
      <param name="registration">注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Deserialize(System.String)">
      <summary>从序列化数据中提取注册描述。</summary>
      <returns>注册说明。</returns>
      <param name="descriptionString">与注册相关的描述。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ETag">
      <summary>获取或设置与此描述关联的 ETag。</summary>
      <returns>与此描述关联的 ETag。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.ExpirationTime">
      <summary>获取或设置注册的到期时间。</summary>
      <returns>注册的到期时间。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.GenerateUrlSafeBase64(System.Byte[])">
      <summary>生成 URL 安全 Base64。</summary>
      <returns>生成的 URL 安全 Base64。</returns>
      <param name="hash">散列。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.RegistrationId">
      <summary>获取或设置注册 ID。</summary>
      <returns>注册 ID。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.Serialize">
      <summary>序列化注册说明。</summary>
      <returns>序列化的注册说明。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.TagCount(System.String)">
      <summary>返回标记总数。</summary>
      <returns>标记总数。</returns>
      <param name="tags">标签。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationDescription.Tags">
      <summary>获取或设置与注册关联的一组标记。</summary>
      <returns>与注册关联的一组标记。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationDescription.ValidateTags(System.String)">
      <summary>验证给定的标记。</summary>
      <returns>如果标记通过验证，则为 true；否则为 false。</returns>
      <param name="tags">要验证的标记。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.RegistrationResult">
      <summary>表示注册的结果。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.RegistrationResult.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.RegistrationResult" />类的新实例。</summary>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.ApplicationPlatform">
      <summary>获取或设置应用程序平台。</summary>
      <returns>应用程序平台。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.Outcome">
      <summary>获取或设置注册结果。</summary>
      <returns>注册结果。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.PnsHandle">
      <summary>获取或设置 PNS 句柄。</summary>
      <returns>PNS 句柄。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.RegistrationResult.RegistrationId">
      <summary>获取或设置注册 ID。</summary>
      <returns>注册 ID。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.ScheduledNotification"></member>
    <member name="M:Microsoft.ServiceBus.Notifications.ScheduledNotification.#ctor"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Payload"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledNotificationId"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.ScheduledTime"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.Tags"></member>
    <member name="P:Microsoft.ServiceBus.Notifications.ScheduledNotification.TrackingId"></member>
    <member name="T:Microsoft.ServiceBus.Notifications.TemplateNotification">
      <summary>表示模板通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" />类的新实例。</summary>
      <param name="templateProperties">模板属性。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.TemplateNotification.#ctor(System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.TemplateNotification" />类的新实例。</summary>
      <param name="templateProperties">模板属性。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsNotification">
      <summary>表示 Windows 通知。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="wnsHeaders">WNS 标头列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="wnsHeaders">WNS 标头列表。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="wnsHeaders">WNS 标头列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.Collections.Generic.IDictionary{System.String,System.String},System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="wnsHeaders">WNS 标头列表。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsNotification.#ctor(System.Xml.XmlDocument,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsNotification" />类的新实例。</summary>
      <param name="payLoad">有效载荷。</param>
      <param name="tag">通知标记。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription">
      <summary>提供 Windows 注册的说明。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">资源注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">标记列表。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.#ctor(System.Uri,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="tags">标记列表。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsRegistrationDescription.ChannelUri">
      <summary>获取或设置通道 URI。</summary>
      <returns>通道 URI。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription">
      <summary>提供 Windows 模板注册的说明。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="sourceRegistration">资源注册。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="wnsHeaders">WNS 标头。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="wnsHeaders">WNS 标头。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.String,System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="wnsHeaders">WNS 标头。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="wnsHeaders">WNS 标头。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.String,System.Collections.Generic.IEnumerable{System.String})">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="templatePayload">XML 模板。</param>
      <param name="tags">描述标记。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.#ctor(System.Uri,System.Xml.XmlDocument)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription" />类的新实例。</summary>
      <param name="channelUri">通道 URI。</param>
      <param name="xmlTemplate">XML 模板。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.BodyTemplate">
      <summary>获取或设置正文模板。</summary>
      <returns>正文模板。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.TemplateName">
      <summary>获取或设置模板名称。</summary>
      <returns>模板名称。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WindowsTemplateRegistrationDescription.WnsHeaders">
      <summary>获取或设置 WNS 标头的集合。</summary>
      <returns>WNS 标头的集合。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsCredential">
      <summary>表示 WNS 凭证。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" />类的新实例。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.#ctor(System.String,System.String)">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WnsCredential" />类的新实例。</summary>
      <param name="packageSid">软件包 ID。</param>
      <param name="secretKey">密钥。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.Equals(System.Object)">
      <summary>指定此实例是否与指定对象相同。</summary>
      <returns>返回<see cref="T:System.Boolean" />。</returns>
      <param name="other">要比较的另一个对象。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.GetHashCode">
      <summary>检索凭证的散列码。</summary>
      <returns>凭证的散列码。</returns>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsCredential.OnValidate(System.Boolean)">
      <summary>验证凭证。</summary>
      <param name="allowLocalMockPns">如果允许本地模拟 PNS，则为 true；否则为 false。</param>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.PackageSid">
      <summary>获取或设置此凭证的软件包 ID。</summary>
      <returns>此凭证的软件包 ID。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.SecretKey">
      <summary>获取或设置密钥。</summary>
      <returns>密钥。</returns>
    </member>
    <member name="P:Microsoft.ServiceBus.Notifications.WnsCredential.WindowsLiveEndpoint">
      <summary>获取或设置 Windows 实时端点。</summary>
      <returns>Windows 实时端点。</returns>
    </member>
    <member name="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection">
      <summary>表示 Windows 推送通知服务 (WNS) 标头的集合。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Notifications.WnsHeaderCollection.#ctor">
      <summary>初始化<see cref="T:Microsoft.ServiceBus.Notifications.WnsHeaderCollection" />类的新实例。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.ControllerCommand">
      <summary>指定控制器命令的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Disable">
      <summary>禁用命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Enable">
      <summary>启用命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.SendManifest">
      <summary>SendManifest 命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.ControllerCommand.Update">
      <summary>更新命令。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventChannel">
      <summary>枚举与服务总线关联的事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Application">
      <summary>应用程序事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Default">
      <summary>默认事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Reserved">
      <summary>保留事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Security">
      <summary>安全事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.Setup">
      <summary>设置事件。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventChannel.System">
      <summary>系统事件。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventCommand">
      <summary>指定事件命令的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Disable">
      <summary>禁用命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Enable">
      <summary>启用命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.SendManifest">
      <summary>SendManifest 命令。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventCommand.Update">
      <summary>更新命令。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventKeywords">
      <summary>指定适用于事件的标准关键字。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.All">
      <summary>关键字是 All。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditFailure">
      <summary>关键字是 AuditFailure。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.AuditSuccess">
      <summary>关键字是 AuditSuccess。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.CorrelationHint">
      <summary>关键字是 CorrelationHint。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.EventLogClassic">
      <summary>关键字是 EventLogClassic。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.None">
      <summary>关键字为 None。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.Sqm">
      <summary>关键字是 Sqm。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiContext">
      <summary>关键字是 WdiContext。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventKeywords.WdiDiagnostic">
      <summary>关键字是 WdiDiagnostic。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventLevel">
      <summary>指定在事件提供程序中定义的事件级别的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Critical">
      <summary>级别是 Critical。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Error">
      <summary>级别是 Error。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Informational">
      <summary>级别是 Informational。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.LogAlways">
      <summary>级别是 LogAlways。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Verbose">
      <summary>级别是 Verbose。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventLevel.Warning">
      <summary>级别是 Warning。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventOpcode">
      <summary>指定事件操作码的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStart">
      <summary>DataCollectionStart 操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.DataCollectionStop">
      <summary>DataCollectionStop 操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Extension">
      <summary>Extension （扩展）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Info">
      <summary>Info 操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Receive">
      <summary>Receive （接收）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Reply">
      <summary>Reply （回复）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Resume">
      <summary>Resume （继续）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Send">
      <summary>Send （发送）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Start">
      <summary>Start （开始）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Stop">
      <summary>Stop （停止）操作码。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventOpcode.Suspend">
      <summary>Suspend （暂停）操作码。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.EventTask">
      <summary>指定包含在事件提供程序中定义的事件任务的枚举。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.EventTask.None">
      <summary>任务是 None。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Tracing.TrackingContext">
      <summary>提供用于跟踪消息传递实体中更改的上下文属性。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.HeaderNamespace">
      <summary>指定标头命名空间。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.SystemTrackerName">
      <summary>指定系统跟踪器的名称。</summary>
    </member>
    <member name="F:Microsoft.ServiceBus.Tracing.TrackingContext.TrackingIdName">
      <summary>指定返回的令牌响应中跟踪标识符的属性名称。</summary>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamMessageHelper">
      <summary>用于从流内容创建 Message 对象的 Helper。</summary>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateJsonMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>创建具有指定版本的 JSON 消息。</summary>
      <returns>已创建的 JSON 消息。</returns>
      <param name="version">消息版本。</param>
      <param name="action">有关如何处理消息的说明。</param>
      <param name="jsonStream">包含用于编写新消息正文的内容的流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,Microsoft.ServiceBus.Web.StreamWriterDelegate)">
      <summary>使用指定的版本、操作和委托从流创建消息。</summary>
      <returns>返回流创建的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="version">指定用于新建消息的寻址和信封版本。如果使用 REST 提出请求，则寻址和信封版本为 None。</param>
      <param name="action">有关如何处理消息的说明。对于响应 HTTP 请求而发送的消息，该值必须为“GETRESPONSE”。</param>
      <param name="writer">允许<see cref="Overload:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage" /> 回调并要求流填充消息正文的委托。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.CreateMessage(System.ServiceModel.Channels.MessageVersion,System.String,System.IO.Stream)">
      <summary>使用指定的版本、操作和流创建消息。</summary>
      <returns>返回流创建的 <see cref="T:System.ServiceModel.Channels.Message" />。</returns>
      <param name="version">指定用于新建消息的寻址和信封版本。如果使用 REST 提出请求，则寻址和信封版本为 None。</param>
      <param name="action">有关如何处理消息的说明。对于响应 HTTP 请求而发送的消息，该值必须为“GETRESPONSE”。</param>
      <param name="stream">包含用于编写新消息正文的内容的流。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.ServiceModel.Channels.Message)">
      <summary>检索指定消息的流。</summary>
      <returns>返回一个包含消息流的<see cref="T:System.IO.Stream" />。无论消息的正文是否为空，始终返回流。</returns>
      <param name="message">消息。</param>
    </member>
    <member name="M:Microsoft.ServiceBus.Web.StreamMessageHelper.GetStream(System.Xml.XmlDictionaryReader)">
      <summary>使用指定的读取器检索指定消息的流。</summary>
      <returns>指定消息的流。</returns>
      <param name="reader">读取器。</param>
    </member>
    <member name="T:Microsoft.ServiceBus.Web.StreamWriterDelegate">
      <summary>StreamMessageHelper 使用此委托来写入流式消息的正文。</summary>
      <param name="output">写入消息正文的流。</param>
    </member>
  </members>
</doc>